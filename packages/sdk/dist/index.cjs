'use strict';

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
var __accessCheck = (obj, member, msg) => {
  if (!member.has(obj))
    throw TypeError("Cannot " + msg);
};
var __privateGet = (obj, member, getter) => {
  __accessCheck(obj, member, "read from private field");
  return getter ? getter.call(obj) : member.get(obj);
};
var __privateAdd = (obj, member, value) => {
  if (member.has(obj))
    throw TypeError("Cannot add the same private member more than once");
  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
};
var __privateSet = (obj, member, value, setter) => {
  __accessCheck(obj, member, "write to private field");
  setter ? setter.call(obj, value) : member.set(obj, value);
  return value;
};
var __privateWrapper = (obj, member, setter, getter) => ({
  set _(value) {
    __privateSet(obj, member, value, setter);
  },
  get _() {
    return __privateGet(obj, member, getter);
  }
});
var __privateMethod = (obj, member, method) => {
  __accessCheck(obj, member, "access private method");
  return method;
};

// src/typechain/factories/index.ts
var factories_exports = {};
__export(factories_exports, {
  artifacts: () => artifacts_exports,
  nodeModules: () => node_modules_exports
});

// src/typechain/factories/artifacts/index.ts
var artifacts_exports = {};
__export(artifacts_exports, {
  contracts: () => contracts_exports5,
  openzeppelin: () => openzeppelin_exports
});

// src/typechain/factories/artifacts/@openzeppelin/index.ts
var openzeppelin_exports = {};
__export(openzeppelin_exports, {
  contracts: () => contracts_exports,
  contractsUpgradeable: () => contracts_upgradeable_exports
});

// src/typechain/factories/artifacts/@openzeppelin/contracts/index.ts
var contracts_exports = {};
__export(contracts_exports, {
  access: () => access_exports,
  interfaces: () => interfaces_exports,
  proxy: () => proxy_exports,
  security: () => security_exports,
  token: () => token_exports,
  utils: () => utils_exports
});

// src/typechain/factories/artifacts/@openzeppelin/contracts/access/index.ts
var access_exports = {};
__export(access_exports, {
  AccessControl__factory: () => AccessControl__factory,
  IAccessControl__factory: () => IAccessControl__factory,
  Ownable__factory: () => Ownable__factory
});

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/_version.js
var version = "6.9.0";

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/utils/properties.js
function checkType(value, type, name) {
  const types = type.split("|").map((t) => t.trim());
  for (let i = 0; i < types.length; i++) {
    switch (type) {
      case "any":
        return;
      case "bigint":
      case "boolean":
      case "number":
      case "string":
        if (typeof value === type) {
          return;
        }
    }
  }
  const error = new Error(`invalid value for type ${type}`);
  error.code = "INVALID_ARGUMENT";
  error.argument = `value.${name}`;
  error.value = value;
  throw error;
}
async function resolveProperties(value) {
  const keys = Object.keys(value);
  const results = await Promise.all(keys.map((k) => Promise.resolve(value[k])));
  return results.reduce((accum, v, index) => {
    accum[keys[index]] = v;
    return accum;
  }, {});
}
function defineProperties(target, values, types) {
  for (let key in values) {
    let value = values[key];
    const type = types ? types[key] : null;
    if (type) {
      checkType(value, type, key);
    }
    Object.defineProperty(target, key, { enumerable: true, value, writable: false });
  }
}

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/utils/errors.js
function stringify(value) {
  if (value == null) {
    return "null";
  }
  if (Array.isArray(value)) {
    return "[ " + value.map(stringify).join(", ") + " ]";
  }
  if (value instanceof Uint8Array) {
    const HEX = "0123456789abcdef";
    let result = "0x";
    for (let i = 0; i < value.length; i++) {
      result += HEX[value[i] >> 4];
      result += HEX[value[i] & 15];
    }
    return result;
  }
  if (typeof value === "object" && typeof value.toJSON === "function") {
    return stringify(value.toJSON());
  }
  switch (typeof value) {
    case "boolean":
    case "symbol":
      return value.toString();
    case "bigint":
      return BigInt(value).toString();
    case "number":
      return value.toString();
    case "string":
      return JSON.stringify(value);
    case "object": {
      const keys = Object.keys(value);
      keys.sort();
      return "{ " + keys.map((k) => `${stringify(k)}: ${stringify(value[k])}`).join(", ") + " }";
    }
  }
  return `[ COULD NOT SERIALIZE ]`;
}
function isError(error, code) {
  return error && error.code === code;
}
function isCallException(error) {
  return isError(error, "CALL_EXCEPTION");
}
function makeError(message, code, info) {
  let shortMessage = message;
  {
    const details = [];
    if (info) {
      if ("message" in info || "code" in info || "name" in info) {
        throw new Error(`value will overwrite populated values: ${stringify(info)}`);
      }
      for (const key in info) {
        if (key === "shortMessage") {
          continue;
        }
        const value = info[key];
        details.push(key + "=" + stringify(value));
      }
    }
    details.push(`code=${code}`);
    details.push(`version=${version}`);
    if (details.length) {
      message += " (" + details.join(", ") + ")";
    }
  }
  let error;
  switch (code) {
    case "INVALID_ARGUMENT":
      error = new TypeError(message);
      break;
    case "NUMERIC_FAULT":
    case "BUFFER_OVERRUN":
      error = new RangeError(message);
      break;
    default:
      error = new Error(message);
  }
  defineProperties(error, { code });
  if (info) {
    Object.assign(error, info);
  }
  if (error.shortMessage == null) {
    defineProperties(error, { shortMessage });
  }
  return error;
}
function assert(check, message, code, info) {
  if (!check) {
    throw makeError(message, code, info);
  }
}
function assertArgument(check, message, name, value) {
  assert(check, message, "INVALID_ARGUMENT", { argument: name, value });
}
function assertArgumentCount(count, expectedCount, message) {
  if (message == null) {
    message = "";
  }
  if (message) {
    message = ": " + message;
  }
  assert(count >= expectedCount, "missing arguemnt" + message, "MISSING_ARGUMENT", {
    count,
    expectedCount
  });
  assert(count <= expectedCount, "too many arguemnts" + message, "UNEXPECTED_ARGUMENT", {
    count,
    expectedCount
  });
}
var _normalizeForms = ["NFD", "NFC", "NFKD", "NFKC"].reduce((accum, form) => {
  try {
    if ("test".normalize(form) !== "test") {
      throw new Error("bad");
    }
    ;
    if (form === "NFD") {
      const check = String.fromCharCode(233).normalize("NFD");
      const expected = String.fromCharCode(101, 769);
      if (check !== expected) {
        throw new Error("broken");
      }
    }
    accum.push(form);
  } catch (error) {
  }
  return accum;
}, []);
function assertNormalize(form) {
  assert(_normalizeForms.indexOf(form) >= 0, "platform missing String.prototype.normalize", "UNSUPPORTED_OPERATION", {
    operation: "String.prototype.normalize",
    info: { form }
  });
}
function assertPrivate(givenGuard, guard, className) {
  if (className == null) {
    className = "";
  }
  if (givenGuard !== guard) {
    let method = className, operation = "new";
    if (className) {
      method += ".";
      operation += " " + className;
    }
    assert(false, `private constructor; use ${method}from* methods`, "UNSUPPORTED_OPERATION", {
      operation
    });
  }
}

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/utils/data.js
function _getBytes(value, name, copy) {
  if (value instanceof Uint8Array) {
    if (copy) {
      return new Uint8Array(value);
    }
    return value;
  }
  if (typeof value === "string" && value.match(/^0x([0-9a-f][0-9a-f])*$/i)) {
    const result = new Uint8Array((value.length - 2) / 2);
    let offset = 2;
    for (let i = 0; i < result.length; i++) {
      result[i] = parseInt(value.substring(offset, offset + 2), 16);
      offset += 2;
    }
    return result;
  }
  assertArgument(false, "invalid BytesLike value", name || "value", value);
}
function getBytes(value, name) {
  return _getBytes(value, name, false);
}
function getBytesCopy(value, name) {
  return _getBytes(value, name, true);
}
function isHexString(value, length) {
  if (typeof value !== "string" || !value.match(/^0x[0-9A-Fa-f]*$/)) {
    return false;
  }
  if (typeof length === "number" && value.length !== 2 + 2 * length) {
    return false;
  }
  if (length === true && value.length % 2 !== 0) {
    return false;
  }
  return true;
}
var HexCharacters = "0123456789abcdef";
function hexlify(data) {
  const bytes2 = getBytes(data);
  let result = "0x";
  for (let i = 0; i < bytes2.length; i++) {
    const v = bytes2[i];
    result += HexCharacters[(v & 240) >> 4] + HexCharacters[v & 15];
  }
  return result;
}
function concat(datas) {
  return "0x" + datas.map((d) => hexlify(d).substring(2)).join("");
}
function dataSlice(data, start, end) {
  const bytes2 = getBytes(data);
  if (end != null && end > bytes2.length) {
    assert(false, "cannot slice beyond data bounds", "BUFFER_OVERRUN", {
      buffer: bytes2,
      length: bytes2.length,
      offset: end
    });
  }
  return hexlify(bytes2.slice(start == null ? 0 : start, end == null ? bytes2.length : end));
}
function zeroPad(data, length, left) {
  const bytes2 = getBytes(data);
  assert(length >= bytes2.length, "padding exceeds data length", "BUFFER_OVERRUN", {
    buffer: new Uint8Array(bytes2),
    length,
    offset: length + 1
  });
  const result = new Uint8Array(length);
  result.fill(0);
  if (left) {
    result.set(bytes2, length - bytes2.length);
  } else {
    result.set(bytes2, 0);
  }
  return hexlify(result);
}
function zeroPadValue(data, length) {
  return zeroPad(data, length, true);
}
function zeroPadBytes(data, length) {
  return zeroPad(data, length, false);
}

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/utils/maths.js
var BN_0 = BigInt(0);
var BN_1 = BigInt(1);
var maxValue = 9007199254740991;
function fromTwos(_value, _width) {
  const value = getUint(_value, "value");
  const width = BigInt(getNumber(_width, "width"));
  assert(value >> width === BN_0, "overflow", "NUMERIC_FAULT", {
    operation: "fromTwos",
    fault: "overflow",
    value: _value
  });
  if (value >> width - BN_1) {
    const mask2 = (BN_1 << width) - BN_1;
    return -((~value & mask2) + BN_1);
  }
  return value;
}
function toTwos(_value, _width) {
  let value = getBigInt(_value, "value");
  const width = BigInt(getNumber(_width, "width"));
  const limit = BN_1 << width - BN_1;
  if (value < BN_0) {
    value = -value;
    assert(value <= limit, "too low", "NUMERIC_FAULT", {
      operation: "toTwos",
      fault: "overflow",
      value: _value
    });
    const mask2 = (BN_1 << width) - BN_1;
    return (~value & mask2) + BN_1;
  } else {
    assert(value < limit, "too high", "NUMERIC_FAULT", {
      operation: "toTwos",
      fault: "overflow",
      value: _value
    });
  }
  return value;
}
function mask(_value, _bits) {
  const value = getUint(_value, "value");
  const bits = BigInt(getNumber(_bits, "bits"));
  return value & (BN_1 << bits) - BN_1;
}
function getBigInt(value, name) {
  switch (typeof value) {
    case "bigint":
      return value;
    case "number":
      assertArgument(Number.isInteger(value), "underflow", name || "value", value);
      assertArgument(value >= -maxValue && value <= maxValue, "overflow", name || "value", value);
      return BigInt(value);
    case "string":
      try {
        if (value === "") {
          throw new Error("empty string");
        }
        if (value[0] === "-" && value[1] !== "-") {
          return -BigInt(value.substring(1));
        }
        return BigInt(value);
      } catch (e) {
        assertArgument(false, `invalid BigNumberish string: ${e.message}`, name || "value", value);
      }
  }
  assertArgument(false, "invalid BigNumberish value", name || "value", value);
}
function getUint(value, name) {
  const result = getBigInt(value, name);
  assert(result >= BN_0, "unsigned value cannot be negative", "NUMERIC_FAULT", {
    fault: "overflow",
    operation: "getUint",
    value
  });
  return result;
}
var Nibbles = "0123456789abcdef";
function toBigInt(value) {
  if (value instanceof Uint8Array) {
    let result = "0x0";
    for (const v of value) {
      result += Nibbles[v >> 4];
      result += Nibbles[v & 15];
    }
    return BigInt(result);
  }
  return getBigInt(value);
}
function getNumber(value, name) {
  switch (typeof value) {
    case "bigint":
      assertArgument(value >= -maxValue && value <= maxValue, "overflow", name || "value", value);
      return Number(value);
    case "number":
      assertArgument(Number.isInteger(value), "underflow", name || "value", value);
      assertArgument(value >= -maxValue && value <= maxValue, "overflow", name || "value", value);
      return value;
    case "string":
      try {
        if (value === "") {
          throw new Error("empty string");
        }
        return getNumber(BigInt(value), name);
      } catch (e) {
        assertArgument(false, `invalid numeric string: ${e.message}`, name || "value", value);
      }
  }
  assertArgument(false, "invalid numeric value", name || "value", value);
}
function toNumber(value) {
  return getNumber(toBigInt(value));
}
function toBeHex(_value, _width) {
  const value = getUint(_value, "value");
  let result = value.toString(16);
  if (_width == null) {
    if (result.length % 2) {
      result = "0" + result;
    }
  } else {
    const width = getNumber(_width, "width");
    assert(width * 2 >= result.length, `value exceeds width (${width} bytes)`, "NUMERIC_FAULT", {
      operation: "toBeHex",
      fault: "overflow",
      value: _value
    });
    while (result.length < width * 2) {
      result = "0" + result;
    }
  }
  return "0x" + result;
}
function toBeArray(_value) {
  const value = getUint(_value, "value");
  if (value === BN_0) {
    return new Uint8Array([]);
  }
  let hex = value.toString(16);
  if (hex.length % 2) {
    hex = "0" + hex;
  }
  const result = new Uint8Array(hex.length / 2);
  for (let i = 0; i < result.length; i++) {
    const offset = i * 2;
    result[i] = parseInt(hex.substring(offset, offset + 2), 16);
  }
  return result;
}

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/utils/events.js
var _listener;
var EventPayload = class {
  /**
   *  Create a new **EventPayload** for %%emitter%% with
   *  the %%listener%% and for %%filter%%.
   */
  constructor(emitter, listener, filter) {
    /**
     *  The event filter.
     */
    __publicField(this, "filter");
    /**
     *  The **EventEmitterable**.
     */
    __publicField(this, "emitter");
    __privateAdd(this, _listener, void 0);
    __privateSet(this, _listener, listener);
    defineProperties(this, { emitter, filter });
  }
  /**
   *  Unregister the triggered listener for future events.
   */
  async removeListener() {
    if (__privateGet(this, _listener) == null) {
      return;
    }
    await this.emitter.off(this.filter, __privateGet(this, _listener));
  }
};
_listener = new WeakMap();

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/utils/utf8.js
function errorFunc(reason, offset, bytes2, output2, badCodepoint) {
  assertArgument(false, `invalid codepoint at offset ${offset}; ${reason}`, "bytes", bytes2);
}
function ignoreFunc(reason, offset, bytes2, output2, badCodepoint) {
  if (reason === "BAD_PREFIX" || reason === "UNEXPECTED_CONTINUE") {
    let i = 0;
    for (let o = offset + 1; o < bytes2.length; o++) {
      if (bytes2[o] >> 6 !== 2) {
        break;
      }
      i++;
    }
    return i;
  }
  if (reason === "OVERRUN") {
    return bytes2.length - offset - 1;
  }
  return 0;
}
function replaceFunc(reason, offset, bytes2, output2, badCodepoint) {
  if (reason === "OVERLONG") {
    assertArgument(typeof badCodepoint === "number", "invalid bad code point for replacement", "badCodepoint", badCodepoint);
    output2.push(badCodepoint);
    return 0;
  }
  output2.push(65533);
  return ignoreFunc(reason, offset, bytes2);
}
var Utf8ErrorFuncs = Object.freeze({
  error: errorFunc,
  ignore: ignoreFunc,
  replace: replaceFunc
});
function getUtf8CodePoints(_bytes, onError) {
  if (onError == null) {
    onError = Utf8ErrorFuncs.error;
  }
  const bytes2 = getBytes(_bytes, "bytes");
  const result = [];
  let i = 0;
  while (i < bytes2.length) {
    const c = bytes2[i++];
    if (c >> 7 === 0) {
      result.push(c);
      continue;
    }
    let extraLength = null;
    let overlongMask = null;
    if ((c & 224) === 192) {
      extraLength = 1;
      overlongMask = 127;
    } else if ((c & 240) === 224) {
      extraLength = 2;
      overlongMask = 2047;
    } else if ((c & 248) === 240) {
      extraLength = 3;
      overlongMask = 65535;
    } else {
      if ((c & 192) === 128) {
        i += onError("UNEXPECTED_CONTINUE", i - 1, bytes2, result);
      } else {
        i += onError("BAD_PREFIX", i - 1, bytes2, result);
      }
      continue;
    }
    if (i - 1 + extraLength >= bytes2.length) {
      i += onError("OVERRUN", i - 1, bytes2, result);
      continue;
    }
    let res = c & (1 << 8 - extraLength - 1) - 1;
    for (let j = 0; j < extraLength; j++) {
      let nextChar = bytes2[i];
      if ((nextChar & 192) != 128) {
        i += onError("MISSING_CONTINUE", i, bytes2, result);
        res = null;
        break;
      }
      res = res << 6 | nextChar & 63;
      i++;
    }
    if (res === null) {
      continue;
    }
    if (res > 1114111) {
      i += onError("OUT_OF_RANGE", i - 1 - extraLength, bytes2, result, res);
      continue;
    }
    if (res >= 55296 && res <= 57343) {
      i += onError("UTF16_SURROGATE", i - 1 - extraLength, bytes2, result, res);
      continue;
    }
    if (res <= overlongMask) {
      i += onError("OVERLONG", i - 1 - extraLength, bytes2, result, res);
      continue;
    }
    result.push(res);
  }
  return result;
}
function toUtf8Bytes(str, form) {
  if (form != null) {
    assertNormalize(form);
    str = str.normalize(form);
  }
  let result = [];
  for (let i = 0; i < str.length; i++) {
    const c = str.charCodeAt(i);
    if (c < 128) {
      result.push(c);
    } else if (c < 2048) {
      result.push(c >> 6 | 192);
      result.push(c & 63 | 128);
    } else if ((c & 64512) == 55296) {
      i++;
      const c2 = str.charCodeAt(i);
      assertArgument(i < str.length && (c2 & 64512) === 56320, "invalid surrogate pair", "str", str);
      const pair = 65536 + ((c & 1023) << 10) + (c2 & 1023);
      result.push(pair >> 18 | 240);
      result.push(pair >> 12 & 63 | 128);
      result.push(pair >> 6 & 63 | 128);
      result.push(pair & 63 | 128);
    } else {
      result.push(c >> 12 | 224);
      result.push(c >> 6 & 63 | 128);
      result.push(c & 63 | 128);
    }
  }
  return new Uint8Array(result);
}
function _toUtf8String(codePoints) {
  return codePoints.map((codePoint) => {
    if (codePoint <= 65535) {
      return String.fromCharCode(codePoint);
    }
    codePoint -= 65536;
    return String.fromCharCode((codePoint >> 10 & 1023) + 55296, (codePoint & 1023) + 56320);
  }).join("");
}
function toUtf8String(bytes2, onError) {
  return _toUtf8String(getUtf8CodePoints(bytes2, onError));
}

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/utils/rlp-encode.js
function arrayifyInteger(value) {
  const result = [];
  while (value) {
    result.unshift(value & 255);
    value >>= 8;
  }
  return result;
}
function _encode(object) {
  if (Array.isArray(object)) {
    let payload = [];
    object.forEach(function(child) {
      payload = payload.concat(_encode(child));
    });
    if (payload.length <= 55) {
      payload.unshift(192 + payload.length);
      return payload;
    }
    const length2 = arrayifyInteger(payload.length);
    length2.unshift(247 + length2.length);
    return length2.concat(payload);
  }
  const data = Array.prototype.slice.call(getBytes(object, "object"));
  if (data.length === 1 && data[0] <= 127) {
    return data;
  } else if (data.length <= 55) {
    data.unshift(128 + data.length);
    return data;
  }
  const length = arrayifyInteger(data.length);
  length.unshift(183 + length.length);
  return length.concat(data);
}
var nibbles = "0123456789abcdef";
function encodeRlp(object) {
  let result = "0x";
  for (const v of _encode(object)) {
    result += nibbles[v >> 4];
    result += nibbles[v & 15];
  }
  return result;
}

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/abi/coders/abstract-coder.js
var WordSize = 32;
var Padding = new Uint8Array(WordSize);
var passProperties = ["then"];
var _guard = {};
function throwError(name, error) {
  const wrapped = new Error(`deferred error during ABI decoding triggered accessing ${name}`);
  wrapped.error = error;
  throw wrapped;
}
var _names;
var _Result = class extends Array {
  /**
   *  @private
   */
  constructor(...args) {
    const guard = args[0];
    let items = args[1];
    let names = (args[2] || []).slice();
    let wrap = true;
    if (guard !== _guard) {
      items = args;
      names = [];
      wrap = false;
    }
    super(items.length);
    __privateAdd(this, _names, void 0);
    items.forEach((item, index) => {
      this[index] = item;
    });
    const nameCounts = names.reduce((accum, name) => {
      if (typeof name === "string") {
        accum.set(name, (accum.get(name) || 0) + 1);
      }
      return accum;
    }, /* @__PURE__ */ new Map());
    __privateSet(this, _names, Object.freeze(items.map((item, index) => {
      const name = names[index];
      if (name != null && nameCounts.get(name) === 1) {
        return name;
      }
      return null;
    })));
    if (!wrap) {
      return;
    }
    Object.freeze(this);
    return new Proxy(this, {
      get: (target, prop, receiver) => {
        if (typeof prop === "string") {
          if (prop.match(/^[0-9]+$/)) {
            const index = getNumber(prop, "%index");
            if (index < 0 || index >= this.length) {
              throw new RangeError("out of result range");
            }
            const item = target[index];
            if (item instanceof Error) {
              throwError(`index ${index}`, item);
            }
            return item;
          }
          if (passProperties.indexOf(prop) >= 0) {
            return Reflect.get(target, prop, receiver);
          }
          const value = target[prop];
          if (value instanceof Function) {
            return function(...args2) {
              return value.apply(this === receiver ? target : this, args2);
            };
          } else if (!(prop in target)) {
            return target.getValue.apply(this === receiver ? target : this, [prop]);
          }
        }
        return Reflect.get(target, prop, receiver);
      }
    });
  }
  /**
   *  Returns the Result as a normal Array.
   *
   *  This will throw if there are any outstanding deferred
   *  errors.
   */
  toArray() {
    const result = [];
    this.forEach((item, index) => {
      if (item instanceof Error) {
        throwError(`index ${index}`, item);
      }
      result.push(item);
    });
    return result;
  }
  /**
   *  Returns the Result as an Object with each name-value pair.
   *
   *  This will throw if any value is unnamed, or if there are
   *  any outstanding deferred errors.
   */
  toObject() {
    return __privateGet(this, _names).reduce((accum, name, index) => {
      assert(name != null, "value at index ${ index } unnamed", "UNSUPPORTED_OPERATION", {
        operation: "toObject()"
      });
      if (!(name in accum)) {
        accum[name] = this.getValue(name);
      }
      return accum;
    }, {});
  }
  /**
   *  @_ignore
   */
  slice(start, end) {
    if (start == null) {
      start = 0;
    }
    if (start < 0) {
      start += this.length;
      if (start < 0) {
        start = 0;
      }
    }
    if (end == null) {
      end = this.length;
    }
    if (end < 0) {
      end += this.length;
      if (end < 0) {
        end = 0;
      }
    }
    if (end > this.length) {
      end = this.length;
    }
    const result = [], names = [];
    for (let i = start; i < end; i++) {
      result.push(this[i]);
      names.push(__privateGet(this, _names)[i]);
    }
    return new _Result(_guard, result, names);
  }
  /**
   *  @_ignore
   */
  filter(callback, thisArg) {
    const result = [], names = [];
    for (let i = 0; i < this.length; i++) {
      const item = this[i];
      if (item instanceof Error) {
        throwError(`index ${i}`, item);
      }
      if (callback.call(thisArg, item, i, this)) {
        result.push(item);
        names.push(__privateGet(this, _names)[i]);
      }
    }
    return new _Result(_guard, result, names);
  }
  /**
   *  @_ignore
   */
  map(callback, thisArg) {
    const result = [];
    for (let i = 0; i < this.length; i++) {
      const item = this[i];
      if (item instanceof Error) {
        throwError(`index ${i}`, item);
      }
      result.push(callback.call(thisArg, item, i, this));
    }
    return result;
  }
  /**
   *  Returns the value for %%name%%.
   *
   *  Since it is possible to have a key whose name conflicts with
   *  a method on a [[Result]] or its superclass Array, or any
   *  JavaScript keyword, this ensures all named values are still
   *  accessible by name.
   */
  getValue(name) {
    const index = __privateGet(this, _names).indexOf(name);
    if (index === -1) {
      return void 0;
    }
    const value = this[index];
    if (value instanceof Error) {
      throwError(`property ${JSON.stringify(name)}`, value.error);
    }
    return value;
  }
  /**
   *  Creates a new [[Result]] for %%items%% with each entry
   *  also accessible by its corresponding name in %%keys%%.
   */
  static fromItems(items, keys) {
    return new _Result(_guard, items, keys);
  }
};
var Result = _Result;
_names = new WeakMap();
function getValue(value) {
  let bytes2 = toBeArray(value);
  assert(bytes2.length <= WordSize, "value out-of-bounds", "BUFFER_OVERRUN", { buffer: bytes2, length: WordSize, offset: bytes2.length });
  if (bytes2.length !== WordSize) {
    bytes2 = getBytesCopy(concat([Padding.slice(bytes2.length % WordSize), bytes2]));
  }
  return bytes2;
}
var Coder = class {
  constructor(name, type, localName, dynamic) {
    // The coder name:
    //   - address, uint256, tuple, array, etc.
    __publicField(this, "name");
    // The fully expanded type, including composite types:
    //   - address, uint256, tuple(address,bytes), uint256[3][4][],  etc.
    __publicField(this, "type");
    // The localName bound in the signature, in this example it is "baz":
    //   - tuple(address foo, uint bar) baz
    __publicField(this, "localName");
    // Whether this type is dynamic:
    //  - Dynamic: bytes, string, address[], tuple(boolean[]), etc.
    //  - Not Dynamic: address, uint256, boolean[3], tuple(address, uint8)
    __publicField(this, "dynamic");
    defineProperties(this, { name, type, localName, dynamic }, {
      name: "string",
      type: "string",
      localName: "string",
      dynamic: "boolean"
    });
  }
  _throwError(message, value) {
    assertArgument(false, message, this.localName, value);
  }
};
var _data, _dataLength, _writeData, writeData_fn;
var Writer = class {
  constructor() {
    __privateAdd(this, _writeData);
    // An array of WordSize lengthed objects to concatenation
    __privateAdd(this, _data, void 0);
    __privateAdd(this, _dataLength, void 0);
    __privateSet(this, _data, []);
    __privateSet(this, _dataLength, 0);
  }
  get data() {
    return concat(__privateGet(this, _data));
  }
  get length() {
    return __privateGet(this, _dataLength);
  }
  appendWriter(writer) {
    return __privateMethod(this, _writeData, writeData_fn).call(this, getBytesCopy(writer.data));
  }
  // Arrayish item; pad on the right to *nearest* WordSize
  writeBytes(value) {
    let bytes2 = getBytesCopy(value);
    const paddingOffset = bytes2.length % WordSize;
    if (paddingOffset) {
      bytes2 = getBytesCopy(concat([bytes2, Padding.slice(paddingOffset)]));
    }
    return __privateMethod(this, _writeData, writeData_fn).call(this, bytes2);
  }
  // Numeric item; pad on the left *to* WordSize
  writeValue(value) {
    return __privateMethod(this, _writeData, writeData_fn).call(this, getValue(value));
  }
  // Inserts a numeric place-holder, returning a callback that can
  // be used to asjust the value later
  writeUpdatableValue() {
    const offset = __privateGet(this, _data).length;
    __privateGet(this, _data).push(Padding);
    __privateSet(this, _dataLength, __privateGet(this, _dataLength) + WordSize);
    return (value) => {
      __privateGet(this, _data)[offset] = getValue(value);
    };
  }
};
_data = new WeakMap();
_dataLength = new WeakMap();
_writeData = new WeakSet();
writeData_fn = function(data) {
  __privateGet(this, _data).push(data);
  __privateSet(this, _dataLength, __privateGet(this, _dataLength) + data.length);
  return data.length;
};
var _data2, _offset, _peekBytes, peekBytes_fn;
var _Reader = class {
  constructor(data, allowLoose) {
    __privateAdd(this, _peekBytes);
    // Allows incomplete unpadded data to be read; otherwise an error
    // is raised if attempting to overrun the buffer. This is required
    // to deal with an old Solidity bug, in which event data for
    // external (not public thoguh) was tightly packed.
    __publicField(this, "allowLoose");
    __privateAdd(this, _data2, void 0);
    __privateAdd(this, _offset, void 0);
    defineProperties(this, { allowLoose: !!allowLoose });
    __privateSet(this, _data2, getBytesCopy(data));
    __privateSet(this, _offset, 0);
  }
  get data() {
    return hexlify(__privateGet(this, _data2));
  }
  get dataLength() {
    return __privateGet(this, _data2).length;
  }
  get consumed() {
    return __privateGet(this, _offset);
  }
  get bytes() {
    return new Uint8Array(__privateGet(this, _data2));
  }
  // Create a sub-reader with the same underlying data, but offset
  subReader(offset) {
    return new _Reader(__privateGet(this, _data2).slice(__privateGet(this, _offset) + offset), this.allowLoose);
  }
  // Read bytes
  readBytes(length, loose) {
    let bytes2 = __privateMethod(this, _peekBytes, peekBytes_fn).call(this, 0, length, !!loose);
    __privateSet(this, _offset, __privateGet(this, _offset) + bytes2.length);
    return bytes2.slice(0, length);
  }
  // Read a numeric values
  readValue() {
    return toBigInt(this.readBytes(WordSize));
  }
  readIndex() {
    return toNumber(this.readBytes(WordSize));
  }
};
var Reader = _Reader;
_data2 = new WeakMap();
_offset = new WeakMap();
_peekBytes = new WeakSet();
peekBytes_fn = function(offset, length, loose) {
  let alignedLength = Math.ceil(length / WordSize) * WordSize;
  if (__privateGet(this, _offset) + alignedLength > __privateGet(this, _data2).length) {
    if (this.allowLoose && loose && __privateGet(this, _offset) + length <= __privateGet(this, _data2).length) {
      alignedLength = length;
    } else {
      assert(false, "data out-of-bounds", "BUFFER_OVERRUN", {
        buffer: getBytesCopy(__privateGet(this, _data2)),
        length: __privateGet(this, _data2).length,
        offset: __privateGet(this, _offset) + alignedLength
      });
    }
  }
  return __privateGet(this, _data2).slice(__privateGet(this, _offset), __privateGet(this, _offset) + alignedLength);
};

// ../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/_assert.js
function number(n2) {
  if (!Number.isSafeInteger(n2) || n2 < 0)
    throw new Error(`Wrong positive integer: ${n2}`);
}
function bytes(b2, ...lengths) {
  if (!(b2 instanceof Uint8Array))
    throw new Error("Expected Uint8Array");
  if (lengths.length > 0 && !lengths.includes(b2.length))
    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b2.length}`);
}
function exists(instance, checkFinished = true) {
  if (instance.destroyed)
    throw new Error("Hash instance has been destroyed");
  if (checkFinished && instance.finished)
    throw new Error("Hash#digest() has already been called");
}
function output(out, instance) {
  bytes(out);
  const min = instance.outputLen;
  if (out.length < min) {
    throw new Error(`digestInto() expects output buffer of length at least ${min}`);
  }
}

// ../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/_u64.js
var U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);
var _32n = /* @__PURE__ */ BigInt(32);
function fromBig(n2, le = false) {
  if (le)
    return { h: Number(n2 & U32_MASK64), l: Number(n2 >> _32n & U32_MASK64) };
  return { h: Number(n2 >> _32n & U32_MASK64) | 0, l: Number(n2 & U32_MASK64) | 0 };
}
function split(lst, le = false) {
  let Ah = new Uint32Array(lst.length);
  let Al = new Uint32Array(lst.length);
  for (let i = 0; i < lst.length; i++) {
    const { h, l } = fromBig(lst[i], le);
    [Ah[i], Al[i]] = [h, l];
  }
  return [Ah, Al];
}
var rotlSH = (h, l, s) => h << s | l >>> 32 - s;
var rotlSL = (h, l, s) => l << s | h >>> 32 - s;
var rotlBH = (h, l, s) => l << s - 32 | h >>> 64 - s;
var rotlBL = (h, l, s) => h << s - 32 | l >>> 64 - s;

// ../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/utils.js
var u8a = (a) => a instanceof Uint8Array;
var u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));
var isLE = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68;
if (!isLE)
  throw new Error("Non little-endian hardware is not supported");
function utf8ToBytes(str) {
  if (typeof str !== "string")
    throw new Error(`utf8ToBytes expected string, got ${typeof str}`);
  return new Uint8Array(new TextEncoder().encode(str));
}
function toBytes(data) {
  if (typeof data === "string")
    data = utf8ToBytes(data);
  if (!u8a(data))
    throw new Error(`expected Uint8Array, got ${typeof data}`);
  return data;
}
var Hash = class {
  // Safe version that clones internal state
  clone() {
    return this._cloneInto();
  }
};
function wrapConstructor(hashCons) {
  const hashC = (msg) => hashCons().update(toBytes(msg)).digest();
  const tmp = hashCons();
  hashC.outputLen = tmp.outputLen;
  hashC.blockLen = tmp.blockLen;
  hashC.create = () => hashCons();
  return hashC;
}

// ../../node_modules/.pnpm/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/sha3.js
var [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];
var _0n = /* @__PURE__ */ BigInt(0);
var _1n = /* @__PURE__ */ BigInt(1);
var _2n = /* @__PURE__ */ BigInt(2);
var _7n = /* @__PURE__ */ BigInt(7);
var _256n = /* @__PURE__ */ BigInt(256);
var _0x71n = /* @__PURE__ */ BigInt(113);
for (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {
  [x, y] = [y, (2 * x + 3 * y) % 5];
  SHA3_PI.push(2 * (5 * y + x));
  SHA3_ROTL.push((round + 1) * (round + 2) / 2 % 64);
  let t = _0n;
  for (let j = 0; j < 7; j++) {
    R = (R << _1n ^ (R >> _7n) * _0x71n) % _256n;
    if (R & _2n)
      t ^= _1n << (_1n << /* @__PURE__ */ BigInt(j)) - _1n;
  }
  _SHA3_IOTA.push(t);
}
var [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);
var rotlH = (h, l, s) => s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s);
var rotlL = (h, l, s) => s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s);
function keccakP(s, rounds = 24) {
  const B = new Uint32Array(5 * 2);
  for (let round = 24 - rounds; round < 24; round++) {
    for (let x = 0; x < 10; x++)
      B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];
    for (let x = 0; x < 10; x += 2) {
      const idx1 = (x + 8) % 10;
      const idx0 = (x + 2) % 10;
      const B0 = B[idx0];
      const B1 = B[idx0 + 1];
      const Th = rotlH(B0, B1, 1) ^ B[idx1];
      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];
      for (let y = 0; y < 50; y += 10) {
        s[x + y] ^= Th;
        s[x + y + 1] ^= Tl;
      }
    }
    let curH = s[2];
    let curL = s[3];
    for (let t = 0; t < 24; t++) {
      const shift = SHA3_ROTL[t];
      const Th = rotlH(curH, curL, shift);
      const Tl = rotlL(curH, curL, shift);
      const PI = SHA3_PI[t];
      curH = s[PI];
      curL = s[PI + 1];
      s[PI] = Th;
      s[PI + 1] = Tl;
    }
    for (let y = 0; y < 50; y += 10) {
      for (let x = 0; x < 10; x++)
        B[x] = s[y + x];
      for (let x = 0; x < 10; x++)
        s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];
    }
    s[0] ^= SHA3_IOTA_H[round];
    s[1] ^= SHA3_IOTA_L[round];
  }
  B.fill(0);
}
var Keccak = class extends Hash {
  // NOTE: we accept arguments in bytes instead of bits here.
  constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {
    super();
    this.blockLen = blockLen;
    this.suffix = suffix;
    this.outputLen = outputLen;
    this.enableXOF = enableXOF;
    this.rounds = rounds;
    this.pos = 0;
    this.posOut = 0;
    this.finished = false;
    this.destroyed = false;
    number(outputLen);
    if (0 >= this.blockLen || this.blockLen >= 200)
      throw new Error("Sha3 supports only keccak-f1600 function");
    this.state = new Uint8Array(200);
    this.state32 = u32(this.state);
  }
  keccak() {
    keccakP(this.state32, this.rounds);
    this.posOut = 0;
    this.pos = 0;
  }
  update(data) {
    exists(this);
    const { blockLen, state } = this;
    data = toBytes(data);
    const len = data.length;
    for (let pos = 0; pos < len; ) {
      const take = Math.min(blockLen - this.pos, len - pos);
      for (let i = 0; i < take; i++)
        state[this.pos++] ^= data[pos++];
      if (this.pos === blockLen)
        this.keccak();
    }
    return this;
  }
  finish() {
    if (this.finished)
      return;
    this.finished = true;
    const { state, suffix, pos, blockLen } = this;
    state[pos] ^= suffix;
    if ((suffix & 128) !== 0 && pos === blockLen - 1)
      this.keccak();
    state[blockLen - 1] ^= 128;
    this.keccak();
  }
  writeInto(out) {
    exists(this, false);
    bytes(out);
    this.finish();
    const bufferOut = this.state;
    const { blockLen } = this;
    for (let pos = 0, len = out.length; pos < len; ) {
      if (this.posOut >= blockLen)
        this.keccak();
      const take = Math.min(blockLen - this.posOut, len - pos);
      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);
      this.posOut += take;
      pos += take;
    }
    return out;
  }
  xofInto(out) {
    if (!this.enableXOF)
      throw new Error("XOF is not possible for this instance");
    return this.writeInto(out);
  }
  xof(bytes2) {
    number(bytes2);
    return this.xofInto(new Uint8Array(bytes2));
  }
  digestInto(out) {
    output(out, this);
    if (this.finished)
      throw new Error("digest() was already called");
    this.writeInto(out);
    this.destroy();
    return out;
  }
  digest() {
    return this.digestInto(new Uint8Array(this.outputLen));
  }
  destroy() {
    this.destroyed = true;
    this.state.fill(0);
  }
  _cloneInto(to) {
    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;
    to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));
    to.state32.set(this.state32);
    to.pos = this.pos;
    to.posOut = this.posOut;
    to.finished = this.finished;
    to.rounds = rounds;
    to.suffix = suffix;
    to.outputLen = outputLen;
    to.enableXOF = enableXOF;
    to.destroyed = this.destroyed;
    return to;
  }
};
var gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));
var keccak_256 = /* @__PURE__ */ gen(1, 136, 256 / 8);

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/crypto/keccak.js
var locked = false;
var _keccak256 = function(data) {
  return keccak_256(data);
};
var __keccak256 = _keccak256;
function keccak256(_data3) {
  const data = getBytes(_data3, "data");
  return hexlify(__keccak256(data));
}
keccak256._ = _keccak256;
keccak256.lock = function() {
  locked = true;
};
keccak256.register = function(func) {
  if (locked) {
    throw new TypeError("keccak256 is locked");
  }
  __keccak256 = func;
};
Object.freeze(keccak256);

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/address/address.js
var BN_02 = BigInt(0);
var BN_36 = BigInt(36);
function getChecksumAddress(address) {
  address = address.toLowerCase();
  const chars = address.substring(2).split("");
  const expanded = new Uint8Array(40);
  for (let i = 0; i < 40; i++) {
    expanded[i] = chars[i].charCodeAt(0);
  }
  const hashed = getBytes(keccak256(expanded));
  for (let i = 0; i < 40; i += 2) {
    if (hashed[i >> 1] >> 4 >= 8) {
      chars[i] = chars[i].toUpperCase();
    }
    if ((hashed[i >> 1] & 15) >= 8) {
      chars[i + 1] = chars[i + 1].toUpperCase();
    }
  }
  return "0x" + chars.join("");
}
var ibanLookup = {};
for (let i = 0; i < 10; i++) {
  ibanLookup[String(i)] = String(i);
}
for (let i = 0; i < 26; i++) {
  ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);
}
var safeDigits = 15;
function ibanChecksum(address) {
  address = address.toUpperCase();
  address = address.substring(4) + address.substring(0, 2) + "00";
  let expanded = address.split("").map((c) => {
    return ibanLookup[c];
  }).join("");
  while (expanded.length >= safeDigits) {
    let block = expanded.substring(0, safeDigits);
    expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);
  }
  let checksum = String(98 - parseInt(expanded, 10) % 97);
  while (checksum.length < 2) {
    checksum = "0" + checksum;
  }
  return checksum;
}
var Base36 = function() {
  const result = {};
  for (let i = 0; i < 36; i++) {
    const key = "0123456789abcdefghijklmnopqrstuvwxyz"[i];
    result[key] = BigInt(i);
  }
  return result;
}();
function fromBase36(value) {
  value = value.toLowerCase();
  let result = BN_02;
  for (let i = 0; i < value.length; i++) {
    result = result * BN_36 + Base36[value[i]];
  }
  return result;
}
function getAddress(address) {
  assertArgument(typeof address === "string", "invalid address", "address", address);
  if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {
    if (!address.startsWith("0x")) {
      address = "0x" + address;
    }
    const result = getChecksumAddress(address);
    assertArgument(!address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) || result === address, "bad address checksum", "address", address);
    return result;
  }
  if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
    assertArgument(address.substring(2, 4) === ibanChecksum(address), "bad icap checksum", "address", address);
    let result = fromBase36(address.substring(4)).toString(16);
    while (result.length < 40) {
      result = "0" + result;
    }
    return getChecksumAddress("0x" + result);
  }
  assertArgument(false, "invalid address", "address", address);
}

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/address/contract-address.js
function getCreateAddress(tx) {
  const from = getAddress(tx.from);
  const nonce = getBigInt(tx.nonce, "tx.nonce");
  let nonceHex = nonce.toString(16);
  if (nonceHex === "0") {
    nonceHex = "0x";
  } else if (nonceHex.length % 2) {
    nonceHex = "0x0" + nonceHex;
  } else {
    nonceHex = "0x" + nonceHex;
  }
  return getAddress(dataSlice(keccak256(encodeRlp([from, nonceHex])), 12));
}

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/address/checks.js
function isAddressable(value) {
  return value && typeof value.getAddress === "function";
}
async function checkAddress(target, promise) {
  const result = await promise;
  if (result == null || result === "0x0000000000000000000000000000000000000000") {
    assert(typeof target !== "string", "unconfigured name", "UNCONFIGURED_NAME", { value: target });
    assertArgument(false, "invalid AddressLike value; did not resolve to a value address", "target", target);
  }
  return getAddress(result);
}
function resolveAddress(target, resolver) {
  if (typeof target === "string") {
    if (target.match(/^0x[0-9a-f]{40}$/i)) {
      return getAddress(target);
    }
    assert(resolver != null, "ENS resolution requires a provider", "UNSUPPORTED_OPERATION", { operation: "resolveName" });
    return checkAddress(target, resolver.resolveName(target));
  } else if (isAddressable(target)) {
    return checkAddress(target, target.getAddress());
  } else if (target && typeof target.then === "function") {
    return checkAddress(target, target);
  }
  assertArgument(false, "unsupported addressable value", "target", target);
}

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/abi/typed.js
var _gaurd = {};
function n(value, width) {
  let signed = false;
  if (width < 0) {
    signed = true;
    width *= -1;
  }
  return new Typed(_gaurd, `${signed ? "" : "u"}int${width}`, value, { signed, width });
}
function b(value, size) {
  return new Typed(_gaurd, `bytes${size ? size : ""}`, value, { size });
}
var _typedSymbol = Symbol.for("_ethers_typed");
var _options;
var _Typed = class {
  /**
   *  @_ignore:
   */
  constructor(gaurd, type, value, options) {
    /**
     *  The type, as a Solidity-compatible type.
     */
    __publicField(this, "type");
    /**
     *  The actual value.
     */
    __publicField(this, "value");
    __privateAdd(this, _options, void 0);
    /**
     *  @_ignore:
     */
    __publicField(this, "_typedSymbol");
    if (options == null) {
      options = null;
    }
    assertPrivate(_gaurd, gaurd, "Typed");
    defineProperties(this, { _typedSymbol, type, value });
    __privateSet(this, _options, options);
    this.format();
  }
  /**
   *  Format the type as a Human-Readable type.
   */
  format() {
    if (this.type === "array") {
      throw new Error("");
    } else if (this.type === "dynamicArray") {
      throw new Error("");
    } else if (this.type === "tuple") {
      return `tuple(${this.value.map((v) => v.format()).join(",")})`;
    }
    return this.type;
  }
  /**
   *  The default value returned by this type.
   */
  defaultValue() {
    return 0;
  }
  /**
   *  The minimum value for numeric types.
   */
  minValue() {
    return 0;
  }
  /**
   *  The maximum value for numeric types.
   */
  maxValue() {
    return 0;
  }
  /**
   *  Returns ``true`` and provides a type guard is this is a [[TypedBigInt]].
   */
  isBigInt() {
    return !!this.type.match(/^u?int[0-9]+$/);
  }
  /**
   *  Returns ``true`` and provides a type guard is this is a [[TypedData]].
   */
  isData() {
    return this.type.startsWith("bytes");
  }
  /**
   *  Returns ``true`` and provides a type guard is this is a [[TypedString]].
   */
  isString() {
    return this.type === "string";
  }
  /**
   *  Returns the tuple name, if this is a tuple. Throws otherwise.
   */
  get tupleName() {
    if (this.type !== "tuple") {
      throw TypeError("not a tuple");
    }
    return __privateGet(this, _options);
  }
  // Returns the length of this type as an array
  // - `null` indicates the length is unforced, it could be dynamic
  // - `-1` indicates the length is dynamic
  // - any other value indicates it is a static array and is its length
  /**
   *  Returns the length of the array type or ``-1`` if it is dynamic.
   *
   *  Throws if the type is not an array.
   */
  get arrayLength() {
    if (this.type !== "array") {
      throw TypeError("not an array");
    }
    if (__privateGet(this, _options) === true) {
      return -1;
    }
    if (__privateGet(this, _options) === false) {
      return this.value.length;
    }
    return null;
  }
  /**
   *  Returns a new **Typed** of %%type%% with the %%value%%.
   */
  static from(type, value) {
    return new _Typed(_gaurd, type, value);
  }
  /**
   *  Return a new ``uint8`` type for %%v%%.
   */
  static uint8(v) {
    return n(v, 8);
  }
  /**
   *  Return a new ``uint16`` type for %%v%%.
   */
  static uint16(v) {
    return n(v, 16);
  }
  /**
   *  Return a new ``uint24`` type for %%v%%.
   */
  static uint24(v) {
    return n(v, 24);
  }
  /**
   *  Return a new ``uint32`` type for %%v%%.
   */
  static uint32(v) {
    return n(v, 32);
  }
  /**
   *  Return a new ``uint40`` type for %%v%%.
   */
  static uint40(v) {
    return n(v, 40);
  }
  /**
   *  Return a new ``uint48`` type for %%v%%.
   */
  static uint48(v) {
    return n(v, 48);
  }
  /**
   *  Return a new ``uint56`` type for %%v%%.
   */
  static uint56(v) {
    return n(v, 56);
  }
  /**
   *  Return a new ``uint64`` type for %%v%%.
   */
  static uint64(v) {
    return n(v, 64);
  }
  /**
   *  Return a new ``uint72`` type for %%v%%.
   */
  static uint72(v) {
    return n(v, 72);
  }
  /**
   *  Return a new ``uint80`` type for %%v%%.
   */
  static uint80(v) {
    return n(v, 80);
  }
  /**
   *  Return a new ``uint88`` type for %%v%%.
   */
  static uint88(v) {
    return n(v, 88);
  }
  /**
   *  Return a new ``uint96`` type for %%v%%.
   */
  static uint96(v) {
    return n(v, 96);
  }
  /**
   *  Return a new ``uint104`` type for %%v%%.
   */
  static uint104(v) {
    return n(v, 104);
  }
  /**
   *  Return a new ``uint112`` type for %%v%%.
   */
  static uint112(v) {
    return n(v, 112);
  }
  /**
   *  Return a new ``uint120`` type for %%v%%.
   */
  static uint120(v) {
    return n(v, 120);
  }
  /**
   *  Return a new ``uint128`` type for %%v%%.
   */
  static uint128(v) {
    return n(v, 128);
  }
  /**
   *  Return a new ``uint136`` type for %%v%%.
   */
  static uint136(v) {
    return n(v, 136);
  }
  /**
   *  Return a new ``uint144`` type for %%v%%.
   */
  static uint144(v) {
    return n(v, 144);
  }
  /**
   *  Return a new ``uint152`` type for %%v%%.
   */
  static uint152(v) {
    return n(v, 152);
  }
  /**
   *  Return a new ``uint160`` type for %%v%%.
   */
  static uint160(v) {
    return n(v, 160);
  }
  /**
   *  Return a new ``uint168`` type for %%v%%.
   */
  static uint168(v) {
    return n(v, 168);
  }
  /**
   *  Return a new ``uint176`` type for %%v%%.
   */
  static uint176(v) {
    return n(v, 176);
  }
  /**
   *  Return a new ``uint184`` type for %%v%%.
   */
  static uint184(v) {
    return n(v, 184);
  }
  /**
   *  Return a new ``uint192`` type for %%v%%.
   */
  static uint192(v) {
    return n(v, 192);
  }
  /**
   *  Return a new ``uint200`` type for %%v%%.
   */
  static uint200(v) {
    return n(v, 200);
  }
  /**
   *  Return a new ``uint208`` type for %%v%%.
   */
  static uint208(v) {
    return n(v, 208);
  }
  /**
   *  Return a new ``uint216`` type for %%v%%.
   */
  static uint216(v) {
    return n(v, 216);
  }
  /**
   *  Return a new ``uint224`` type for %%v%%.
   */
  static uint224(v) {
    return n(v, 224);
  }
  /**
   *  Return a new ``uint232`` type for %%v%%.
   */
  static uint232(v) {
    return n(v, 232);
  }
  /**
   *  Return a new ``uint240`` type for %%v%%.
   */
  static uint240(v) {
    return n(v, 240);
  }
  /**
   *  Return a new ``uint248`` type for %%v%%.
   */
  static uint248(v) {
    return n(v, 248);
  }
  /**
   *  Return a new ``uint256`` type for %%v%%.
   */
  static uint256(v) {
    return n(v, 256);
  }
  /**
   *  Return a new ``uint256`` type for %%v%%.
   */
  static uint(v) {
    return n(v, 256);
  }
  /**
   *  Return a new ``int8`` type for %%v%%.
   */
  static int8(v) {
    return n(v, -8);
  }
  /**
   *  Return a new ``int16`` type for %%v%%.
   */
  static int16(v) {
    return n(v, -16);
  }
  /**
   *  Return a new ``int24`` type for %%v%%.
   */
  static int24(v) {
    return n(v, -24);
  }
  /**
   *  Return a new ``int32`` type for %%v%%.
   */
  static int32(v) {
    return n(v, -32);
  }
  /**
   *  Return a new ``int40`` type for %%v%%.
   */
  static int40(v) {
    return n(v, -40);
  }
  /**
   *  Return a new ``int48`` type for %%v%%.
   */
  static int48(v) {
    return n(v, -48);
  }
  /**
   *  Return a new ``int56`` type for %%v%%.
   */
  static int56(v) {
    return n(v, -56);
  }
  /**
   *  Return a new ``int64`` type for %%v%%.
   */
  static int64(v) {
    return n(v, -64);
  }
  /**
   *  Return a new ``int72`` type for %%v%%.
   */
  static int72(v) {
    return n(v, -72);
  }
  /**
   *  Return a new ``int80`` type for %%v%%.
   */
  static int80(v) {
    return n(v, -80);
  }
  /**
   *  Return a new ``int88`` type for %%v%%.
   */
  static int88(v) {
    return n(v, -88);
  }
  /**
   *  Return a new ``int96`` type for %%v%%.
   */
  static int96(v) {
    return n(v, -96);
  }
  /**
   *  Return a new ``int104`` type for %%v%%.
   */
  static int104(v) {
    return n(v, -104);
  }
  /**
   *  Return a new ``int112`` type for %%v%%.
   */
  static int112(v) {
    return n(v, -112);
  }
  /**
   *  Return a new ``int120`` type for %%v%%.
   */
  static int120(v) {
    return n(v, -120);
  }
  /**
   *  Return a new ``int128`` type for %%v%%.
   */
  static int128(v) {
    return n(v, -128);
  }
  /**
   *  Return a new ``int136`` type for %%v%%.
   */
  static int136(v) {
    return n(v, -136);
  }
  /**
   *  Return a new ``int144`` type for %%v%%.
   */
  static int144(v) {
    return n(v, -144);
  }
  /**
   *  Return a new ``int52`` type for %%v%%.
   */
  static int152(v) {
    return n(v, -152);
  }
  /**
   *  Return a new ``int160`` type for %%v%%.
   */
  static int160(v) {
    return n(v, -160);
  }
  /**
   *  Return a new ``int168`` type for %%v%%.
   */
  static int168(v) {
    return n(v, -168);
  }
  /**
   *  Return a new ``int176`` type for %%v%%.
   */
  static int176(v) {
    return n(v, -176);
  }
  /**
   *  Return a new ``int184`` type for %%v%%.
   */
  static int184(v) {
    return n(v, -184);
  }
  /**
   *  Return a new ``int92`` type for %%v%%.
   */
  static int192(v) {
    return n(v, -192);
  }
  /**
   *  Return a new ``int200`` type for %%v%%.
   */
  static int200(v) {
    return n(v, -200);
  }
  /**
   *  Return a new ``int208`` type for %%v%%.
   */
  static int208(v) {
    return n(v, -208);
  }
  /**
   *  Return a new ``int216`` type for %%v%%.
   */
  static int216(v) {
    return n(v, -216);
  }
  /**
   *  Return a new ``int224`` type for %%v%%.
   */
  static int224(v) {
    return n(v, -224);
  }
  /**
   *  Return a new ``int232`` type for %%v%%.
   */
  static int232(v) {
    return n(v, -232);
  }
  /**
   *  Return a new ``int240`` type for %%v%%.
   */
  static int240(v) {
    return n(v, -240);
  }
  /**
   *  Return a new ``int248`` type for %%v%%.
   */
  static int248(v) {
    return n(v, -248);
  }
  /**
   *  Return a new ``int256`` type for %%v%%.
   */
  static int256(v) {
    return n(v, -256);
  }
  /**
   *  Return a new ``int256`` type for %%v%%.
   */
  static int(v) {
    return n(v, -256);
  }
  /**
   *  Return a new ``bytes1`` type for %%v%%.
   */
  static bytes1(v) {
    return b(v, 1);
  }
  /**
   *  Return a new ``bytes2`` type for %%v%%.
   */
  static bytes2(v) {
    return b(v, 2);
  }
  /**
   *  Return a new ``bytes3`` type for %%v%%.
   */
  static bytes3(v) {
    return b(v, 3);
  }
  /**
   *  Return a new ``bytes4`` type for %%v%%.
   */
  static bytes4(v) {
    return b(v, 4);
  }
  /**
   *  Return a new ``bytes5`` type for %%v%%.
   */
  static bytes5(v) {
    return b(v, 5);
  }
  /**
   *  Return a new ``bytes6`` type for %%v%%.
   */
  static bytes6(v) {
    return b(v, 6);
  }
  /**
   *  Return a new ``bytes7`` type for %%v%%.
   */
  static bytes7(v) {
    return b(v, 7);
  }
  /**
   *  Return a new ``bytes8`` type for %%v%%.
   */
  static bytes8(v) {
    return b(v, 8);
  }
  /**
   *  Return a new ``bytes9`` type for %%v%%.
   */
  static bytes9(v) {
    return b(v, 9);
  }
  /**
   *  Return a new ``bytes10`` type for %%v%%.
   */
  static bytes10(v) {
    return b(v, 10);
  }
  /**
   *  Return a new ``bytes11`` type for %%v%%.
   */
  static bytes11(v) {
    return b(v, 11);
  }
  /**
   *  Return a new ``bytes12`` type for %%v%%.
   */
  static bytes12(v) {
    return b(v, 12);
  }
  /**
   *  Return a new ``bytes13`` type for %%v%%.
   */
  static bytes13(v) {
    return b(v, 13);
  }
  /**
   *  Return a new ``bytes14`` type for %%v%%.
   */
  static bytes14(v) {
    return b(v, 14);
  }
  /**
   *  Return a new ``bytes15`` type for %%v%%.
   */
  static bytes15(v) {
    return b(v, 15);
  }
  /**
   *  Return a new ``bytes16`` type for %%v%%.
   */
  static bytes16(v) {
    return b(v, 16);
  }
  /**
   *  Return a new ``bytes17`` type for %%v%%.
   */
  static bytes17(v) {
    return b(v, 17);
  }
  /**
   *  Return a new ``bytes18`` type for %%v%%.
   */
  static bytes18(v) {
    return b(v, 18);
  }
  /**
   *  Return a new ``bytes19`` type for %%v%%.
   */
  static bytes19(v) {
    return b(v, 19);
  }
  /**
   *  Return a new ``bytes20`` type for %%v%%.
   */
  static bytes20(v) {
    return b(v, 20);
  }
  /**
   *  Return a new ``bytes21`` type for %%v%%.
   */
  static bytes21(v) {
    return b(v, 21);
  }
  /**
   *  Return a new ``bytes22`` type for %%v%%.
   */
  static bytes22(v) {
    return b(v, 22);
  }
  /**
   *  Return a new ``bytes23`` type for %%v%%.
   */
  static bytes23(v) {
    return b(v, 23);
  }
  /**
   *  Return a new ``bytes24`` type for %%v%%.
   */
  static bytes24(v) {
    return b(v, 24);
  }
  /**
   *  Return a new ``bytes25`` type for %%v%%.
   */
  static bytes25(v) {
    return b(v, 25);
  }
  /**
   *  Return a new ``bytes26`` type for %%v%%.
   */
  static bytes26(v) {
    return b(v, 26);
  }
  /**
   *  Return a new ``bytes27`` type for %%v%%.
   */
  static bytes27(v) {
    return b(v, 27);
  }
  /**
   *  Return a new ``bytes28`` type for %%v%%.
   */
  static bytes28(v) {
    return b(v, 28);
  }
  /**
   *  Return a new ``bytes29`` type for %%v%%.
   */
  static bytes29(v) {
    return b(v, 29);
  }
  /**
   *  Return a new ``bytes30`` type for %%v%%.
   */
  static bytes30(v) {
    return b(v, 30);
  }
  /**
   *  Return a new ``bytes31`` type for %%v%%.
   */
  static bytes31(v) {
    return b(v, 31);
  }
  /**
   *  Return a new ``bytes32`` type for %%v%%.
   */
  static bytes32(v) {
    return b(v, 32);
  }
  /**
   *  Return a new ``address`` type for %%v%%.
   */
  static address(v) {
    return new _Typed(_gaurd, "address", v);
  }
  /**
   *  Return a new ``bool`` type for %%v%%.
   */
  static bool(v) {
    return new _Typed(_gaurd, "bool", !!v);
  }
  /**
   *  Return a new ``bytes`` type for %%v%%.
   */
  static bytes(v) {
    return new _Typed(_gaurd, "bytes", v);
  }
  /**
   *  Return a new ``string`` type for %%v%%.
   */
  static string(v) {
    return new _Typed(_gaurd, "string", v);
  }
  /**
   *  Return a new ``array`` type for %%v%%, allowing %%dynamic%% length.
   */
  static array(v, dynamic) {
    throw new Error("not implemented yet");
  }
  /**
   *  Return a new ``tuple`` type for %%v%%, with the optional %%name%%.
   */
  static tuple(v, name) {
    throw new Error("not implemented yet");
  }
  /**
   *  Return a new ``uint8`` type for %%v%%.
   */
  static overrides(v) {
    return new _Typed(_gaurd, "overrides", Object.assign({}, v));
  }
  /**
   *  Returns true only if %%value%% is a [[Typed]] instance.
   */
  static isTyped(value) {
    return value && typeof value === "object" && "_typedSymbol" in value && value._typedSymbol === _typedSymbol;
  }
  /**
   *  If the value is a [[Typed]] instance, validates the underlying value
   *  and returns it, otherwise returns value directly.
   *
   *  This is useful for functions that with to accept either a [[Typed]]
   *  object or values.
   */
  static dereference(value, type) {
    if (_Typed.isTyped(value)) {
      if (value.type !== type) {
        throw new Error(`invalid type: expecetd ${type}, got ${value.type}`);
      }
      return value.value;
    }
    return value;
  }
};
var Typed = _Typed;
_options = new WeakMap();

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/abi/coders/address.js
var AddressCoder = class extends Coder {
  constructor(localName) {
    super("address", "address", localName, false);
  }
  defaultValue() {
    return "0x0000000000000000000000000000000000000000";
  }
  encode(writer, _value) {
    let value = Typed.dereference(_value, "string");
    try {
      value = getAddress(value);
    } catch (error) {
      return this._throwError(error.message, _value);
    }
    return writer.writeValue(value);
  }
  decode(reader) {
    return getAddress(toBeHex(reader.readValue(), 20));
  }
};

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/abi/coders/anonymous.js
var AnonymousCoder = class extends Coder {
  constructor(coder) {
    super(coder.name, coder.type, "_", coder.dynamic);
    __publicField(this, "coder");
    this.coder = coder;
  }
  defaultValue() {
    return this.coder.defaultValue();
  }
  encode(writer, value) {
    return this.coder.encode(writer, value);
  }
  decode(reader) {
    return this.coder.decode(reader);
  }
};

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/abi/coders/array.js
function pack(writer, coders, values) {
  let arrayValues = [];
  if (Array.isArray(values)) {
    arrayValues = values;
  } else if (values && typeof values === "object") {
    let unique = {};
    arrayValues = coders.map((coder) => {
      const name = coder.localName;
      assert(name, "cannot encode object for signature with missing names", "INVALID_ARGUMENT", { argument: "values", info: { coder }, value: values });
      assert(!unique[name], "cannot encode object for signature with duplicate names", "INVALID_ARGUMENT", { argument: "values", info: { coder }, value: values });
      unique[name] = true;
      return values[name];
    });
  } else {
    assertArgument(false, "invalid tuple value", "tuple", values);
  }
  assertArgument(coders.length === arrayValues.length, "types/value length mismatch", "tuple", values);
  let staticWriter = new Writer();
  let dynamicWriter = new Writer();
  let updateFuncs = [];
  coders.forEach((coder, index) => {
    let value = arrayValues[index];
    if (coder.dynamic) {
      let dynamicOffset = dynamicWriter.length;
      coder.encode(dynamicWriter, value);
      let updateFunc = staticWriter.writeUpdatableValue();
      updateFuncs.push((baseOffset) => {
        updateFunc(baseOffset + dynamicOffset);
      });
    } else {
      coder.encode(staticWriter, value);
    }
  });
  updateFuncs.forEach((func) => {
    func(staticWriter.length);
  });
  let length = writer.appendWriter(staticWriter);
  length += writer.appendWriter(dynamicWriter);
  return length;
}
function unpack(reader, coders) {
  let values = [];
  let keys = [];
  let baseReader = reader.subReader(0);
  coders.forEach((coder) => {
    let value = null;
    if (coder.dynamic) {
      let offset = reader.readIndex();
      let offsetReader = baseReader.subReader(offset);
      try {
        value = coder.decode(offsetReader);
      } catch (error) {
        if (isError(error, "BUFFER_OVERRUN")) {
          throw error;
        }
        value = error;
        value.baseType = coder.name;
        value.name = coder.localName;
        value.type = coder.type;
      }
    } else {
      try {
        value = coder.decode(reader);
      } catch (error) {
        if (isError(error, "BUFFER_OVERRUN")) {
          throw error;
        }
        value = error;
        value.baseType = coder.name;
        value.name = coder.localName;
        value.type = coder.type;
      }
    }
    if (value == void 0) {
      throw new Error("investigate");
    }
    values.push(value);
    keys.push(coder.localName || null);
  });
  return Result.fromItems(values, keys);
}
var ArrayCoder = class extends Coder {
  constructor(coder, length, localName) {
    const type = coder.type + "[" + (length >= 0 ? length : "") + "]";
    const dynamic = length === -1 || coder.dynamic;
    super("array", type, localName, dynamic);
    __publicField(this, "coder");
    __publicField(this, "length");
    defineProperties(this, { coder, length });
  }
  defaultValue() {
    const defaultChild = this.coder.defaultValue();
    const result = [];
    for (let i = 0; i < this.length; i++) {
      result.push(defaultChild);
    }
    return result;
  }
  encode(writer, _value) {
    const value = Typed.dereference(_value, "array");
    if (!Array.isArray(value)) {
      this._throwError("expected array value", value);
    }
    let count = this.length;
    if (count === -1) {
      count = value.length;
      writer.writeValue(value.length);
    }
    assertArgumentCount(value.length, count, "coder array" + (this.localName ? " " + this.localName : ""));
    let coders = [];
    for (let i = 0; i < value.length; i++) {
      coders.push(this.coder);
    }
    return pack(writer, coders, value);
  }
  decode(reader) {
    let count = this.length;
    if (count === -1) {
      count = reader.readIndex();
      assert(count * WordSize <= reader.dataLength, "insufficient data length", "BUFFER_OVERRUN", { buffer: reader.bytes, offset: count * WordSize, length: reader.dataLength });
    }
    let coders = [];
    for (let i = 0; i < count; i++) {
      coders.push(new AnonymousCoder(this.coder));
    }
    return unpack(reader, coders);
  }
};

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/abi/coders/boolean.js
var BooleanCoder = class extends Coder {
  constructor(localName) {
    super("bool", "bool", localName, false);
  }
  defaultValue() {
    return false;
  }
  encode(writer, _value) {
    const value = Typed.dereference(_value, "bool");
    return writer.writeValue(value ? 1 : 0);
  }
  decode(reader) {
    return !!reader.readValue();
  }
};

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/abi/coders/bytes.js
var DynamicBytesCoder = class extends Coder {
  constructor(type, localName) {
    super(type, type, localName, true);
  }
  defaultValue() {
    return "0x";
  }
  encode(writer, value) {
    value = getBytesCopy(value);
    let length = writer.writeValue(value.length);
    length += writer.writeBytes(value);
    return length;
  }
  decode(reader) {
    return reader.readBytes(reader.readIndex(), true);
  }
};
var BytesCoder = class extends DynamicBytesCoder {
  constructor(localName) {
    super("bytes", localName);
  }
  decode(reader) {
    return hexlify(super.decode(reader));
  }
};

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/abi/coders/fixed-bytes.js
var FixedBytesCoder = class extends Coder {
  constructor(size, localName) {
    let name = "bytes" + String(size);
    super(name, name, localName, false);
    __publicField(this, "size");
    defineProperties(this, { size }, { size: "number" });
  }
  defaultValue() {
    return "0x0000000000000000000000000000000000000000000000000000000000000000".substring(0, 2 + this.size * 2);
  }
  encode(writer, _value) {
    let data = getBytesCopy(Typed.dereference(_value, this.type));
    if (data.length !== this.size) {
      this._throwError("incorrect data length", _value);
    }
    return writer.writeBytes(data);
  }
  decode(reader) {
    return hexlify(reader.readBytes(this.size));
  }
};

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/abi/coders/null.js
var Empty = new Uint8Array([]);
var NullCoder = class extends Coder {
  constructor(localName) {
    super("null", "", localName, false);
  }
  defaultValue() {
    return null;
  }
  encode(writer, value) {
    if (value != null) {
      this._throwError("not null", value);
    }
    return writer.writeBytes(Empty);
  }
  decode(reader) {
    reader.readBytes(0);
    return null;
  }
};

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/abi/coders/number.js
var BN_03 = BigInt(0);
var BN_12 = BigInt(1);
var BN_MAX_UINT256 = BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
var NumberCoder = class extends Coder {
  constructor(size, signed, localName) {
    const name = (signed ? "int" : "uint") + size * 8;
    super(name, name, localName, false);
    __publicField(this, "size");
    __publicField(this, "signed");
    defineProperties(this, { size, signed }, { size: "number", signed: "boolean" });
  }
  defaultValue() {
    return 0;
  }
  encode(writer, _value) {
    let value = getBigInt(Typed.dereference(_value, this.type));
    let maxUintValue = mask(BN_MAX_UINT256, WordSize * 8);
    if (this.signed) {
      let bounds = mask(maxUintValue, this.size * 8 - 1);
      if (value > bounds || value < -(bounds + BN_12)) {
        this._throwError("value out-of-bounds", _value);
      }
      value = toTwos(value, 8 * WordSize);
    } else if (value < BN_03 || value > mask(maxUintValue, this.size * 8)) {
      this._throwError("value out-of-bounds", _value);
    }
    return writer.writeValue(value);
  }
  decode(reader) {
    let value = mask(reader.readValue(), this.size * 8);
    if (this.signed) {
      value = fromTwos(value, this.size * 8);
    }
    return value;
  }
};

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/abi/coders/string.js
var StringCoder = class extends DynamicBytesCoder {
  constructor(localName) {
    super("string", localName);
  }
  defaultValue() {
    return "";
  }
  encode(writer, _value) {
    return super.encode(writer, toUtf8Bytes(Typed.dereference(_value, "string")));
  }
  decode(reader) {
    return toUtf8String(super.decode(reader));
  }
};

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/abi/coders/tuple.js
var TupleCoder = class extends Coder {
  constructor(coders, localName) {
    let dynamic = false;
    const types = [];
    coders.forEach((coder) => {
      if (coder.dynamic) {
        dynamic = true;
      }
      types.push(coder.type);
    });
    const type = "tuple(" + types.join(",") + ")";
    super("tuple", type, localName, dynamic);
    __publicField(this, "coders");
    defineProperties(this, { coders: Object.freeze(coders.slice()) });
  }
  defaultValue() {
    const values = [];
    this.coders.forEach((coder) => {
      values.push(coder.defaultValue());
    });
    const uniqueNames = this.coders.reduce((accum, coder) => {
      const name = coder.localName;
      if (name) {
        if (!accum[name]) {
          accum[name] = 0;
        }
        accum[name]++;
      }
      return accum;
    }, {});
    this.coders.forEach((coder, index) => {
      let name = coder.localName;
      if (!name || uniqueNames[name] !== 1) {
        return;
      }
      if (name === "length") {
        name = "_length";
      }
      if (values[name] != null) {
        return;
      }
      values[name] = values[index];
    });
    return Object.freeze(values);
  }
  encode(writer, _value) {
    const value = Typed.dereference(_value, "tuple");
    return pack(writer, this.coders, value);
  }
  decode(reader) {
    return unpack(reader, this.coders);
  }
};

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/hash/id.js
function id(value) {
  return keccak256(toUtf8Bytes(value));
}

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/transaction/accesslist.js
function accessSetify(addr, storageKeys) {
  return {
    address: getAddress(addr),
    storageKeys: storageKeys.map((storageKey, index) => {
      assertArgument(isHexString(storageKey, 32), "invalid slot", `storageKeys[${index}]`, storageKey);
      return storageKey.toLowerCase();
    })
  };
}
function accessListify(value) {
  if (Array.isArray(value)) {
    return value.map((set, index) => {
      if (Array.isArray(set)) {
        assertArgument(set.length === 2, "invalid slot set", `value[${index}]`, set);
        return accessSetify(set[0], set[1]);
      }
      assertArgument(set != null && typeof set === "object", "invalid address-slot set", "value", value);
      return accessSetify(set.address, set.storageKeys);
    });
  }
  assertArgument(value != null && typeof value === "object", "invalid access list", "value", value);
  const result = Object.keys(value).map((addr) => {
    const storageKeys = value[addr].reduce((accum, storageKey) => {
      accum[storageKey] = true;
      return accum;
    }, {});
    return accessSetify(addr, Object.keys(storageKeys).sort());
  });
  result.sort((a, b2) => a.address.localeCompare(b2.address));
  return result;
}

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/abi/fragments.js
function setify(items) {
  const result = /* @__PURE__ */ new Set();
  items.forEach((k) => result.add(k));
  return Object.freeze(result);
}
var _kwVisibDeploy = "external public payable";
var KwVisibDeploy = setify(_kwVisibDeploy.split(" "));
var _kwVisib = "constant external internal payable private public pure view";
var KwVisib = setify(_kwVisib.split(" "));
var _kwTypes = "constructor error event fallback function receive struct";
var KwTypes = setify(_kwTypes.split(" "));
var _kwModifiers = "calldata memory storage payable indexed";
var KwModifiers = setify(_kwModifiers.split(" "));
var _kwOther = "tuple returns";
var _keywords = [_kwTypes, _kwModifiers, _kwOther, _kwVisib].join(" ");
var Keywords = setify(_keywords.split(" "));
var SimpleTokens = {
  "(": "OPEN_PAREN",
  ")": "CLOSE_PAREN",
  "[": "OPEN_BRACKET",
  "]": "CLOSE_BRACKET",
  ",": "COMMA",
  "@": "AT"
};
var regexWhitespacePrefix = new RegExp("^(\\s*)");
var regexNumberPrefix = new RegExp("^([0-9]+)");
var regexIdPrefix = new RegExp("^([a-zA-Z$_][a-zA-Z0-9$_]*)");
var regexId = new RegExp("^([a-zA-Z$_][a-zA-Z0-9$_]*)$");
var regexType = new RegExp("^(address|bool|bytes([0-9]*)|string|u?int([0-9]*))$");
var _offset2, _tokens, _subTokenString, subTokenString_fn;
var _TokenString = class {
  constructor(tokens) {
    __privateAdd(this, _subTokenString);
    __privateAdd(this, _offset2, void 0);
    __privateAdd(this, _tokens, void 0);
    __privateSet(this, _offset2, 0);
    __privateSet(this, _tokens, tokens.slice());
  }
  get offset() {
    return __privateGet(this, _offset2);
  }
  get length() {
    return __privateGet(this, _tokens).length - __privateGet(this, _offset2);
  }
  clone() {
    return new _TokenString(__privateGet(this, _tokens));
  }
  reset() {
    __privateSet(this, _offset2, 0);
  }
  // Pops and returns the value of the next token, if it is a keyword in allowed; throws if out of tokens
  popKeyword(allowed) {
    const top = this.peek();
    if (top.type !== "KEYWORD" || !allowed.has(top.text)) {
      throw new Error(`expected keyword ${top.text}`);
    }
    return this.pop().text;
  }
  // Pops and returns the value of the next token if it is `type`; throws if out of tokens
  popType(type) {
    if (this.peek().type !== type) {
      throw new Error(`expected ${type}; got ${JSON.stringify(this.peek())}`);
    }
    return this.pop().text;
  }
  // Pops and returns a "(" TOKENS ")"
  popParen() {
    const top = this.peek();
    if (top.type !== "OPEN_PAREN") {
      throw new Error("bad start");
    }
    const result = __privateMethod(this, _subTokenString, subTokenString_fn).call(this, __privateGet(this, _offset2) + 1, top.match + 1);
    __privateSet(this, _offset2, top.match + 1);
    return result;
  }
  // Pops and returns the items within "(" ITEM1 "," ITEM2 "," ... ")"
  popParams() {
    const top = this.peek();
    if (top.type !== "OPEN_PAREN") {
      throw new Error("bad start");
    }
    const result = [];
    while (__privateGet(this, _offset2) < top.match - 1) {
      const link = this.peek().linkNext;
      result.push(__privateMethod(this, _subTokenString, subTokenString_fn).call(this, __privateGet(this, _offset2) + 1, link));
      __privateSet(this, _offset2, link);
    }
    __privateSet(this, _offset2, top.match + 1);
    return result;
  }
  // Returns the top Token, throwing if out of tokens
  peek() {
    if (__privateGet(this, _offset2) >= __privateGet(this, _tokens).length) {
      throw new Error("out-of-bounds");
    }
    return __privateGet(this, _tokens)[__privateGet(this, _offset2)];
  }
  // Returns the next value, if it is a keyword in `allowed`
  peekKeyword(allowed) {
    const top = this.peekType("KEYWORD");
    return top != null && allowed.has(top) ? top : null;
  }
  // Returns the value of the next token if it is `type`
  peekType(type) {
    if (this.length === 0) {
      return null;
    }
    const top = this.peek();
    return top.type === type ? top.text : null;
  }
  // Returns the next token; throws if out of tokens
  pop() {
    const result = this.peek();
    __privateWrapper(this, _offset2)._++;
    return result;
  }
  toString() {
    const tokens = [];
    for (let i = __privateGet(this, _offset2); i < __privateGet(this, _tokens).length; i++) {
      const token = __privateGet(this, _tokens)[i];
      tokens.push(`${token.type}:${token.text}`);
    }
    return `<TokenString ${tokens.join(" ")}>`;
  }
};
var TokenString = _TokenString;
_offset2 = new WeakMap();
_tokens = new WeakMap();
_subTokenString = new WeakSet();
subTokenString_fn = function(from = 0, to = 0) {
  return new _TokenString(__privateGet(this, _tokens).slice(from, to).map((t) => {
    return Object.freeze(Object.assign({}, t, {
      match: t.match - from,
      linkBack: t.linkBack - from,
      linkNext: t.linkNext - from
    }));
  }));
};
function lex(text) {
  const tokens = [];
  const throwError2 = (message) => {
    const token = offset < text.length ? JSON.stringify(text[offset]) : "$EOI";
    throw new Error(`invalid token ${token} at ${offset}: ${message}`);
  };
  let brackets = [];
  let commas = [];
  let offset = 0;
  while (offset < text.length) {
    let cur = text.substring(offset);
    let match = cur.match(regexWhitespacePrefix);
    if (match) {
      offset += match[1].length;
      cur = text.substring(offset);
    }
    const token = { depth: brackets.length, linkBack: -1, linkNext: -1, match: -1, type: "", text: "", offset, value: -1 };
    tokens.push(token);
    let type = SimpleTokens[cur[0]] || "";
    if (type) {
      token.type = type;
      token.text = cur[0];
      offset++;
      if (type === "OPEN_PAREN") {
        brackets.push(tokens.length - 1);
        commas.push(tokens.length - 1);
      } else if (type == "CLOSE_PAREN") {
        if (brackets.length === 0) {
          throwError2("no matching open bracket");
        }
        token.match = brackets.pop();
        tokens[token.match].match = tokens.length - 1;
        token.depth--;
        token.linkBack = commas.pop();
        tokens[token.linkBack].linkNext = tokens.length - 1;
      } else if (type === "COMMA") {
        token.linkBack = commas.pop();
        tokens[token.linkBack].linkNext = tokens.length - 1;
        commas.push(tokens.length - 1);
      } else if (type === "OPEN_BRACKET") {
        token.type = "BRACKET";
      } else if (type === "CLOSE_BRACKET") {
        let suffix = tokens.pop().text;
        if (tokens.length > 0 && tokens[tokens.length - 1].type === "NUMBER") {
          const value = tokens.pop().text;
          suffix = value + suffix;
          tokens[tokens.length - 1].value = getNumber(value);
        }
        if (tokens.length === 0 || tokens[tokens.length - 1].type !== "BRACKET") {
          throw new Error("missing opening bracket");
        }
        tokens[tokens.length - 1].text += suffix;
      }
      continue;
    }
    match = cur.match(regexIdPrefix);
    if (match) {
      token.text = match[1];
      offset += token.text.length;
      if (Keywords.has(token.text)) {
        token.type = "KEYWORD";
        continue;
      }
      if (token.text.match(regexType)) {
        token.type = "TYPE";
        continue;
      }
      token.type = "ID";
      continue;
    }
    match = cur.match(regexNumberPrefix);
    if (match) {
      token.text = match[1];
      token.type = "NUMBER";
      offset += token.text.length;
      continue;
    }
    throw new Error(`unexpected token ${JSON.stringify(cur[0])} at position ${offset}`);
  }
  return new TokenString(tokens.map((t) => Object.freeze(t)));
}
function allowSingle(set, allowed) {
  let included = [];
  for (const key in allowed.keys()) {
    if (set.has(key)) {
      included.push(key);
    }
  }
  if (included.length > 1) {
    throw new Error(`conflicting types: ${included.join(", ")}`);
  }
}
function consumeName(type, tokens) {
  if (tokens.peekKeyword(KwTypes)) {
    const keyword = tokens.pop().text;
    if (keyword !== type) {
      throw new Error(`expected ${type}, got ${keyword}`);
    }
  }
  return tokens.popType("ID");
}
function consumeKeywords(tokens, allowed) {
  const keywords = /* @__PURE__ */ new Set();
  while (true) {
    const keyword = tokens.peekType("KEYWORD");
    if (keyword == null || allowed && !allowed.has(keyword)) {
      break;
    }
    tokens.pop();
    if (keywords.has(keyword)) {
      throw new Error(`duplicate keywords: ${JSON.stringify(keyword)}`);
    }
    keywords.add(keyword);
  }
  return Object.freeze(keywords);
}
function consumeMutability(tokens) {
  let modifiers = consumeKeywords(tokens, KwVisib);
  allowSingle(modifiers, setify("constant payable nonpayable".split(" ")));
  allowSingle(modifiers, setify("pure view payable nonpayable".split(" ")));
  if (modifiers.has("view")) {
    return "view";
  }
  if (modifiers.has("pure")) {
    return "pure";
  }
  if (modifiers.has("payable")) {
    return "payable";
  }
  if (modifiers.has("nonpayable")) {
    return "nonpayable";
  }
  if (modifiers.has("constant")) {
    return "view";
  }
  return "nonpayable";
}
function consumeParams(tokens, allowIndexed) {
  return tokens.popParams().map((t) => ParamType.from(t, allowIndexed));
}
function consumeGas(tokens) {
  if (tokens.peekType("AT")) {
    tokens.pop();
    if (tokens.peekType("NUMBER")) {
      return getBigInt(tokens.pop().text);
    }
    throw new Error("invalid gas");
  }
  return null;
}
function consumeEoi(tokens) {
  if (tokens.length) {
    throw new Error(`unexpected tokens: ${tokens.toString()}`);
  }
}
var regexArrayType = new RegExp(/^(.*)\[([0-9]*)\]$/);
function verifyBasicType(type) {
  const match = type.match(regexType);
  assertArgument(match, "invalid type", "type", type);
  if (type === "uint") {
    return "uint256";
  }
  if (type === "int") {
    return "int256";
  }
  if (match[2]) {
    const length = parseInt(match[2]);
    assertArgument(length !== 0 && length <= 32, "invalid bytes length", "type", type);
  } else if (match[3]) {
    const size = parseInt(match[3]);
    assertArgument(size !== 0 && size <= 256 && size % 8 === 0, "invalid numeric width", "type", type);
  }
  return type;
}
var _guard2 = {};
var internal = Symbol.for("_ethers_internal");
var ParamTypeInternal = "_ParamTypeInternal";
var ErrorFragmentInternal = "_ErrorInternal";
var EventFragmentInternal = "_EventInternal";
var ConstructorFragmentInternal = "_ConstructorInternal";
var FallbackFragmentInternal = "_FallbackInternal";
var FunctionFragmentInternal = "_FunctionInternal";
var StructFragmentInternal = "_StructInternal";
var _walkAsync, walkAsync_fn;
var _ParamType = class {
  /**
   *  @private
   */
  constructor(guard, name, type, baseType, indexed, components, arrayLength, arrayChildren) {
    __privateAdd(this, _walkAsync);
    /**
     *  The local name of the parameter (or ``""`` if unbound)
     */
    __publicField(this, "name");
    /**
     *  The fully qualified type (e.g. ``"address"``, ``"tuple(address)"``,
     *  ``"uint256[3][]"``)
     */
    __publicField(this, "type");
    /**
     *  The base type (e.g. ``"address"``, ``"tuple"``, ``"array"``)
     */
    __publicField(this, "baseType");
    /**
     *  True if the parameters is indexed.
     *
     *  For non-indexable types this is ``null``.
     */
    __publicField(this, "indexed");
    /**
     *  The components for the tuple.
     *
     *  For non-tuple types this is ``null``.
     */
    __publicField(this, "components");
    /**
     *  The array length, or ``-1`` for dynamic-lengthed arrays.
     *
     *  For non-array types this is ``null``.
     */
    __publicField(this, "arrayLength");
    /**
     *  The type of each child in the array.
     *
     *  For non-array types this is ``null``.
     */
    __publicField(this, "arrayChildren");
    assertPrivate(guard, _guard2, "ParamType");
    Object.defineProperty(this, internal, { value: ParamTypeInternal });
    if (components) {
      components = Object.freeze(components.slice());
    }
    if (baseType === "array") {
      if (arrayLength == null || arrayChildren == null) {
        throw new Error("");
      }
    } else if (arrayLength != null || arrayChildren != null) {
      throw new Error("");
    }
    if (baseType === "tuple") {
      if (components == null) {
        throw new Error("");
      }
    } else if (components != null) {
      throw new Error("");
    }
    defineProperties(this, {
      name,
      type,
      baseType,
      indexed,
      components,
      arrayLength,
      arrayChildren
    });
  }
  /**
   *  Return a string representation of this type.
   *
   *  For example,
   *
   *  ``sighash" => "(uint256,address)"``
   *
   *  ``"minimal" => "tuple(uint256,address) indexed"``
   *
   *  ``"full" => "tuple(uint256 foo, address bar) indexed baz"``
   */
  format(format) {
    if (format == null) {
      format = "sighash";
    }
    if (format === "json") {
      const name = this.name || "";
      if (this.isArray()) {
        const result3 = JSON.parse(this.arrayChildren.format("json"));
        result3.name = name;
        result3.type += `[${this.arrayLength < 0 ? "" : String(this.arrayLength)}]`;
        return JSON.stringify(result3);
      }
      const result2 = {
        type: this.baseType === "tuple" ? "tuple" : this.type,
        name
      };
      if (typeof this.indexed === "boolean") {
        result2.indexed = this.indexed;
      }
      if (this.isTuple()) {
        result2.components = this.components.map((c) => JSON.parse(c.format(format)));
      }
      return JSON.stringify(result2);
    }
    let result = "";
    if (this.isArray()) {
      result += this.arrayChildren.format(format);
      result += `[${this.arrayLength < 0 ? "" : String(this.arrayLength)}]`;
    } else {
      if (this.isTuple()) {
        result += "(" + this.components.map((comp) => comp.format(format)).join(format === "full" ? ", " : ",") + ")";
      } else {
        result += this.type;
      }
    }
    if (format !== "sighash") {
      if (this.indexed === true) {
        result += " indexed";
      }
      if (format === "full" && this.name) {
        result += " " + this.name;
      }
    }
    return result;
  }
  /**
   *  Returns true if %%this%% is an Array type.
   *
   *  This provides a type gaurd ensuring that [[arrayChildren]]
   *  and [[arrayLength]] are non-null.
   */
  isArray() {
    return this.baseType === "array";
  }
  /**
   *  Returns true if %%this%% is a Tuple type.
   *
   *  This provides a type gaurd ensuring that [[components]]
   *  is non-null.
   */
  isTuple() {
    return this.baseType === "tuple";
  }
  /**
   *  Returns true if %%this%% is an Indexable type.
   *
   *  This provides a type gaurd ensuring that [[indexed]]
   *  is non-null.
   */
  isIndexable() {
    return this.indexed != null;
  }
  /**
   *  Walks the **ParamType** with %%value%%, calling %%process%%
   *  on each type, destructing the %%value%% recursively.
   */
  walk(value, process) {
    if (this.isArray()) {
      if (!Array.isArray(value)) {
        throw new Error("invalid array value");
      }
      if (this.arrayLength !== -1 && value.length !== this.arrayLength) {
        throw new Error("array is wrong length");
      }
      const _this = this;
      return value.map((v) => _this.arrayChildren.walk(v, process));
    }
    if (this.isTuple()) {
      if (!Array.isArray(value)) {
        throw new Error("invalid tuple value");
      }
      if (value.length !== this.components.length) {
        throw new Error("array is wrong length");
      }
      const _this = this;
      return value.map((v, i) => _this.components[i].walk(v, process));
    }
    return process(this.type, value);
  }
  /**
   *  Walks the **ParamType** with %%value%%, asynchronously calling
   *  %%process%% on each type, destructing the %%value%% recursively.
   *
   *  This can be used to resolve ENS naes by walking and resolving each
   *  ``"address"`` type.
   */
  async walkAsync(value, process) {
    const promises = [];
    const result = [value];
    __privateMethod(this, _walkAsync, walkAsync_fn).call(this, promises, value, process, (value2) => {
      result[0] = value2;
    });
    if (promises.length) {
      await Promise.all(promises);
    }
    return result[0];
  }
  /**
   *  Creates a new **ParamType** for %%obj%%.
   *
   *  If %%allowIndexed%% then the ``indexed`` keyword is permitted,
   *  otherwise the ``indexed`` keyword will throw an error.
   */
  static from(obj, allowIndexed) {
    if (_ParamType.isParamType(obj)) {
      return obj;
    }
    if (typeof obj === "string") {
      try {
        return _ParamType.from(lex(obj), allowIndexed);
      } catch (error) {
        assertArgument(false, "invalid param type", "obj", obj);
      }
    } else if (obj instanceof TokenString) {
      let type2 = "", baseType = "";
      let comps = null;
      if (consumeKeywords(obj, setify(["tuple"])).has("tuple") || obj.peekType("OPEN_PAREN")) {
        baseType = "tuple";
        comps = obj.popParams().map((t) => _ParamType.from(t));
        type2 = `tuple(${comps.map((c) => c.format()).join(",")})`;
      } else {
        type2 = verifyBasicType(obj.popType("TYPE"));
        baseType = type2;
      }
      let arrayChildren = null;
      let arrayLength = null;
      while (obj.length && obj.peekType("BRACKET")) {
        const bracket = obj.pop();
        arrayChildren = new _ParamType(_guard2, "", type2, baseType, null, comps, arrayLength, arrayChildren);
        arrayLength = bracket.value;
        type2 += bracket.text;
        baseType = "array";
        comps = null;
      }
      let indexed2 = null;
      const keywords = consumeKeywords(obj, KwModifiers);
      if (keywords.has("indexed")) {
        if (!allowIndexed) {
          throw new Error("");
        }
        indexed2 = true;
      }
      const name2 = obj.peekType("ID") ? obj.pop().text : "";
      if (obj.length) {
        throw new Error("leftover tokens");
      }
      return new _ParamType(_guard2, name2, type2, baseType, indexed2, comps, arrayLength, arrayChildren);
    }
    const name = obj.name;
    assertArgument(!name || typeof name === "string" && name.match(regexId), "invalid name", "obj.name", name);
    let indexed = obj.indexed;
    if (indexed != null) {
      assertArgument(allowIndexed, "parameter cannot be indexed", "obj.indexed", obj.indexed);
      indexed = !!indexed;
    }
    let type = obj.type;
    let arrayMatch = type.match(regexArrayType);
    if (arrayMatch) {
      const arrayLength = parseInt(arrayMatch[2] || "-1");
      const arrayChildren = _ParamType.from({
        type: arrayMatch[1],
        components: obj.components
      });
      return new _ParamType(_guard2, name || "", type, "array", indexed, null, arrayLength, arrayChildren);
    }
    if (type === "tuple" || type.startsWith(
      "tuple("
      /* fix: ) */
    ) || type.startsWith(
      "("
      /* fix: ) */
    )) {
      const comps = obj.components != null ? obj.components.map((c) => _ParamType.from(c)) : null;
      const tuple = new _ParamType(_guard2, name || "", type, "tuple", indexed, comps, null, null);
      return tuple;
    }
    type = verifyBasicType(obj.type);
    return new _ParamType(_guard2, name || "", type, type, indexed, null, null, null);
  }
  /**
   *  Returns true if %%value%% is a **ParamType**.
   */
  static isParamType(value) {
    return value && value[internal] === ParamTypeInternal;
  }
};
var ParamType = _ParamType;
_walkAsync = new WeakSet();
walkAsync_fn = function(promises, value, process, setValue) {
  if (this.isArray()) {
    if (!Array.isArray(value)) {
      throw new Error("invalid array value");
    }
    if (this.arrayLength !== -1 && value.length !== this.arrayLength) {
      throw new Error("array is wrong length");
    }
    const childType = this.arrayChildren;
    const result2 = value.slice();
    result2.forEach((value2, index) => {
      var _a2;
      __privateMethod(_a2 = childType, _walkAsync, walkAsync_fn).call(_a2, promises, value2, process, (value3) => {
        result2[index] = value3;
      });
    });
    setValue(result2);
    return;
  }
  if (this.isTuple()) {
    const components = this.components;
    let result2;
    if (Array.isArray(value)) {
      result2 = value.slice();
    } else {
      if (value == null || typeof value !== "object") {
        throw new Error("invalid tuple value");
      }
      result2 = components.map((param) => {
        if (!param.name) {
          throw new Error("cannot use object value with unnamed components");
        }
        if (!(param.name in value)) {
          throw new Error(`missing value for component ${param.name}`);
        }
        return value[param.name];
      });
    }
    if (result2.length !== this.components.length) {
      throw new Error("array is wrong length");
    }
    result2.forEach((value2, index) => {
      var _a2;
      __privateMethod(_a2 = components[index], _walkAsync, walkAsync_fn).call(_a2, promises, value2, process, (value3) => {
        result2[index] = value3;
      });
    });
    setValue(result2);
    return;
  }
  const result = process(this.type, value);
  if (result.then) {
    promises.push(async function() {
      setValue(await result);
    }());
  } else {
    setValue(result);
  }
};
var Fragment = class {
  /**
   *  @private
   */
  constructor(guard, type, inputs) {
    /**
     *  The type of the fragment.
     */
    __publicField(this, "type");
    /**
     *  The inputs for the fragment.
     */
    __publicField(this, "inputs");
    assertPrivate(guard, _guard2, "Fragment");
    inputs = Object.freeze(inputs.slice());
    defineProperties(this, { type, inputs });
  }
  /**
   *  Creates a new **Fragment** for %%obj%%, wich can be any supported
   *  ABI frgament type.
   */
  static from(obj) {
    if (typeof obj === "string") {
      try {
        Fragment.from(JSON.parse(obj));
      } catch (e) {
      }
      return Fragment.from(lex(obj));
    }
    if (obj instanceof TokenString) {
      const type = obj.peekKeyword(KwTypes);
      switch (type) {
        case "constructor":
          return ConstructorFragment.from(obj);
        case "error":
          return ErrorFragment.from(obj);
        case "event":
          return EventFragment.from(obj);
        case "fallback":
        case "receive":
          return FallbackFragment.from(obj);
        case "function":
          return FunctionFragment.from(obj);
        case "struct":
          return StructFragment.from(obj);
      }
    } else if (typeof obj === "object") {
      switch (obj.type) {
        case "constructor":
          return ConstructorFragment.from(obj);
        case "error":
          return ErrorFragment.from(obj);
        case "event":
          return EventFragment.from(obj);
        case "fallback":
        case "receive":
          return FallbackFragment.from(obj);
        case "function":
          return FunctionFragment.from(obj);
        case "struct":
          return StructFragment.from(obj);
      }
      assert(false, `unsupported type: ${obj.type}`, "UNSUPPORTED_OPERATION", {
        operation: "Fragment.from"
      });
    }
    assertArgument(false, "unsupported frgament object", "obj", obj);
  }
  /**
   *  Returns true if %%value%% is a [[ConstructorFragment]].
   */
  static isConstructor(value) {
    return ConstructorFragment.isFragment(value);
  }
  /**
   *  Returns true if %%value%% is an [[ErrorFragment]].
   */
  static isError(value) {
    return ErrorFragment.isFragment(value);
  }
  /**
   *  Returns true if %%value%% is an [[EventFragment]].
   */
  static isEvent(value) {
    return EventFragment.isFragment(value);
  }
  /**
   *  Returns true if %%value%% is a [[FunctionFragment]].
   */
  static isFunction(value) {
    return FunctionFragment.isFragment(value);
  }
  /**
   *  Returns true if %%value%% is a [[StructFragment]].
   */
  static isStruct(value) {
    return StructFragment.isFragment(value);
  }
};
var NamedFragment = class extends Fragment {
  /**
   *  @private
   */
  constructor(guard, type, name, inputs) {
    super(guard, type, inputs);
    /**
     *  The name of the fragment.
     */
    __publicField(this, "name");
    assertArgument(typeof name === "string" && name.match(regexId), "invalid identifier", "name", name);
    inputs = Object.freeze(inputs.slice());
    defineProperties(this, { name });
  }
};
function joinParams(format, params) {
  return "(" + params.map((p) => p.format(format)).join(format === "full" ? ", " : ",") + ")";
}
var ErrorFragment = class extends NamedFragment {
  /**
   *  @private
   */
  constructor(guard, name, inputs) {
    super(guard, "error", name, inputs);
    Object.defineProperty(this, internal, { value: ErrorFragmentInternal });
  }
  /**
   *  The Custom Error selector.
   */
  get selector() {
    return id(this.format("sighash")).substring(0, 10);
  }
  /**
   *  Returns a string representation of this fragment as %%format%%.
   */
  format(format) {
    if (format == null) {
      format = "sighash";
    }
    if (format === "json") {
      return JSON.stringify({
        type: "error",
        name: this.name,
        inputs: this.inputs.map((input) => JSON.parse(input.format(format)))
      });
    }
    const result = [];
    if (format !== "sighash") {
      result.push("error");
    }
    result.push(this.name + joinParams(format, this.inputs));
    return result.join(" ");
  }
  /**
   *  Returns a new **ErrorFragment** for %%obj%%.
   */
  static from(obj) {
    if (ErrorFragment.isFragment(obj)) {
      return obj;
    }
    if (typeof obj === "string") {
      return ErrorFragment.from(lex(obj));
    } else if (obj instanceof TokenString) {
      const name = consumeName("error", obj);
      const inputs = consumeParams(obj);
      consumeEoi(obj);
      return new ErrorFragment(_guard2, name, inputs);
    }
    return new ErrorFragment(_guard2, obj.name, obj.inputs ? obj.inputs.map(ParamType.from) : []);
  }
  /**
   *  Returns ``true`` and provides a type guard if %%value%% is an
   *  **ErrorFragment**.
   */
  static isFragment(value) {
    return value && value[internal] === ErrorFragmentInternal;
  }
};
var EventFragment = class extends NamedFragment {
  /**
   *  @private
   */
  constructor(guard, name, inputs, anonymous) {
    super(guard, "event", name, inputs);
    /**
     *  Whether this event is anonymous.
     */
    __publicField(this, "anonymous");
    Object.defineProperty(this, internal, { value: EventFragmentInternal });
    defineProperties(this, { anonymous });
  }
  /**
   *  The Event topic hash.
   */
  get topicHash() {
    return id(this.format("sighash"));
  }
  /**
   *  Returns a string representation of this event as %%format%%.
   */
  format(format) {
    if (format == null) {
      format = "sighash";
    }
    if (format === "json") {
      return JSON.stringify({
        type: "event",
        anonymous: this.anonymous,
        name: this.name,
        inputs: this.inputs.map((i) => JSON.parse(i.format(format)))
      });
    }
    const result = [];
    if (format !== "sighash") {
      result.push("event");
    }
    result.push(this.name + joinParams(format, this.inputs));
    if (format !== "sighash" && this.anonymous) {
      result.push("anonymous");
    }
    return result.join(" ");
  }
  /**
   *  Return the topic hash for an event with %%name%% and %%params%%.
   */
  static getTopicHash(name, params) {
    params = (params || []).map((p) => ParamType.from(p));
    const fragment = new EventFragment(_guard2, name, params, false);
    return fragment.topicHash;
  }
  /**
   *  Returns a new **EventFragment** for %%obj%%.
   */
  static from(obj) {
    if (EventFragment.isFragment(obj)) {
      return obj;
    }
    if (typeof obj === "string") {
      try {
        return EventFragment.from(lex(obj));
      } catch (error) {
        assertArgument(false, "invalid event fragment", "obj", obj);
      }
    } else if (obj instanceof TokenString) {
      const name = consumeName("event", obj);
      const inputs = consumeParams(obj, true);
      const anonymous = !!consumeKeywords(obj, setify(["anonymous"])).has("anonymous");
      consumeEoi(obj);
      return new EventFragment(_guard2, name, inputs, anonymous);
    }
    return new EventFragment(_guard2, obj.name, obj.inputs ? obj.inputs.map((p) => ParamType.from(p, true)) : [], !!obj.anonymous);
  }
  /**
   *  Returns ``true`` and provides a type guard if %%value%% is an
   *  **EventFragment**.
   */
  static isFragment(value) {
    return value && value[internal] === EventFragmentInternal;
  }
};
var ConstructorFragment = class extends Fragment {
  /**
   *  @private
   */
  constructor(guard, type, inputs, payable, gas) {
    super(guard, type, inputs);
    /**
     *  Whether the constructor can receive an endowment.
     */
    __publicField(this, "payable");
    /**
     *  The recommended gas limit for deployment or ``null``.
     */
    __publicField(this, "gas");
    Object.defineProperty(this, internal, { value: ConstructorFragmentInternal });
    defineProperties(this, { payable, gas });
  }
  /**
   *  Returns a string representation of this constructor as %%format%%.
   */
  format(format) {
    assert(format != null && format !== "sighash", "cannot format a constructor for sighash", "UNSUPPORTED_OPERATION", { operation: "format(sighash)" });
    if (format === "json") {
      return JSON.stringify({
        type: "constructor",
        stateMutability: this.payable ? "payable" : "undefined",
        payable: this.payable,
        gas: this.gas != null ? this.gas : void 0,
        inputs: this.inputs.map((i) => JSON.parse(i.format(format)))
      });
    }
    const result = [`constructor${joinParams(format, this.inputs)}`];
    if (this.payable) {
      result.push("payable");
    }
    if (this.gas != null) {
      result.push(`@${this.gas.toString()}`);
    }
    return result.join(" ");
  }
  /**
   *  Returns a new **ConstructorFragment** for %%obj%%.
   */
  static from(obj) {
    if (ConstructorFragment.isFragment(obj)) {
      return obj;
    }
    if (typeof obj === "string") {
      try {
        return ConstructorFragment.from(lex(obj));
      } catch (error) {
        assertArgument(false, "invalid constuctor fragment", "obj", obj);
      }
    } else if (obj instanceof TokenString) {
      consumeKeywords(obj, setify(["constructor"]));
      const inputs = consumeParams(obj);
      const payable = !!consumeKeywords(obj, KwVisibDeploy).has("payable");
      const gas = consumeGas(obj);
      consumeEoi(obj);
      return new ConstructorFragment(_guard2, "constructor", inputs, payable, gas);
    }
    return new ConstructorFragment(_guard2, "constructor", obj.inputs ? obj.inputs.map(ParamType.from) : [], !!obj.payable, obj.gas != null ? obj.gas : null);
  }
  /**
   *  Returns ``true`` and provides a type guard if %%value%% is a
   *  **ConstructorFragment**.
   */
  static isFragment(value) {
    return value && value[internal] === ConstructorFragmentInternal;
  }
};
var FallbackFragment = class extends Fragment {
  constructor(guard, inputs, payable) {
    super(guard, "fallback", inputs);
    /**
     *  If the function can be sent value during invocation.
     */
    __publicField(this, "payable");
    Object.defineProperty(this, internal, { value: FallbackFragmentInternal });
    defineProperties(this, { payable });
  }
  /**
   *  Returns a string representation of this fallback as %%format%%.
   */
  format(format) {
    const type = this.inputs.length === 0 ? "receive" : "fallback";
    if (format === "json") {
      const stateMutability = this.payable ? "payable" : "nonpayable";
      return JSON.stringify({ type, stateMutability });
    }
    return `${type}()${this.payable ? " payable" : ""}`;
  }
  /**
   *  Returns a new **FallbackFragment** for %%obj%%.
   */
  static from(obj) {
    if (FallbackFragment.isFragment(obj)) {
      return obj;
    }
    if (typeof obj === "string") {
      try {
        return FallbackFragment.from(lex(obj));
      } catch (error) {
        assertArgument(false, "invalid fallback fragment", "obj", obj);
      }
    } else if (obj instanceof TokenString) {
      const errorObj = obj.toString();
      const topIsValid = obj.peekKeyword(setify(["fallback", "receive"]));
      assertArgument(topIsValid, "type must be fallback or receive", "obj", errorObj);
      const type = obj.popKeyword(setify(["fallback", "receive"]));
      if (type === "receive") {
        const inputs2 = consumeParams(obj);
        assertArgument(inputs2.length === 0, `receive cannot have arguments`, "obj.inputs", inputs2);
        consumeKeywords(obj, setify(["payable"]));
        consumeEoi(obj);
        return new FallbackFragment(_guard2, [], true);
      }
      let inputs = consumeParams(obj);
      if (inputs.length) {
        assertArgument(inputs.length === 1 && inputs[0].type === "bytes", "invalid fallback inputs", "obj.inputs", inputs.map((i) => i.format("minimal")).join(", "));
      } else {
        inputs = [ParamType.from("bytes")];
      }
      const mutability = consumeMutability(obj);
      assertArgument(mutability === "nonpayable" || mutability === "payable", "fallback cannot be constants", "obj.stateMutability", mutability);
      if (consumeKeywords(obj, setify(["returns"])).has("returns")) {
        const outputs = consumeParams(obj);
        assertArgument(outputs.length === 1 && outputs[0].type === "bytes", "invalid fallback outputs", "obj.outputs", outputs.map((i) => i.format("minimal")).join(", "));
      }
      consumeEoi(obj);
      return new FallbackFragment(_guard2, inputs, mutability === "payable");
    }
    if (obj.type === "receive") {
      return new FallbackFragment(_guard2, [], true);
    }
    if (obj.type === "fallback") {
      const inputs = [ParamType.from("bytes")];
      const payable = obj.stateMutability === "payable";
      return new FallbackFragment(_guard2, inputs, payable);
    }
    assertArgument(false, "invalid fallback description", "obj", obj);
  }
  /**
   *  Returns ``true`` and provides a type guard if %%value%% is a
   *  **FallbackFragment**.
   */
  static isFragment(value) {
    return value && value[internal] === FallbackFragmentInternal;
  }
};
var FunctionFragment = class extends NamedFragment {
  /**
   *  @private
   */
  constructor(guard, name, stateMutability, inputs, outputs, gas) {
    super(guard, "function", name, inputs);
    /**
     *  If the function is constant (e.g. ``pure`` or ``view`` functions).
     */
    __publicField(this, "constant");
    /**
     *  The returned types for the result of calling this function.
     */
    __publicField(this, "outputs");
    /**
     *  The state mutability (e.g. ``payable``, ``nonpayable``, ``view``
     *  or ``pure``)
     */
    __publicField(this, "stateMutability");
    /**
     *  If the function can be sent value during invocation.
     */
    __publicField(this, "payable");
    /**
     *  The recommended gas limit to send when calling this function.
     */
    __publicField(this, "gas");
    Object.defineProperty(this, internal, { value: FunctionFragmentInternal });
    outputs = Object.freeze(outputs.slice());
    const constant = stateMutability === "view" || stateMutability === "pure";
    const payable = stateMutability === "payable";
    defineProperties(this, { constant, gas, outputs, payable, stateMutability });
  }
  /**
   *  The Function selector.
   */
  get selector() {
    return id(this.format("sighash")).substring(0, 10);
  }
  /**
   *  Returns a string representation of this function as %%format%%.
   */
  format(format) {
    if (format == null) {
      format = "sighash";
    }
    if (format === "json") {
      return JSON.stringify({
        type: "function",
        name: this.name,
        constant: this.constant,
        stateMutability: this.stateMutability !== "nonpayable" ? this.stateMutability : void 0,
        payable: this.payable,
        gas: this.gas != null ? this.gas : void 0,
        inputs: this.inputs.map((i) => JSON.parse(i.format(format))),
        outputs: this.outputs.map((o) => JSON.parse(o.format(format)))
      });
    }
    const result = [];
    if (format !== "sighash") {
      result.push("function");
    }
    result.push(this.name + joinParams(format, this.inputs));
    if (format !== "sighash") {
      if (this.stateMutability !== "nonpayable") {
        result.push(this.stateMutability);
      }
      if (this.outputs && this.outputs.length) {
        result.push("returns");
        result.push(joinParams(format, this.outputs));
      }
      if (this.gas != null) {
        result.push(`@${this.gas.toString()}`);
      }
    }
    return result.join(" ");
  }
  /**
   *  Return the selector for a function with %%name%% and %%params%%.
   */
  static getSelector(name, params) {
    params = (params || []).map((p) => ParamType.from(p));
    const fragment = new FunctionFragment(_guard2, name, "view", params, [], null);
    return fragment.selector;
  }
  /**
   *  Returns a new **FunctionFragment** for %%obj%%.
   */
  static from(obj) {
    if (FunctionFragment.isFragment(obj)) {
      return obj;
    }
    if (typeof obj === "string") {
      try {
        return FunctionFragment.from(lex(obj));
      } catch (error) {
        assertArgument(false, "invalid function fragment", "obj", obj);
      }
    } else if (obj instanceof TokenString) {
      const name = consumeName("function", obj);
      const inputs = consumeParams(obj);
      const mutability = consumeMutability(obj);
      let outputs = [];
      if (consumeKeywords(obj, setify(["returns"])).has("returns")) {
        outputs = consumeParams(obj);
      }
      const gas = consumeGas(obj);
      consumeEoi(obj);
      return new FunctionFragment(_guard2, name, mutability, inputs, outputs, gas);
    }
    let stateMutability = obj.stateMutability;
    if (stateMutability == null) {
      stateMutability = "payable";
      if (typeof obj.constant === "boolean") {
        stateMutability = "view";
        if (!obj.constant) {
          stateMutability = "payable";
          if (typeof obj.payable === "boolean" && !obj.payable) {
            stateMutability = "nonpayable";
          }
        }
      } else if (typeof obj.payable === "boolean" && !obj.payable) {
        stateMutability = "nonpayable";
      }
    }
    return new FunctionFragment(_guard2, obj.name, stateMutability, obj.inputs ? obj.inputs.map(ParamType.from) : [], obj.outputs ? obj.outputs.map(ParamType.from) : [], obj.gas != null ? obj.gas : null);
  }
  /**
   *  Returns ``true`` and provides a type guard if %%value%% is a
   *  **FunctionFragment**.
   */
  static isFragment(value) {
    return value && value[internal] === FunctionFragmentInternal;
  }
};
var StructFragment = class extends NamedFragment {
  /**
   *  @private
   */
  constructor(guard, name, inputs) {
    super(guard, "struct", name, inputs);
    Object.defineProperty(this, internal, { value: StructFragmentInternal });
  }
  /**
   *  Returns a string representation of this struct as %%format%%.
   */
  format() {
    throw new Error("@TODO");
  }
  /**
   *  Returns a new **StructFragment** for %%obj%%.
   */
  static from(obj) {
    if (typeof obj === "string") {
      try {
        return StructFragment.from(lex(obj));
      } catch (error) {
        assertArgument(false, "invalid struct fragment", "obj", obj);
      }
    } else if (obj instanceof TokenString) {
      const name = consumeName("struct", obj);
      const inputs = consumeParams(obj);
      consumeEoi(obj);
      return new StructFragment(_guard2, name, inputs);
    }
    return new StructFragment(_guard2, obj.name, obj.inputs ? obj.inputs.map(ParamType.from) : []);
  }
  // @TODO: fix this return type
  /**
   *  Returns ``true`` and provides a type guard if %%value%% is a
   *  **StructFragment**.
   */
  static isFragment(value) {
    return value && value[internal] === StructFragmentInternal;
  }
};

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/abi/abi-coder.js
var PanicReasons = /* @__PURE__ */ new Map();
PanicReasons.set(0, "GENERIC_PANIC");
PanicReasons.set(1, "ASSERT_FALSE");
PanicReasons.set(17, "OVERFLOW");
PanicReasons.set(18, "DIVIDE_BY_ZERO");
PanicReasons.set(33, "ENUM_RANGE_ERROR");
PanicReasons.set(34, "BAD_STORAGE_DATA");
PanicReasons.set(49, "STACK_UNDERFLOW");
PanicReasons.set(50, "ARRAY_RANGE_ERROR");
PanicReasons.set(65, "OUT_OF_MEMORY");
PanicReasons.set(81, "UNINITIALIZED_FUNCTION_CALL");
var paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);
var paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);
var defaultCoder = null;
function getBuiltinCallException(action, tx, data, abiCoder) {
  let message = "missing revert data";
  let reason = null;
  const invocation = null;
  let revert = null;
  if (data) {
    message = "execution reverted";
    const bytes2 = getBytes(data);
    data = hexlify(data);
    if (bytes2.length === 0) {
      message += " (no data present; likely require(false) occurred";
      reason = "require(false)";
    } else if (bytes2.length % 32 !== 4) {
      message += " (could not decode reason; invalid data length)";
    } else if (hexlify(bytes2.slice(0, 4)) === "0x08c379a0") {
      try {
        reason = abiCoder.decode(["string"], bytes2.slice(4))[0];
        revert = {
          signature: "Error(string)",
          name: "Error",
          args: [reason]
        };
        message += `: ${JSON.stringify(reason)}`;
      } catch (error) {
        message += " (could not decode reason; invalid string data)";
      }
    } else if (hexlify(bytes2.slice(0, 4)) === "0x4e487b71") {
      try {
        const code = Number(abiCoder.decode(["uint256"], bytes2.slice(4))[0]);
        revert = {
          signature: "Panic(uint256)",
          name: "Panic",
          args: [code]
        };
        reason = `Panic due to ${PanicReasons.get(code) || "UNKNOWN"}(${code})`;
        message += `: ${reason}`;
      } catch (error) {
        message += " (could not decode panic code)";
      }
    } else {
      message += " (unknown custom error)";
    }
  }
  const transaction = {
    to: tx.to ? getAddress(tx.to) : null,
    data: tx.data || "0x"
  };
  if (tx.from) {
    transaction.from = getAddress(tx.from);
  }
  return makeError(message, "CALL_EXCEPTION", {
    action,
    data,
    reason,
    transaction,
    invocation,
    revert
  });
}
var _getCoder, getCoder_fn;
var _AbiCoder = class {
  constructor() {
    __privateAdd(this, _getCoder);
  }
  /**
   *  Get the default values for the given %%types%%.
   *
   *  For example, a ``uint`` is by default ``0`` and ``bool``
   *  is by default ``false``.
   */
  getDefaultValue(types) {
    const coders = types.map((type) => __privateMethod(this, _getCoder, getCoder_fn).call(this, ParamType.from(type)));
    const coder = new TupleCoder(coders, "_");
    return coder.defaultValue();
  }
  /**
   *  Encode the %%values%% as the %%types%% into ABI data.
   *
   *  @returns DataHexstring
   */
  encode(types, values) {
    assertArgumentCount(values.length, types.length, "types/values length mismatch");
    const coders = types.map((type) => __privateMethod(this, _getCoder, getCoder_fn).call(this, ParamType.from(type)));
    const coder = new TupleCoder(coders, "_");
    const writer = new Writer();
    coder.encode(writer, values);
    return writer.data;
  }
  /**
   *  Decode the ABI %%data%% as the %%types%% into values.
   *
   *  If %%loose%% decoding is enabled, then strict padding is
   *  not enforced. Some older versions of Solidity incorrectly
   *  padded event data emitted from ``external`` functions.
   */
  decode(types, data, loose) {
    const coders = types.map((type) => __privateMethod(this, _getCoder, getCoder_fn).call(this, ParamType.from(type)));
    const coder = new TupleCoder(coders, "_");
    return coder.decode(new Reader(data, loose));
  }
  /**
   *  Returns the shared singleton instance of a default [[AbiCoder]].
   *
   *  On the first call, the instance is created internally.
   */
  static defaultAbiCoder() {
    if (defaultCoder == null) {
      defaultCoder = new _AbiCoder();
    }
    return defaultCoder;
  }
  /**
   *  Returns an ethers-compatible [[CallExceptionError]] Error for the given
   *  result %%data%% for the [[CallExceptionAction]] %%action%% against
   *  the Transaction %%tx%%.
   */
  static getBuiltinCallException(action, tx, data) {
    return getBuiltinCallException(action, tx, data, _AbiCoder.defaultAbiCoder());
  }
};
var AbiCoder = _AbiCoder;
_getCoder = new WeakSet();
getCoder_fn = function(param) {
  if (param.isArray()) {
    return new ArrayCoder(__privateMethod(this, _getCoder, getCoder_fn).call(this, param.arrayChildren), param.arrayLength, param.name);
  }
  if (param.isTuple()) {
    return new TupleCoder(param.components.map((c) => __privateMethod(this, _getCoder, getCoder_fn).call(this, c)), param.name);
  }
  switch (param.baseType) {
    case "address":
      return new AddressCoder(param.name);
    case "bool":
      return new BooleanCoder(param.name);
    case "string":
      return new StringCoder(param.name);
    case "bytes":
      return new BytesCoder(param.name);
    case "":
      return new NullCoder(param.name);
  }
  let match = param.type.match(paramTypeNumber);
  if (match) {
    let size = parseInt(match[2] || "256");
    assertArgument(size !== 0 && size <= 256 && size % 8 === 0, "invalid " + match[1] + " bit length", "param", param);
    return new NumberCoder(size / 8, match[1] === "int", param.name);
  }
  match = param.type.match(paramTypeBytes);
  if (match) {
    let size = parseInt(match[1]);
    assertArgument(size !== 0 && size <= 32, "invalid bytes length", "param", param);
    return new FixedBytesCoder(size, param.name);
  }
  assertArgument(false, "invalid type", "type", param.type);
};

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/abi/interface.js
var LogDescription = class {
  /**
   *  @_ignore:
   */
  constructor(fragment, topic, args) {
    /**
     *  The matching fragment for the ``topic0``.
     */
    __publicField(this, "fragment");
    /**
     *  The name of the Event.
     */
    __publicField(this, "name");
    /**
     *  The full Event signature.
     */
    __publicField(this, "signature");
    /**
     *  The topic hash for the Event.
     */
    __publicField(this, "topic");
    /**
     *  The arguments passed into the Event with ``emit``.
     */
    __publicField(this, "args");
    const name = fragment.name, signature = fragment.format();
    defineProperties(this, {
      fragment,
      name,
      signature,
      topic,
      args
    });
  }
};
var TransactionDescription = class {
  /**
   *  @_ignore:
   */
  constructor(fragment, selector, args, value) {
    /**
     *  The matching fragment from the transaction ``data``.
     */
    __publicField(this, "fragment");
    /**
     *  The name of the Function from the transaction ``data``.
     */
    __publicField(this, "name");
    /**
     *  The arguments passed to the Function from the transaction ``data``.
     */
    __publicField(this, "args");
    /**
     *  The full Function signature from the transaction ``data``.
     */
    __publicField(this, "signature");
    /**
     *  The selector for the Function from the transaction ``data``.
     */
    __publicField(this, "selector");
    /**
     *  The ``value`` (in wei) from the transaction.
     */
    __publicField(this, "value");
    const name = fragment.name, signature = fragment.format();
    defineProperties(this, {
      fragment,
      name,
      args,
      signature,
      selector,
      value
    });
  }
};
var ErrorDescription = class {
  /**
   *  @_ignore:
   */
  constructor(fragment, selector, args) {
    /**
     *  The matching fragment.
     */
    __publicField(this, "fragment");
    /**
     *  The name of the Error.
     */
    __publicField(this, "name");
    /**
     *  The arguments passed to the Error with ``revert``.
     */
    __publicField(this, "args");
    /**
     *  The full Error signature.
     */
    __publicField(this, "signature");
    /**
     *  The selector for the Error.
     */
    __publicField(this, "selector");
    const name = fragment.name, signature = fragment.format();
    defineProperties(this, {
      fragment,
      name,
      args,
      signature,
      selector
    });
  }
};
var Indexed = class {
  /**
   *  @_ignore:
   */
  constructor(hash) {
    /**
     *  The ``keccak256`` of the value logged.
     */
    __publicField(this, "hash");
    /**
     *  @_ignore:
     */
    __publicField(this, "_isIndexed");
    defineProperties(this, { hash, _isIndexed: true });
  }
  /**
   *  Returns ``true`` if %%value%% is an **Indexed**.
   *
   *  This provides a Type Guard for property access.
   */
  static isIndexed(value) {
    return !!(value && value._isIndexed);
  }
};
var PanicReasons2 = {
  "0": "generic panic",
  "1": "assert(false)",
  "17": "arithmetic overflow",
  "18": "division or modulo by zero",
  "33": "enum overflow",
  "34": "invalid encoded storage byte array accessed",
  "49": "out-of-bounds array access; popping on an empty array",
  "50": "out-of-bounds access of an array or bytesN",
  "65": "out of memory",
  "81": "uninitialized function"
};
var BuiltinErrors = {
  "0x08c379a0": {
    signature: "Error(string)",
    name: "Error",
    inputs: ["string"],
    reason: (message) => {
      return `reverted with reason string ${JSON.stringify(message)}`;
    }
  },
  "0x4e487b71": {
    signature: "Panic(uint256)",
    name: "Panic",
    inputs: ["uint256"],
    reason: (code) => {
      let reason = "unknown panic code";
      if (code >= 0 && code <= 255 && PanicReasons2[code.toString()]) {
        reason = PanicReasons2[code.toString()];
      }
      return `reverted with panic code 0x${code.toString(16)} (${reason})`;
    }
  }
};
var _errors, _events, _functions, _abiCoder, _getFunction, getFunction_fn, _getEvent, getEvent_fn;
var _Interface = class {
  /**
   *  Create a new Interface for the %%fragments%%.
   */
  constructor(fragments) {
    // Find a function definition by any means necessary (unless it is ambiguous)
    __privateAdd(this, _getFunction);
    // Find an event definition by any means necessary (unless it is ambiguous)
    __privateAdd(this, _getEvent);
    /**
     *  All the Contract ABI members (i.e. methods, events, errors, etc).
     */
    __publicField(this, "fragments");
    /**
     *  The Contract constructor.
     */
    __publicField(this, "deploy");
    /**
     *  The Fallback method, if any.
     */
    __publicField(this, "fallback");
    /**
     *  If receiving ether is supported.
     */
    __publicField(this, "receive");
    __privateAdd(this, _errors, void 0);
    __privateAdd(this, _events, void 0);
    __privateAdd(this, _functions, void 0);
    //    #structs: Map<string, StructFragment>;
    __privateAdd(this, _abiCoder, void 0);
    let abi = [];
    if (typeof fragments === "string") {
      abi = JSON.parse(fragments);
    } else {
      abi = fragments;
    }
    __privateSet(this, _functions, /* @__PURE__ */ new Map());
    __privateSet(this, _errors, /* @__PURE__ */ new Map());
    __privateSet(this, _events, /* @__PURE__ */ new Map());
    const frags = [];
    for (const a of abi) {
      try {
        frags.push(Fragment.from(a));
      } catch (error) {
        console.log("EE", error);
      }
    }
    defineProperties(this, {
      fragments: Object.freeze(frags)
    });
    let fallback = null;
    let receive = false;
    __privateSet(this, _abiCoder, this.getAbiCoder());
    this.fragments.forEach((fragment, index) => {
      let bucket;
      switch (fragment.type) {
        case "constructor":
          if (this.deploy) {
            console.log("duplicate definition - constructor");
            return;
          }
          defineProperties(this, { deploy: fragment });
          return;
        case "fallback":
          if (fragment.inputs.length === 0) {
            receive = true;
          } else {
            assertArgument(!fallback || fragment.payable !== fallback.payable, "conflicting fallback fragments", `fragments[${index}]`, fragment);
            fallback = fragment;
            receive = fallback.payable;
          }
          return;
        case "function":
          bucket = __privateGet(this, _functions);
          break;
        case "event":
          bucket = __privateGet(this, _events);
          break;
        case "error":
          bucket = __privateGet(this, _errors);
          break;
        default:
          return;
      }
      const signature = fragment.format();
      if (bucket.has(signature)) {
        return;
      }
      bucket.set(signature, fragment);
    });
    if (!this.deploy) {
      defineProperties(this, {
        deploy: ConstructorFragment.from("constructor()")
      });
    }
    defineProperties(this, { fallback, receive });
  }
  /**
   *  Returns the entire Human-Readable ABI, as an array of
   *  signatures, optionally as %%minimal%% strings, which
   *  removes parameter names and unneceesary spaces.
   */
  format(minimal) {
    const format = minimal ? "minimal" : "full";
    const abi = this.fragments.map((f) => f.format(format));
    return abi;
  }
  /**
   *  Return the JSON-encoded ABI. This is the format Solidiy
   *  returns.
   */
  formatJson() {
    const abi = this.fragments.map((f) => f.format("json"));
    return JSON.stringify(abi.map((j) => JSON.parse(j)));
  }
  /**
   *  The ABI coder that will be used to encode and decode binary
   *  data.
   */
  getAbiCoder() {
    return AbiCoder.defaultAbiCoder();
  }
  /**
   *  Get the function name for %%key%%, which may be a function selector,
   *  function name or function signature that belongs to the ABI.
   */
  getFunctionName(key) {
    const fragment = __privateMethod(this, _getFunction, getFunction_fn).call(this, key, null, false);
    assertArgument(fragment, "no matching function", "key", key);
    return fragment.name;
  }
  /**
   *  Returns true if %%key%% (a function selector, function name or
   *  function signature) is present in the ABI.
   *
   *  In the case of a function name, the name may be ambiguous, so
   *  accessing the [[FunctionFragment]] may require refinement.
   */
  hasFunction(key) {
    return !!__privateMethod(this, _getFunction, getFunction_fn).call(this, key, null, false);
  }
  /**
   *  Get the [[FunctionFragment]] for %%key%%, which may be a function
   *  selector, function name or function signature that belongs to the ABI.
   *
   *  If %%values%% is provided, it will use the Typed API to handle
   *  ambiguous cases where multiple functions match by name.
   *
   *  If the %%key%% and %%values%% do not refine to a single function in
   *  the ABI, this will throw.
   */
  getFunction(key, values) {
    return __privateMethod(this, _getFunction, getFunction_fn).call(this, key, values || null, true);
  }
  /**
   *  Iterate over all functions, calling %%callback%%, sorted by their name.
   */
  forEachFunction(callback) {
    const names = Array.from(__privateGet(this, _functions).keys());
    names.sort((a, b2) => a.localeCompare(b2));
    for (let i = 0; i < names.length; i++) {
      const name = names[i];
      callback(__privateGet(this, _functions).get(name), i);
    }
  }
  /**
   *  Get the event name for %%key%%, which may be a topic hash,
   *  event name or event signature that belongs to the ABI.
   */
  getEventName(key) {
    const fragment = __privateMethod(this, _getEvent, getEvent_fn).call(this, key, null, false);
    assertArgument(fragment, "no matching event", "key", key);
    return fragment.name;
  }
  /**
   *  Returns true if %%key%% (an event topic hash, event name or
   *  event signature) is present in the ABI.
   *
   *  In the case of an event name, the name may be ambiguous, so
   *  accessing the [[EventFragment]] may require refinement.
   */
  hasEvent(key) {
    return !!__privateMethod(this, _getEvent, getEvent_fn).call(this, key, null, false);
  }
  /**
   *  Get the [[EventFragment]] for %%key%%, which may be a topic hash,
   *  event name or event signature that belongs to the ABI.
   *
   *  If %%values%% is provided, it will use the Typed API to handle
   *  ambiguous cases where multiple events match by name.
   *
   *  If the %%key%% and %%values%% do not refine to a single event in
   *  the ABI, this will throw.
   */
  getEvent(key, values) {
    return __privateMethod(this, _getEvent, getEvent_fn).call(this, key, values || null, true);
  }
  /**
   *  Iterate over all events, calling %%callback%%, sorted by their name.
   */
  forEachEvent(callback) {
    const names = Array.from(__privateGet(this, _events).keys());
    names.sort((a, b2) => a.localeCompare(b2));
    for (let i = 0; i < names.length; i++) {
      const name = names[i];
      callback(__privateGet(this, _events).get(name), i);
    }
  }
  /**
   *  Get the [[ErrorFragment]] for %%key%%, which may be an error
   *  selector, error name or error signature that belongs to the ABI.
   *
   *  If %%values%% is provided, it will use the Typed API to handle
   *  ambiguous cases where multiple errors match by name.
   *
   *  If the %%key%% and %%values%% do not refine to a single error in
   *  the ABI, this will throw.
   */
  getError(key, values) {
    if (isHexString(key)) {
      const selector = key.toLowerCase();
      if (BuiltinErrors[selector]) {
        return ErrorFragment.from(BuiltinErrors[selector].signature);
      }
      for (const fragment of __privateGet(this, _errors).values()) {
        if (selector === fragment.selector) {
          return fragment;
        }
      }
      return null;
    }
    if (key.indexOf("(") === -1) {
      const matching = [];
      for (const [name, fragment] of __privateGet(this, _errors)) {
        if (name.split(
          "("
          /* fix:) */
        )[0] === key) {
          matching.push(fragment);
        }
      }
      if (matching.length === 0) {
        if (key === "Error") {
          return ErrorFragment.from("error Error(string)");
        }
        if (key === "Panic") {
          return ErrorFragment.from("error Panic(uint256)");
        }
        return null;
      } else if (matching.length > 1) {
        const matchStr = matching.map((m) => JSON.stringify(m.format())).join(", ");
        assertArgument(false, `ambiguous error description (i.e. ${matchStr})`, "name", key);
      }
      return matching[0];
    }
    key = ErrorFragment.from(key).format();
    if (key === "Error(string)") {
      return ErrorFragment.from("error Error(string)");
    }
    if (key === "Panic(uint256)") {
      return ErrorFragment.from("error Panic(uint256)");
    }
    const result = __privateGet(this, _errors).get(key);
    if (result) {
      return result;
    }
    return null;
  }
  /**
   *  Iterate over all errors, calling %%callback%%, sorted by their name.
   */
  forEachError(callback) {
    const names = Array.from(__privateGet(this, _errors).keys());
    names.sort((a, b2) => a.localeCompare(b2));
    for (let i = 0; i < names.length; i++) {
      const name = names[i];
      callback(__privateGet(this, _errors).get(name), i);
    }
  }
  // Get the 4-byte selector used by Solidity to identify a function
  /*
  getSelector(fragment: ErrorFragment | FunctionFragment): string {
      if (typeof(fragment) === "string") {
          const matches: Array<Fragment> = [ ];
  
          try { matches.push(this.getFunction(fragment)); } catch (error) { }
          try { matches.push(this.getError(<string>fragment)); } catch (_) { }
  
          if (matches.length === 0) {
              logger.throwArgumentError("unknown fragment", "key", fragment);
          } else if (matches.length > 1) {
              logger.throwArgumentError("ambiguous fragment matches function and error", "key", fragment);
          }
  
          fragment = matches[0];
      }
  
      return dataSlice(id(fragment.format()), 0, 4);
  }
      */
  // Get the 32-byte topic hash used by Solidity to identify an event
  /*
  getEventTopic(fragment: EventFragment): string {
      //if (typeof(fragment) === "string") { fragment = this.getEvent(eventFragment); }
      return id(fragment.format());
  }
  */
  _decodeParams(params, data) {
    return __privateGet(this, _abiCoder).decode(params, data);
  }
  _encodeParams(params, values) {
    return __privateGet(this, _abiCoder).encode(params, values);
  }
  /**
   *  Encodes a ``tx.data`` object for deploying the Contract with
   *  the %%values%% as the constructor arguments.
   */
  encodeDeploy(values) {
    return this._encodeParams(this.deploy.inputs, values || []);
  }
  /**
   *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the
   *  specified error (see [[getError]] for valid values for
   *  %%key%%).
   *
   *  Most developers should prefer the [[parseCallResult]] method instead,
   *  which will automatically detect a ``CALL_EXCEPTION`` and throw the
   *  corresponding error.
   */
  decodeErrorResult(fragment, data) {
    if (typeof fragment === "string") {
      const f = this.getError(fragment);
      assertArgument(f, "unknown error", "fragment", fragment);
      fragment = f;
    }
    assertArgument(dataSlice(data, 0, 4) === fragment.selector, `data signature does not match error ${fragment.name}.`, "data", data);
    return this._decodeParams(fragment.inputs, dataSlice(data, 4));
  }
  /**
   *  Encodes the transaction revert data for a call result that
   *  reverted from the the Contract with the sepcified %%error%%
   *  (see [[getError]] for valid values for %%fragment%%) with the %%values%%.
   *
   *  This is generally not used by most developers, unless trying to mock
   *  a result from a Contract.
   */
  encodeErrorResult(fragment, values) {
    if (typeof fragment === "string") {
      const f = this.getError(fragment);
      assertArgument(f, "unknown error", "fragment", fragment);
      fragment = f;
    }
    return concat([
      fragment.selector,
      this._encodeParams(fragment.inputs, values || [])
    ]);
  }
  /**
   *  Decodes the %%data%% from a transaction ``tx.data`` for
   *  the function specified (see [[getFunction]] for valid values
   *  for %%fragment%%).
   *
   *  Most developers should prefer the [[parseTransaction]] method
   *  instead, which will automatically detect the fragment.
   */
  decodeFunctionData(fragment, data) {
    if (typeof fragment === "string") {
      const f = this.getFunction(fragment);
      assertArgument(f, "unknown function", "fragment", fragment);
      fragment = f;
    }
    assertArgument(dataSlice(data, 0, 4) === fragment.selector, `data signature does not match function ${fragment.name}.`, "data", data);
    return this._decodeParams(fragment.inputs, dataSlice(data, 4));
  }
  /**
   *  Encodes the ``tx.data`` for a transaction that calls the function
   *  specified (see [[getFunction]] for valid values for %%fragment%%) with
   *  the %%values%%.
   */
  encodeFunctionData(fragment, values) {
    if (typeof fragment === "string") {
      const f = this.getFunction(fragment);
      assertArgument(f, "unknown function", "fragment", fragment);
      fragment = f;
    }
    return concat([
      fragment.selector,
      this._encodeParams(fragment.inputs, values || [])
    ]);
  }
  /**
   *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the
   *  specified function (see [[getFunction]] for valid values for
   *  %%key%%).
   *
   *  Most developers should prefer the [[parseCallResult]] method instead,
   *  which will automatically detect a ``CALL_EXCEPTION`` and throw the
   *  corresponding error.
   */
  decodeFunctionResult(fragment, data) {
    if (typeof fragment === "string") {
      const f = this.getFunction(fragment);
      assertArgument(f, "unknown function", "fragment", fragment);
      fragment = f;
    }
    let message = "invalid length for result data";
    const bytes2 = getBytesCopy(data);
    if (bytes2.length % 32 === 0) {
      try {
        return __privateGet(this, _abiCoder).decode(fragment.outputs, bytes2);
      } catch (error) {
        message = "could not decode result data";
      }
    }
    assert(false, message, "BAD_DATA", {
      value: hexlify(bytes2),
      info: { method: fragment.name, signature: fragment.format() }
    });
  }
  makeError(_data3, tx) {
    const data = getBytes(_data3, "data");
    const error = AbiCoder.getBuiltinCallException("call", tx, data);
    const customPrefix = "execution reverted (unknown custom error)";
    if (error.message.startsWith(customPrefix)) {
      const selector = hexlify(data.slice(0, 4));
      const ef = this.getError(selector);
      if (ef) {
        try {
          const args = __privateGet(this, _abiCoder).decode(ef.inputs, data.slice(4));
          error.revert = {
            name: ef.name,
            signature: ef.format(),
            args
          };
          error.reason = error.revert.signature;
          error.message = `execution reverted: ${error.reason}`;
        } catch (e) {
          error.message = `execution reverted (coult not decode custom error)`;
        }
      }
    }
    const parsed = this.parseTransaction(tx);
    if (parsed) {
      error.invocation = {
        method: parsed.name,
        signature: parsed.signature,
        args: parsed.args
      };
    }
    return error;
  }
  /**
   *  Encodes the result data (e.g. from an ``eth_call``) for the
   *  specified function (see [[getFunction]] for valid values
   *  for %%fragment%%) with %%values%%.
   *
   *  This is generally not used by most developers, unless trying to mock
   *  a result from a Contract.
   */
  encodeFunctionResult(fragment, values) {
    if (typeof fragment === "string") {
      const f = this.getFunction(fragment);
      assertArgument(f, "unknown function", "fragment", fragment);
      fragment = f;
    }
    return hexlify(__privateGet(this, _abiCoder).encode(fragment.outputs, values || []));
  }
  /*
      spelunk(inputs: Array<ParamType>, values: ReadonlyArray<any>, processfunc: (type: string, value: any) => Promise<any>): Promise<Array<any>> {
          const promises: Array<Promise<>> = [ ];
          const process = function(type: ParamType, value: any): any {
              if (type.baseType === "array") {
                  return descend(type.child
              }
              if (type. === "address") {
              }
          };
  
          const descend = function (inputs: Array<ParamType>, values: ReadonlyArray<any>) {
              if (inputs.length !== values.length) { throw new Error("length mismatch"); }
              
          };
  
          const result: Array<any> = [ ];
          values.forEach((value, index) => {
              if (value == null) {
                  topics.push(null);
              } else if (param.baseType === "array" || param.baseType === "tuple") {
                  logger.throwArgumentError("filtering with tuples or arrays not supported", ("contract." + param.name), value);
              } else if (Array.isArray(value)) {
                  topics.push(value.map((value) => encodeTopic(param, value)));
              } else {
                  topics.push(encodeTopic(param, value));
              }
          });
      }
  */
  // Create the filter for the event with search criteria (e.g. for eth_filterLog)
  encodeFilterTopics(fragment, values) {
    if (typeof fragment === "string") {
      const f = this.getEvent(fragment);
      assertArgument(f, "unknown event", "eventFragment", fragment);
      fragment = f;
    }
    assert(values.length <= fragment.inputs.length, `too many arguments for ${fragment.format()}`, "UNEXPECTED_ARGUMENT", { count: values.length, expectedCount: fragment.inputs.length });
    const topics = [];
    if (!fragment.anonymous) {
      topics.push(fragment.topicHash);
    }
    const encodeTopic = (param, value) => {
      if (param.type === "string") {
        return id(value);
      } else if (param.type === "bytes") {
        return keccak256(hexlify(value));
      }
      if (param.type === "bool" && typeof value === "boolean") {
        value = value ? "0x01" : "0x00";
      } else if (param.type.match(/^u?int/)) {
        value = toBeHex(value);
      } else if (param.type.match(/^bytes/)) {
        value = zeroPadBytes(value, 32);
      } else if (param.type === "address") {
        __privateGet(this, _abiCoder).encode(["address"], [value]);
      }
      return zeroPadValue(hexlify(value), 32);
    };
    values.forEach((value, index) => {
      const param = fragment.inputs[index];
      if (!param.indexed) {
        assertArgument(value == null, "cannot filter non-indexed parameters; must be null", "contract." + param.name, value);
        return;
      }
      if (value == null) {
        topics.push(null);
      } else if (param.baseType === "array" || param.baseType === "tuple") {
        assertArgument(false, "filtering with tuples or arrays not supported", "contract." + param.name, value);
      } else if (Array.isArray(value)) {
        topics.push(value.map((value2) => encodeTopic(param, value2)));
      } else {
        topics.push(encodeTopic(param, value));
      }
    });
    while (topics.length && topics[topics.length - 1] === null) {
      topics.pop();
    }
    return topics;
  }
  encodeEventLog(fragment, values) {
    if (typeof fragment === "string") {
      const f = this.getEvent(fragment);
      assertArgument(f, "unknown event", "eventFragment", fragment);
      fragment = f;
    }
    const topics = [];
    const dataTypes = [];
    const dataValues = [];
    if (!fragment.anonymous) {
      topics.push(fragment.topicHash);
    }
    assertArgument(values.length === fragment.inputs.length, "event arguments/values mismatch", "values", values);
    fragment.inputs.forEach((param, index) => {
      const value = values[index];
      if (param.indexed) {
        if (param.type === "string") {
          topics.push(id(value));
        } else if (param.type === "bytes") {
          topics.push(keccak256(value));
        } else if (param.baseType === "tuple" || param.baseType === "array") {
          throw new Error("not implemented");
        } else {
          topics.push(__privateGet(this, _abiCoder).encode([param.type], [value]));
        }
      } else {
        dataTypes.push(param);
        dataValues.push(value);
      }
    });
    return {
      data: __privateGet(this, _abiCoder).encode(dataTypes, dataValues),
      topics
    };
  }
  // Decode a filter for the event and the search criteria
  decodeEventLog(fragment, data, topics) {
    if (typeof fragment === "string") {
      const f = this.getEvent(fragment);
      assertArgument(f, "unknown event", "eventFragment", fragment);
      fragment = f;
    }
    if (topics != null && !fragment.anonymous) {
      const eventTopic = fragment.topicHash;
      assertArgument(isHexString(topics[0], 32) && topics[0].toLowerCase() === eventTopic, "fragment/topic mismatch", "topics[0]", topics[0]);
      topics = topics.slice(1);
    }
    const indexed = [];
    const nonIndexed = [];
    const dynamic = [];
    fragment.inputs.forEach((param, index) => {
      if (param.indexed) {
        if (param.type === "string" || param.type === "bytes" || param.baseType === "tuple" || param.baseType === "array") {
          indexed.push(ParamType.from({ type: "bytes32", name: param.name }));
          dynamic.push(true);
        } else {
          indexed.push(param);
          dynamic.push(false);
        }
      } else {
        nonIndexed.push(param);
        dynamic.push(false);
      }
    });
    const resultIndexed = topics != null ? __privateGet(this, _abiCoder).decode(indexed, concat(topics)) : null;
    const resultNonIndexed = __privateGet(this, _abiCoder).decode(nonIndexed, data, true);
    const values = [];
    const keys = [];
    let nonIndexedIndex = 0, indexedIndex = 0;
    fragment.inputs.forEach((param, index) => {
      let value = null;
      if (param.indexed) {
        if (resultIndexed == null) {
          value = new Indexed(null);
        } else if (dynamic[index]) {
          value = new Indexed(resultIndexed[indexedIndex++]);
        } else {
          try {
            value = resultIndexed[indexedIndex++];
          } catch (error) {
            value = error;
          }
        }
      } else {
        try {
          value = resultNonIndexed[nonIndexedIndex++];
        } catch (error) {
          value = error;
        }
      }
      values.push(value);
      keys.push(param.name || null);
    });
    return Result.fromItems(values, keys);
  }
  /**
   *  Parses a transaction, finding the matching function and extracts
   *  the parameter values along with other useful function details.
   *
   *  If the matching function cannot be found, return null.
   */
  parseTransaction(tx) {
    const data = getBytes(tx.data, "tx.data");
    const value = getBigInt(tx.value != null ? tx.value : 0, "tx.value");
    const fragment = this.getFunction(hexlify(data.slice(0, 4)));
    if (!fragment) {
      return null;
    }
    const args = __privateGet(this, _abiCoder).decode(fragment.inputs, data.slice(4));
    return new TransactionDescription(fragment, fragment.selector, args, value);
  }
  parseCallResult(data) {
    throw new Error("@TODO");
  }
  /**
   *  Parses a receipt log, finding the matching event and extracts
   *  the parameter values along with other useful event details.
   *
   *  If the matching event cannot be found, returns null.
   */
  parseLog(log) {
    const fragment = this.getEvent(log.topics[0]);
    if (!fragment || fragment.anonymous) {
      return null;
    }
    return new LogDescription(fragment, fragment.topicHash, this.decodeEventLog(fragment, log.data, log.topics));
  }
  /**
   *  Parses a revert data, finding the matching error and extracts
   *  the parameter values along with other useful error details.
   *
   *  If the matching error cannot be found, returns null.
   */
  parseError(data) {
    const hexData = hexlify(data);
    const fragment = this.getError(dataSlice(hexData, 0, 4));
    if (!fragment) {
      return null;
    }
    const args = __privateGet(this, _abiCoder).decode(fragment.inputs, dataSlice(hexData, 4));
    return new ErrorDescription(fragment, fragment.selector, args);
  }
  /**
   *  Creates a new [[Interface]] from the ABI %%value%%.
   *
   *  The %%value%% may be provided as an existing [[Interface]] object,
   *  a JSON-encoded ABI or any Human-Readable ABI format.
   */
  static from(value) {
    if (value instanceof _Interface) {
      return value;
    }
    if (typeof value === "string") {
      return new _Interface(JSON.parse(value));
    }
    if (typeof value.format === "function") {
      return new _Interface(value.format("json"));
    }
    return new _Interface(value);
  }
};
var Interface = _Interface;
_errors = new WeakMap();
_events = new WeakMap();
_functions = new WeakMap();
_abiCoder = new WeakMap();
_getFunction = new WeakSet();
getFunction_fn = function(key, values, forceUnique) {
  if (isHexString(key)) {
    const selector = key.toLowerCase();
    for (const fragment of __privateGet(this, _functions).values()) {
      if (selector === fragment.selector) {
        return fragment;
      }
    }
    return null;
  }
  if (key.indexOf("(") === -1) {
    const matching = [];
    for (const [name, fragment] of __privateGet(this, _functions)) {
      if (name.split(
        "("
        /* fix:) */
      )[0] === key) {
        matching.push(fragment);
      }
    }
    if (values) {
      const lastValue = values.length > 0 ? values[values.length - 1] : null;
      let valueLength = values.length;
      let allowOptions = true;
      if (Typed.isTyped(lastValue) && lastValue.type === "overrides") {
        allowOptions = false;
        valueLength--;
      }
      for (let i = matching.length - 1; i >= 0; i--) {
        const inputs = matching[i].inputs.length;
        if (inputs !== valueLength && (!allowOptions || inputs !== valueLength - 1)) {
          matching.splice(i, 1);
        }
      }
      for (let i = matching.length - 1; i >= 0; i--) {
        const inputs = matching[i].inputs;
        for (let j = 0; j < values.length; j++) {
          if (!Typed.isTyped(values[j])) {
            continue;
          }
          if (j >= inputs.length) {
            if (values[j].type === "overrides") {
              continue;
            }
            matching.splice(i, 1);
            break;
          }
          if (values[j].type !== inputs[j].baseType) {
            matching.splice(i, 1);
            break;
          }
        }
      }
    }
    if (matching.length === 1 && values && values.length !== matching[0].inputs.length) {
      const lastArg = values[values.length - 1];
      if (lastArg == null || Array.isArray(lastArg) || typeof lastArg !== "object") {
        matching.splice(0, 1);
      }
    }
    if (matching.length === 0) {
      return null;
    }
    if (matching.length > 1 && forceUnique) {
      const matchStr = matching.map((m) => JSON.stringify(m.format())).join(", ");
      assertArgument(false, `ambiguous function description (i.e. matches ${matchStr})`, "key", key);
    }
    return matching[0];
  }
  const result = __privateGet(this, _functions).get(FunctionFragment.from(key).format());
  if (result) {
    return result;
  }
  return null;
};
_getEvent = new WeakSet();
getEvent_fn = function(key, values, forceUnique) {
  if (isHexString(key)) {
    const eventTopic = key.toLowerCase();
    for (const fragment of __privateGet(this, _events).values()) {
      if (eventTopic === fragment.topicHash) {
        return fragment;
      }
    }
    return null;
  }
  if (key.indexOf("(") === -1) {
    const matching = [];
    for (const [name, fragment] of __privateGet(this, _events)) {
      if (name.split(
        "("
        /* fix:) */
      )[0] === key) {
        matching.push(fragment);
      }
    }
    if (values) {
      for (let i = matching.length - 1; i >= 0; i--) {
        if (matching[i].inputs.length < values.length) {
          matching.splice(i, 1);
        }
      }
      for (let i = matching.length - 1; i >= 0; i--) {
        const inputs = matching[i].inputs;
        for (let j = 0; j < values.length; j++) {
          if (!Typed.isTyped(values[j])) {
            continue;
          }
          if (values[j].type !== inputs[j].baseType) {
            matching.splice(i, 1);
            break;
          }
        }
      }
    }
    if (matching.length === 0) {
      return null;
    }
    if (matching.length > 1 && forceUnique) {
      const matchStr = matching.map((m) => JSON.stringify(m.format())).join(", ");
      assertArgument(false, `ambiguous event description (i.e. matches ${matchStr})`, "key", key);
    }
    return matching[0];
  }
  const result = __privateGet(this, _events).get(EventFragment.from(key).format());
  if (result) {
    return result;
  }
  return null;
};

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/providers/provider.js
var BN_04 = BigInt(0);
function toJson(value) {
  if (value == null) {
    return null;
  }
  return value.toString();
}
function copyRequest(req) {
  const result = {};
  if (req.to) {
    result.to = req.to;
  }
  if (req.from) {
    result.from = req.from;
  }
  if (req.data) {
    result.data = hexlify(req.data);
  }
  const bigIntKeys = "chainId,gasLimit,gasPrice,maxFeePerGas,maxPriorityFeePerGas,value".split(/,/);
  for (const key of bigIntKeys) {
    if (!(key in req) || req[key] == null) {
      continue;
    }
    result[key] = getBigInt(req[key], `request.${key}`);
  }
  const numberKeys = "type,nonce".split(/,/);
  for (const key of numberKeys) {
    if (!(key in req) || req[key] == null) {
      continue;
    }
    result[key] = getNumber(req[key], `request.${key}`);
  }
  if (req.accessList) {
    result.accessList = accessListify(req.accessList);
  }
  if ("blockTag" in req) {
    result.blockTag = req.blockTag;
  }
  if ("enableCcipRead" in req) {
    result.enableCcipRead = !!req.enableCcipRead;
  }
  if ("customData" in req) {
    result.customData = req.customData;
  }
  return result;
}
var Log = class {
  /**
   *  @_ignore:
   */
  constructor(log, provider) {
    /**
     *  The provider connected to the log used to fetch additional details
     *  if necessary.
     */
    __publicField(this, "provider");
    /**
     *  The transaction hash of the transaction this log occurred in. Use the
     *  [[Log-getTransaction]] to get the [[TransactionResponse]].
     */
    __publicField(this, "transactionHash");
    /**
     *  The block hash of the block this log occurred in. Use the
     *  [[Log-getBlock]] to get the [[Block]].
     */
    __publicField(this, "blockHash");
    /**
     *  The block number of the block this log occurred in. It is preferred
     *  to use the [[Block-hash]] when fetching the related [[Block]],
     *  since in the case of an orphaned block, the block at that height may
     *  have changed.
     */
    __publicField(this, "blockNumber");
    /**
     *  If the **Log** represents a block that was removed due to an orphaned
     *  block, this will be true.
     *
     *  This can only happen within an orphan event listener.
     */
    __publicField(this, "removed");
    /**
     *  The address of the contract that emitted this log.
     */
    __publicField(this, "address");
    /**
     *  The data included in this log when it was emitted.
     */
    __publicField(this, "data");
    /**
     *  The indexed topics included in this log when it was emitted.
     *
     *  All topics are included in the bloom filters, so they can be
     *  efficiently filtered using the [[Provider-getLogs]] method.
     */
    __publicField(this, "topics");
    /**
     *  The index within the block this log occurred at. This is generally
     *  not useful to developers, but can be used with the various roots
     *  to proof inclusion within a block.
     */
    __publicField(this, "index");
    /**
     *  The index within the transaction of this log.
     */
    __publicField(this, "transactionIndex");
    this.provider = provider;
    const topics = Object.freeze(log.topics.slice());
    defineProperties(this, {
      transactionHash: log.transactionHash,
      blockHash: log.blockHash,
      blockNumber: log.blockNumber,
      removed: log.removed,
      address: log.address,
      data: log.data,
      topics,
      index: log.index,
      transactionIndex: log.transactionIndex
    });
  }
  /**
   *  Returns a JSON-compatible object.
   */
  toJSON() {
    const { address, blockHash, blockNumber, data, index, removed, topics, transactionHash, transactionIndex } = this;
    return {
      _type: "log",
      address,
      blockHash,
      blockNumber,
      data,
      index,
      removed,
      topics,
      transactionHash,
      transactionIndex
    };
  }
  /**
   *  Returns the block that this log occurred in.
   */
  async getBlock() {
    const block = await this.provider.getBlock(this.blockHash);
    assert(!!block, "failed to find transaction", "UNKNOWN_ERROR", {});
    return block;
  }
  /**
   *  Returns the transaction that this log occurred in.
   */
  async getTransaction() {
    const tx = await this.provider.getTransaction(this.transactionHash);
    assert(!!tx, "failed to find transaction", "UNKNOWN_ERROR", {});
    return tx;
  }
  /**
   *  Returns the transaction receipt fot the transaction that this
   *  log occurred in.
   */
  async getTransactionReceipt() {
    const receipt = await this.provider.getTransactionReceipt(this.transactionHash);
    assert(!!receipt, "failed to find transaction receipt", "UNKNOWN_ERROR", {});
    return receipt;
  }
  /**
   *  @_ignore:
   */
  removedEvent() {
    return createRemovedLogFilter(this);
  }
};
var _logs;
var TransactionReceipt = class {
  /**
   *  @_ignore:
   */
  constructor(tx, provider) {
    /**
     *  The provider connected to the log used to fetch additional details
     *  if necessary.
     */
    __publicField(this, "provider");
    /**
     *  The address the transaction was sent to.
     */
    __publicField(this, "to");
    /**
     *  The sender of the transaction.
     */
    __publicField(this, "from");
    /**
     *  The address of the contract if the transaction was directly
     *  responsible for deploying one.
     *
     *  This is non-null **only** if the ``to`` is empty and the ``data``
     *  was successfully executed as initcode.
     */
    __publicField(this, "contractAddress");
    /**
     *  The transaction hash.
     */
    __publicField(this, "hash");
    /**
     *  The index of this transaction within the block transactions.
     */
    __publicField(this, "index");
    /**
     *  The block hash of the [[Block]] this transaction was included in.
     */
    __publicField(this, "blockHash");
    /**
     *  The block number of the [[Block]] this transaction was included in.
     */
    __publicField(this, "blockNumber");
    /**
     *  The bloom filter bytes that represent all logs that occurred within
     *  this transaction. This is generally not useful for most developers,
     *  but can be used to validate the included logs.
     */
    __publicField(this, "logsBloom");
    /**
     *  The actual amount of gas used by this transaction.
     *
     *  When creating a transaction, the amount of gas that will be used can
     *  only be approximated, but the sender must pay the gas fee for the
     *  entire gas limit. After the transaction, the difference is refunded.
     */
    __publicField(this, "gasUsed");
    /**
     *  The amount of gas used by all transactions within the block for this
     *  and all transactions with a lower ``index``.
     *
     *  This is generally not useful for developers but can be used to
     *  validate certain aspects of execution.
     */
    __publicField(this, "cumulativeGasUsed");
    /**
     *  The actual gas price used during execution.
     *
     *  Due to the complexity of [[link-eip-1559]] this value can only
     *  be caluclated after the transaction has been mined, snce the base
     *  fee is protocol-enforced.
     */
    __publicField(this, "gasPrice");
    /**
     *  The [[link-eip-2718]] transaction type.
     */
    __publicField(this, "type");
    //readonly byzantium!: boolean;
    /**
     *  The status of this transaction, indicating success (i.e. ``1``) or
     *  a revert (i.e. ``0``).
     *
     *  This is available in post-byzantium blocks, but some backends may
     *  backfill this value.
     */
    __publicField(this, "status");
    /**
     *  The root hash of this transaction.
     *
     *  This is no present and was only included in pre-byzantium blocks, but
     *  could be used to validate certain parts of the receipt.
     */
    __publicField(this, "root");
    __privateAdd(this, _logs, void 0);
    __privateSet(this, _logs, Object.freeze(tx.logs.map((log) => {
      return new Log(log, provider);
    })));
    let gasPrice = BN_04;
    if (tx.effectiveGasPrice != null) {
      gasPrice = tx.effectiveGasPrice;
    } else if (tx.gasPrice != null) {
      gasPrice = tx.gasPrice;
    }
    defineProperties(this, {
      provider,
      to: tx.to,
      from: tx.from,
      contractAddress: tx.contractAddress,
      hash: tx.hash,
      index: tx.index,
      blockHash: tx.blockHash,
      blockNumber: tx.blockNumber,
      logsBloom: tx.logsBloom,
      gasUsed: tx.gasUsed,
      cumulativeGasUsed: tx.cumulativeGasUsed,
      gasPrice,
      type: tx.type,
      //byzantium: tx.byzantium,
      status: tx.status,
      root: tx.root
    });
  }
  /**
   *  The logs for this transaction.
   */
  get logs() {
    return __privateGet(this, _logs);
  }
  /**
   *  Returns a JSON-compatible representation.
   */
  toJSON() {
    const {
      to,
      from,
      contractAddress,
      hash,
      index,
      blockHash,
      blockNumber,
      logsBloom,
      logs,
      //byzantium, 
      status,
      root
    } = this;
    return {
      _type: "TransactionReceipt",
      blockHash,
      blockNumber,
      //byzantium, 
      contractAddress,
      cumulativeGasUsed: toJson(this.cumulativeGasUsed),
      from,
      gasPrice: toJson(this.gasPrice),
      gasUsed: toJson(this.gasUsed),
      hash,
      index,
      logs,
      logsBloom,
      root,
      status,
      to
    };
  }
  /**
   *  @_ignore:
   */
  get length() {
    return this.logs.length;
  }
  [Symbol.iterator]() {
    let index = 0;
    return {
      next: () => {
        if (index < this.length) {
          return { value: this.logs[index++], done: false };
        }
        return { value: void 0, done: true };
      }
    };
  }
  /**
   *  The total fee for this transaction, in wei.
   */
  get fee() {
    return this.gasUsed * this.gasPrice;
  }
  /**
   *  Resolves to the block this transaction occurred in.
   */
  async getBlock() {
    const block = await this.provider.getBlock(this.blockHash);
    if (block == null) {
      throw new Error("TODO");
    }
    return block;
  }
  /**
   *  Resolves to the transaction this transaction occurred in.
   */
  async getTransaction() {
    const tx = await this.provider.getTransaction(this.hash);
    if (tx == null) {
      throw new Error("TODO");
    }
    return tx;
  }
  /**
   *  Resolves to the return value of the execution of this transaction.
   *
   *  Support for this feature is limited, as it requires an archive node
   *  with the ``debug_`` or ``trace_`` API enabled.
   */
  async getResult() {
    return await this.provider.getTransactionResult(this.hash);
  }
  /**
   *  Resolves to the number of confirmations this transaction has.
   */
  async confirmations() {
    return await this.provider.getBlockNumber() - this.blockNumber + 1;
  }
  /**
   *  @_ignore:
   */
  removedEvent() {
    return createRemovedTransactionFilter(this);
  }
  /**
   *  @_ignore:
   */
  reorderedEvent(other) {
    assert(!other || other.isMined(), "unmined 'other' transction cannot be orphaned", "UNSUPPORTED_OPERATION", { operation: "reorderedEvent(other)" });
    return createReorderedTransactionFilter(this, other);
  }
};
_logs = new WeakMap();
var _startBlock;
var _TransactionResponse = class {
  /**
   *  @_ignore:
   */
  constructor(tx, provider) {
    /**
     *  The provider this is connected to, which will influence how its
     *  methods will resolve its async inspection methods.
     */
    __publicField(this, "provider");
    /**
     *  The block number of the block that this transaction was included in.
     *
     *  This is ``null`` for pending transactions.
     */
    __publicField(this, "blockNumber");
    /**
     *  The blockHash of the block that this transaction was included in.
     *
     *  This is ``null`` for pending transactions.
     */
    __publicField(this, "blockHash");
    /**
     *  The index within the block that this transaction resides at.
     */
    __publicField(this, "index");
    /**
     *  The transaction hash.
     */
    __publicField(this, "hash");
    /**
     *  The [[link-eip-2718]] transaction envelope type. This is
     *  ``0`` for legacy transactions types.
     */
    __publicField(this, "type");
    /**
     *  The receiver of this transaction.
     *
     *  If ``null``, then the transaction is an initcode transaction.
     *  This means the result of executing the [[data]] will be deployed
     *  as a new contract on chain (assuming it does not revert) and the
     *  address may be computed using [[getCreateAddress]].
     */
    __publicField(this, "to");
    /**
     *  The sender of this transaction. It is implicitly computed
     *  from the transaction pre-image hash (as the digest) and the
     *  [[signature]] using ecrecover.
     */
    __publicField(this, "from");
    /**
     *  The nonce, which is used to prevent replay attacks and offer
     *  a method to ensure transactions from a given sender are explicitly
     *  ordered.
     *
     *  When sending a transaction, this must be equal to the number of
     *  transactions ever sent by [[from]].
     */
    __publicField(this, "nonce");
    /**
     *  The maximum units of gas this transaction can consume. If execution
     *  exceeds this, the entries transaction is reverted and the sender
     *  is charged for the full amount, despite not state changes being made.
     */
    __publicField(this, "gasLimit");
    /**
     *  The gas price can have various values, depending on the network.
     *
     *  In modern networks, for transactions that are included this is
     *  the //effective gas price// (the fee per gas that was actually
     *  charged), while for transactions that have not been included yet
     *  is the [[maxFeePerGas]].
     *
     *  For legacy transactions, or transactions on legacy networks, this
     *  is the fee that will be charged per unit of gas the transaction
     *  consumes.
     */
    __publicField(this, "gasPrice");
    /**
     *  The maximum priority fee (per unit of gas) to allow a
     *  validator to charge the sender. This is inclusive of the
     *  [[maxFeeFeePerGas]].
     */
    __publicField(this, "maxPriorityFeePerGas");
    /**
     *  The maximum fee (per unit of gas) to allow this transaction
     *  to charge the sender.
     */
    __publicField(this, "maxFeePerGas");
    /**
     *  The data.
     */
    __publicField(this, "data");
    /**
     *  The value, in wei. Use [[formatEther]] to format this value
     *  as ether.
     */
    __publicField(this, "value");
    /**
     *  The chain ID.
     */
    __publicField(this, "chainId");
    /**
     *  The signature.
     */
    __publicField(this, "signature");
    /**
     *  The [[link-eip-2930]] access list for transaction types that
     *  support it, otherwise ``null``.
     */
    __publicField(this, "accessList");
    __privateAdd(this, _startBlock, void 0);
    this.provider = provider;
    this.blockNumber = tx.blockNumber != null ? tx.blockNumber : null;
    this.blockHash = tx.blockHash != null ? tx.blockHash : null;
    this.hash = tx.hash;
    this.index = tx.index;
    this.type = tx.type;
    this.from = tx.from;
    this.to = tx.to || null;
    this.gasLimit = tx.gasLimit;
    this.nonce = tx.nonce;
    this.data = tx.data;
    this.value = tx.value;
    this.gasPrice = tx.gasPrice;
    this.maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null ? tx.maxPriorityFeePerGas : null;
    this.maxFeePerGas = tx.maxFeePerGas != null ? tx.maxFeePerGas : null;
    this.chainId = tx.chainId;
    this.signature = tx.signature;
    this.accessList = tx.accessList != null ? tx.accessList : null;
    __privateSet(this, _startBlock, -1);
  }
  /**
   *  Returns a JSON-compatible representation of this transaction.
   */
  toJSON() {
    const { blockNumber, blockHash, index, hash, type, to, from, nonce, data, signature, accessList } = this;
    return {
      _type: "TransactionReceipt",
      accessList,
      blockNumber,
      blockHash,
      chainId: toJson(this.chainId),
      data,
      from,
      gasLimit: toJson(this.gasLimit),
      gasPrice: toJson(this.gasPrice),
      hash,
      maxFeePerGas: toJson(this.maxFeePerGas),
      maxPriorityFeePerGas: toJson(this.maxPriorityFeePerGas),
      nonce,
      signature,
      to,
      index,
      type,
      value: toJson(this.value)
    };
  }
  /**
   *  Resolves to the Block that this transaction was included in.
   *
   *  This will return null if the transaction has not been included yet.
   */
  async getBlock() {
    let blockNumber = this.blockNumber;
    if (blockNumber == null) {
      const tx = await this.getTransaction();
      if (tx) {
        blockNumber = tx.blockNumber;
      }
    }
    if (blockNumber == null) {
      return null;
    }
    const block = this.provider.getBlock(blockNumber);
    if (block == null) {
      throw new Error("TODO");
    }
    return block;
  }
  /**
   *  Resolves to this transaction being re-requested from the
   *  provider. This can be used if you have an unmined transaction
   *  and wish to get an up-to-date populated instance.
   */
  async getTransaction() {
    return this.provider.getTransaction(this.hash);
  }
  /**
   *  Resolve to the number of confirmations this transaction has.
   */
  async confirmations() {
    if (this.blockNumber == null) {
      const { tx, blockNumber: blockNumber2 } = await resolveProperties({
        tx: this.getTransaction(),
        blockNumber: this.provider.getBlockNumber()
      });
      if (tx == null || tx.blockNumber == null) {
        return 0;
      }
      return blockNumber2 - tx.blockNumber + 1;
    }
    const blockNumber = await this.provider.getBlockNumber();
    return blockNumber - this.blockNumber + 1;
  }
  /**
   *  Resolves once this transaction has been mined and has
   *  %%confirms%% blocks including it (default: ``1``) with an
   *  optional %%timeout%%.
   *
   *  This can resolve to ``null`` only if %%confirms%% is ``0``
   *  and the transaction has not been mined, otherwise this will
   *  wait until enough confirmations have completed.
   */
  async wait(_confirms, _timeout) {
    const confirms = _confirms == null ? 1 : _confirms;
    const timeout = _timeout == null ? 0 : _timeout;
    let startBlock = __privateGet(this, _startBlock);
    let nextScan = -1;
    let stopScanning = startBlock === -1 ? true : false;
    const checkReplacement = async () => {
      if (stopScanning) {
        return null;
      }
      const { blockNumber, nonce } = await resolveProperties({
        blockNumber: this.provider.getBlockNumber(),
        nonce: this.provider.getTransactionCount(this.from)
      });
      if (nonce < this.nonce) {
        startBlock = blockNumber;
        return;
      }
      if (stopScanning) {
        return null;
      }
      const mined = await this.getTransaction();
      if (mined && mined.blockNumber != null) {
        return;
      }
      if (nextScan === -1) {
        nextScan = startBlock - 3;
        if (nextScan < __privateGet(this, _startBlock)) {
          nextScan = __privateGet(this, _startBlock);
        }
      }
      while (nextScan <= blockNumber) {
        if (stopScanning) {
          return null;
        }
        const block = await this.provider.getBlock(nextScan, true);
        if (block == null) {
          return;
        }
        for (const hash of block) {
          if (hash === this.hash) {
            return;
          }
        }
        for (let i = 0; i < block.length; i++) {
          const tx = await block.getTransaction(i);
          if (tx.from === this.from && tx.nonce === this.nonce) {
            if (stopScanning) {
              return null;
            }
            const receipt2 = await this.provider.getTransactionReceipt(tx.hash);
            if (receipt2 == null) {
              return;
            }
            if (blockNumber - receipt2.blockNumber + 1 < confirms) {
              return;
            }
            let reason = "replaced";
            if (tx.data === this.data && tx.to === this.to && tx.value === this.value) {
              reason = "repriced";
            } else if (tx.data === "0x" && tx.from === tx.to && tx.value === BN_04) {
              reason = "cancelled";
            }
            assert(false, "transaction was replaced", "TRANSACTION_REPLACED", {
              cancelled: reason === "replaced" || reason === "cancelled",
              reason,
              replacement: tx.replaceableTransaction(startBlock),
              hash: tx.hash,
              receipt: receipt2
            });
          }
        }
        nextScan++;
      }
      return;
    };
    const checkReceipt = (receipt2) => {
      if (receipt2 == null || receipt2.status !== 0) {
        return receipt2;
      }
      assert(false, "transaction execution reverted", "CALL_EXCEPTION", {
        action: "sendTransaction",
        data: null,
        reason: null,
        invocation: null,
        revert: null,
        transaction: {
          to: receipt2.to,
          from: receipt2.from,
          data: ""
          // @TODO: in v7, split out sendTransaction properties
        },
        receipt: receipt2
      });
    };
    const receipt = await this.provider.getTransactionReceipt(this.hash);
    if (confirms === 0) {
      return checkReceipt(receipt);
    }
    if (receipt) {
      if (await receipt.confirmations() >= confirms) {
        return checkReceipt(receipt);
      }
    } else {
      await checkReplacement();
      if (confirms === 0) {
        return null;
      }
    }
    const waiter = new Promise((resolve, reject) => {
      const cancellers = [];
      const cancel = () => {
        cancellers.forEach((c) => c());
      };
      cancellers.push(() => {
        stopScanning = true;
      });
      if (timeout > 0) {
        const timer = setTimeout(() => {
          cancel();
          reject(makeError("wait for transaction timeout", "TIMEOUT"));
        }, timeout);
        cancellers.push(() => {
          clearTimeout(timer);
        });
      }
      const txListener = async (receipt2) => {
        if (await receipt2.confirmations() >= confirms) {
          cancel();
          try {
            resolve(checkReceipt(receipt2));
          } catch (error) {
            reject(error);
          }
        }
      };
      cancellers.push(() => {
        this.provider.off(this.hash, txListener);
      });
      this.provider.on(this.hash, txListener);
      if (startBlock >= 0) {
        const replaceListener = async () => {
          try {
            await checkReplacement();
          } catch (error) {
            if (isError(error, "TRANSACTION_REPLACED")) {
              cancel();
              reject(error);
              return;
            }
          }
          if (!stopScanning) {
            this.provider.once("block", replaceListener);
          }
        };
        cancellers.push(() => {
          this.provider.off("block", replaceListener);
        });
        this.provider.once("block", replaceListener);
      }
    });
    return await waiter;
  }
  /**
   *  Returns ``true`` if this transaction has been included.
   *
   *  This is effective only as of the time the TransactionResponse
   *  was instantiated. To get up-to-date information, use
   *  [[getTransaction]].
   *
   *  This provides a Type Guard that this transaction will have
   *  non-null property values for properties that are null for
   *  unmined transactions.
   */
  isMined() {
    return this.blockHash != null;
  }
  /**
   *  Returns true if the transaction is a legacy (i.e. ``type == 0``)
   *  transaction.
   *
   *  This provides a Type Guard that this transaction will have
   *  the ``null``-ness for hardfork-specific properties set correctly.
   */
  isLegacy() {
    return this.type === 0;
  }
  /**
   *  Returns true if the transaction is a Berlin (i.e. ``type == 1``)
   *  transaction. See [[link-eip-2070]].
   *
   *  This provides a Type Guard that this transaction will have
   *  the ``null``-ness for hardfork-specific properties set correctly.
   */
  isBerlin() {
    return this.type === 1;
  }
  /**
   *  Returns true if the transaction is a London (i.e. ``type == 2``)
   *  transaction. See [[link-eip-1559]].
   *
   *  This provides a Type Guard that this transaction will have
   *  the ``null``-ness for hardfork-specific properties set correctly.
   */
  isLondon() {
    return this.type === 2;
  }
  /**
   *  Returns a filter which can be used to listen for orphan events
   *  that evict this transaction.
   */
  removedEvent() {
    assert(this.isMined(), "unmined transaction canot be orphaned", "UNSUPPORTED_OPERATION", { operation: "removeEvent()" });
    return createRemovedTransactionFilter(this);
  }
  /**
   *  Returns a filter which can be used to listen for orphan events
   *  that re-order this event against %%other%%.
   */
  reorderedEvent(other) {
    assert(this.isMined(), "unmined transaction canot be orphaned", "UNSUPPORTED_OPERATION", { operation: "removeEvent()" });
    assert(!other || other.isMined(), "unmined 'other' transaction canot be orphaned", "UNSUPPORTED_OPERATION", { operation: "removeEvent()" });
    return createReorderedTransactionFilter(this, other);
  }
  /**
   *  Returns a new TransactionResponse instance which has the ability to
   *  detect (and throw an error) if the transaction is replaced, which
   *  will begin scanning at %%startBlock%%.
   *
   *  This should generally not be used by developers and is intended
   *  primarily for internal use. Setting an incorrect %%startBlock%% can
   *  have devastating performance consequences if used incorrectly.
   */
  replaceableTransaction(startBlock) {
    assertArgument(Number.isInteger(startBlock) && startBlock >= 0, "invalid startBlock", "startBlock", startBlock);
    const tx = new _TransactionResponse(this, this.provider);
    __privateSet(tx, _startBlock, startBlock);
    return tx;
  }
};
var TransactionResponse = _TransactionResponse;
_startBlock = new WeakMap();
function createReorderedTransactionFilter(tx, other) {
  return { orphan: "reorder-transaction", tx, other };
}
function createRemovedTransactionFilter(tx) {
  return { orphan: "drop-transaction", tx };
}
function createRemovedLogFilter(log) {
  return { orphan: "drop-log", log: {
    transactionHash: log.transactionHash,
    blockHash: log.blockHash,
    blockNumber: log.blockNumber,
    address: log.address,
    data: log.data,
    topics: Object.freeze(log.topics.slice()),
    index: log.index
  } };
}

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/contract/wrappers.js
var EventLog = class extends Log {
  /**
   * @_ignore:
   */
  constructor(log, iface, fragment) {
    super(log, log.provider);
    /**
     *  The Contract Interface.
     */
    __publicField(this, "interface");
    /**
     *  The matching event.
     */
    __publicField(this, "fragment");
    /**
     *  The parsed arguments passed to the event by ``emit``.
     */
    __publicField(this, "args");
    const args = iface.decodeEventLog(fragment, log.data, log.topics);
    defineProperties(this, { args, fragment, interface: iface });
  }
  /**
   *  The name of the event.
   */
  get eventName() {
    return this.fragment.name;
  }
  /**
   *  The signature of the event.
   */
  get eventSignature() {
    return this.fragment.format();
  }
};
var UndecodedEventLog = class extends Log {
  /**
   * @_ignore:
   */
  constructor(log, error) {
    super(log, log.provider);
    /**
     *  The error encounted when trying to decode the log.
     */
    __publicField(this, "error");
    defineProperties(this, { error });
  }
};
var _iface;
var ContractTransactionReceipt = class extends TransactionReceipt {
  /**
   *  @_ignore:
   */
  constructor(iface, provider, tx) {
    super(tx, provider);
    __privateAdd(this, _iface, void 0);
    __privateSet(this, _iface, iface);
  }
  /**
   *  The parsed logs for any [[Log]] which has a matching event in the
   *  Contract ABI.
   */
  get logs() {
    return super.logs.map((log) => {
      const fragment = log.topics.length ? __privateGet(this, _iface).getEvent(log.topics[0]) : null;
      if (fragment) {
        try {
          return new EventLog(log, __privateGet(this, _iface), fragment);
        } catch (error) {
          return new UndecodedEventLog(log, error);
        }
      }
      return log;
    });
  }
};
_iface = new WeakMap();
var _iface2;
var ContractTransactionResponse = class extends TransactionResponse {
  /**
   *  @_ignore:
   */
  constructor(iface, provider, tx) {
    super(tx, provider);
    __privateAdd(this, _iface2, void 0);
    __privateSet(this, _iface2, iface);
  }
  /**
   *  Resolves once this transaction has been mined and has
   *  %%confirms%% blocks including it (default: ``1``) with an
   *  optional %%timeout%%.
   *
   *  This can resolve to ``null`` only if %%confirms%% is ``0``
   *  and the transaction has not been mined, otherwise this will
   *  wait until enough confirmations have completed.
   */
  async wait(confirms) {
    const receipt = await super.wait(confirms);
    if (receipt == null) {
      return null;
    }
    return new ContractTransactionReceipt(__privateGet(this, _iface2), this.provider, receipt);
  }
};
_iface2 = new WeakMap();
var ContractUnknownEventPayload = class extends EventPayload {
  /**
   *  @_event:
   */
  constructor(contract, listener, filter, log) {
    super(contract, listener, filter);
    /**
     *  The log with no matching events.
     */
    __publicField(this, "log");
    defineProperties(this, { log });
  }
  /**
   *  Resolves to the block the event occured in.
   */
  async getBlock() {
    return await this.log.getBlock();
  }
  /**
   *  Resolves to the transaction the event occured in.
   */
  async getTransaction() {
    return await this.log.getTransaction();
  }
  /**
   *  Resolves to the transaction receipt the event occured in.
   */
  async getTransactionReceipt() {
    return await this.log.getTransactionReceipt();
  }
};
var ContractEventPayload = class extends ContractUnknownEventPayload {
  /**
   *  @_ignore:
   */
  constructor(contract, listener, filter, fragment, _log) {
    super(contract, listener, filter, new EventLog(_log, contract.interface, fragment));
    const args = contract.interface.decodeEventLog(fragment, this.log.data, this.log.topics);
    defineProperties(this, { args, fragment });
  }
  /**
   *  The event name.
   */
  get eventName() {
    return this.fragment.name;
  }
  /**
   *  The event signature.
   */
  get eventSignature() {
    return this.fragment.format();
  }
};

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/contract/contract.js
var BN_05 = BigInt(0);
function canCall(value) {
  return value && typeof value.call === "function";
}
function canEstimate(value) {
  return value && typeof value.estimateGas === "function";
}
function canResolve(value) {
  return value && typeof value.resolveName === "function";
}
function canSend(value) {
  return value && typeof value.sendTransaction === "function";
}
function getResolver(value) {
  if (value != null) {
    if (canResolve(value)) {
      return value;
    }
    if (value.provider) {
      return value.provider;
    }
  }
  return void 0;
}
var _filter;
var PreparedTopicFilter = class {
  constructor(contract, fragment, args) {
    __privateAdd(this, _filter, void 0);
    __publicField(this, "fragment");
    defineProperties(this, { fragment });
    if (fragment.inputs.length < args.length) {
      throw new Error("too many arguments");
    }
    const runner = getRunner(contract.runner, "resolveName");
    const resolver = canResolve(runner) ? runner : null;
    __privateSet(this, _filter, async function() {
      const resolvedArgs = await Promise.all(fragment.inputs.map((param, index) => {
        const arg = args[index];
        if (arg == null) {
          return null;
        }
        return param.walkAsync(args[index], (type, value) => {
          if (type === "address") {
            if (Array.isArray(value)) {
              return Promise.all(value.map((v) => resolveAddress(v, resolver)));
            }
            return resolveAddress(value, resolver);
          }
          return value;
        });
      }));
      return contract.interface.encodeFilterTopics(fragment, resolvedArgs);
    }());
  }
  getTopicFilter() {
    return __privateGet(this, _filter);
  }
};
_filter = new WeakMap();
function getRunner(value, feature) {
  if (value == null) {
    return null;
  }
  if (typeof value[feature] === "function") {
    return value;
  }
  if (value.provider && typeof value.provider[feature] === "function") {
    return value.provider;
  }
  return null;
}
function getProvider(value) {
  if (value == null) {
    return null;
  }
  return value.provider || null;
}
async function copyOverrides(arg, allowed) {
  const _overrides = Typed.dereference(arg, "overrides");
  assertArgument(typeof _overrides === "object", "invalid overrides parameter", "overrides", arg);
  const overrides = copyRequest(_overrides);
  assertArgument(overrides.to == null || (allowed || []).indexOf("to") >= 0, "cannot override to", "overrides.to", overrides.to);
  assertArgument(overrides.data == null || (allowed || []).indexOf("data") >= 0, "cannot override data", "overrides.data", overrides.data);
  if (overrides.from) {
    overrides.from = overrides.from;
  }
  return overrides;
}
async function resolveArgs(_runner, inputs, args) {
  const runner = getRunner(_runner, "resolveName");
  const resolver = canResolve(runner) ? runner : null;
  return await Promise.all(inputs.map((param, index) => {
    return param.walkAsync(args[index], (type, value) => {
      value = Typed.dereference(value, type);
      if (type === "address") {
        return resolveAddress(value, resolver);
      }
      return value;
    });
  }));
}
function buildWrappedFallback(contract) {
  const populateTransaction = async function(overrides) {
    const tx = await copyOverrides(overrides, ["data"]);
    tx.to = await contract.getAddress();
    if (tx.from) {
      tx.from = await resolveAddress(tx.from, getResolver(contract.runner));
    }
    const iface = contract.interface;
    const noValue = getBigInt(tx.value || BN_05, "overrides.value") === BN_05;
    const noData = (tx.data || "0x") === "0x";
    if (iface.fallback && !iface.fallback.payable && iface.receive && !noData && !noValue) {
      assertArgument(false, "cannot send data to receive or send value to non-payable fallback", "overrides", overrides);
    }
    assertArgument(iface.fallback || noData, "cannot send data to receive-only contract", "overrides.data", tx.data);
    const payable = iface.receive || iface.fallback && iface.fallback.payable;
    assertArgument(payable || noValue, "cannot send value to non-payable fallback", "overrides.value", tx.value);
    assertArgument(iface.fallback || noData, "cannot send data to receive-only contract", "overrides.data", tx.data);
    return tx;
  };
  const staticCall = async function(overrides) {
    const runner = getRunner(contract.runner, "call");
    assert(canCall(runner), "contract runner does not support calling", "UNSUPPORTED_OPERATION", { operation: "call" });
    const tx = await populateTransaction(overrides);
    try {
      return await runner.call(tx);
    } catch (error) {
      if (isCallException(error) && error.data) {
        throw contract.interface.makeError(error.data, tx);
      }
      throw error;
    }
  };
  const send = async function(overrides) {
    const runner = contract.runner;
    assert(canSend(runner), "contract runner does not support sending transactions", "UNSUPPORTED_OPERATION", { operation: "sendTransaction" });
    const tx = await runner.sendTransaction(await populateTransaction(overrides));
    const provider = getProvider(contract.runner);
    return new ContractTransactionResponse(contract.interface, provider, tx);
  };
  const estimateGas = async function(overrides) {
    const runner = getRunner(contract.runner, "estimateGas");
    assert(canEstimate(runner), "contract runner does not support gas estimation", "UNSUPPORTED_OPERATION", { operation: "estimateGas" });
    return await runner.estimateGas(await populateTransaction(overrides));
  };
  const method = async (overrides) => {
    return await send(overrides);
  };
  defineProperties(method, {
    _contract: contract,
    estimateGas,
    populateTransaction,
    send,
    staticCall
  });
  return method;
}
function buildWrappedMethod(contract, key) {
  const getFragment = function(...args) {
    const fragment = contract.interface.getFunction(key, args);
    assert(fragment, "no matching fragment", "UNSUPPORTED_OPERATION", {
      operation: "fragment",
      info: { key, args }
    });
    return fragment;
  };
  const populateTransaction = async function(...args) {
    const fragment = getFragment(...args);
    let overrides = {};
    if (fragment.inputs.length + 1 === args.length) {
      overrides = await copyOverrides(args.pop());
      if (overrides.from) {
        overrides.from = await resolveAddress(overrides.from, getResolver(contract.runner));
      }
    }
    if (fragment.inputs.length !== args.length) {
      throw new Error("internal error: fragment inputs doesn't match arguments; should not happen");
    }
    const resolvedArgs = await resolveArgs(contract.runner, fragment.inputs, args);
    return Object.assign({}, overrides, await resolveProperties({
      to: contract.getAddress(),
      data: contract.interface.encodeFunctionData(fragment, resolvedArgs)
    }));
  };
  const staticCall = async function(...args) {
    const result = await staticCallResult(...args);
    if (result.length === 1) {
      return result[0];
    }
    return result;
  };
  const send = async function(...args) {
    const runner = contract.runner;
    assert(canSend(runner), "contract runner does not support sending transactions", "UNSUPPORTED_OPERATION", { operation: "sendTransaction" });
    const tx = await runner.sendTransaction(await populateTransaction(...args));
    const provider = getProvider(contract.runner);
    return new ContractTransactionResponse(contract.interface, provider, tx);
  };
  const estimateGas = async function(...args) {
    const runner = getRunner(contract.runner, "estimateGas");
    assert(canEstimate(runner), "contract runner does not support gas estimation", "UNSUPPORTED_OPERATION", { operation: "estimateGas" });
    return await runner.estimateGas(await populateTransaction(...args));
  };
  const staticCallResult = async function(...args) {
    const runner = getRunner(contract.runner, "call");
    assert(canCall(runner), "contract runner does not support calling", "UNSUPPORTED_OPERATION", { operation: "call" });
    const tx = await populateTransaction(...args);
    let result = "0x";
    try {
      result = await runner.call(tx);
    } catch (error) {
      if (isCallException(error) && error.data) {
        throw contract.interface.makeError(error.data, tx);
      }
      throw error;
    }
    const fragment = getFragment(...args);
    return contract.interface.decodeFunctionResult(fragment, result);
  };
  const method = async (...args) => {
    const fragment = getFragment(...args);
    if (fragment.constant) {
      return await staticCall(...args);
    }
    return await send(...args);
  };
  defineProperties(method, {
    name: contract.interface.getFunctionName(key),
    _contract: contract,
    _key: key,
    getFragment,
    estimateGas,
    populateTransaction,
    send,
    staticCall,
    staticCallResult
  });
  Object.defineProperty(method, "fragment", {
    configurable: false,
    enumerable: true,
    get: () => {
      const fragment = contract.interface.getFunction(key);
      assert(fragment, "no matching fragment", "UNSUPPORTED_OPERATION", {
        operation: "fragment",
        info: { key }
      });
      return fragment;
    }
  });
  return method;
}
function buildWrappedEvent(contract, key) {
  const getFragment = function(...args) {
    const fragment = contract.interface.getEvent(key, args);
    assert(fragment, "no matching fragment", "UNSUPPORTED_OPERATION", {
      operation: "fragment",
      info: { key, args }
    });
    return fragment;
  };
  const method = function(...args) {
    return new PreparedTopicFilter(contract, getFragment(...args), args);
  };
  defineProperties(method, {
    name: contract.interface.getEventName(key),
    _contract: contract,
    _key: key,
    getFragment
  });
  Object.defineProperty(method, "fragment", {
    configurable: false,
    enumerable: true,
    get: () => {
      const fragment = contract.interface.getEvent(key);
      assert(fragment, "no matching fragment", "UNSUPPORTED_OPERATION", {
        operation: "fragment",
        info: { key }
      });
      return fragment;
    }
  });
  return method;
}
var internal2 = Symbol.for("_ethersInternal_contract");
var internalValues = /* @__PURE__ */ new WeakMap();
function setInternal(contract, values) {
  internalValues.set(contract[internal2], values);
}
function getInternal(contract) {
  return internalValues.get(contract[internal2]);
}
function isDeferred(value) {
  return value && typeof value === "object" && "getTopicFilter" in value && typeof value.getTopicFilter === "function" && value.fragment;
}
async function getSubInfo(contract, event) {
  let topics;
  let fragment = null;
  if (Array.isArray(event)) {
    const topicHashify = function(name) {
      if (isHexString(name, 32)) {
        return name;
      }
      const fragment2 = contract.interface.getEvent(name);
      assertArgument(fragment2, "unknown fragment", "name", name);
      return fragment2.topicHash;
    };
    topics = event.map((e) => {
      if (e == null) {
        return null;
      }
      if (Array.isArray(e)) {
        return e.map(topicHashify);
      }
      return topicHashify(e);
    });
  } else if (event === "*") {
    topics = [null];
  } else if (typeof event === "string") {
    if (isHexString(event, 32)) {
      topics = [event];
    } else {
      fragment = contract.interface.getEvent(event);
      assertArgument(fragment, "unknown fragment", "event", event);
      topics = [fragment.topicHash];
    }
  } else if (isDeferred(event)) {
    topics = await event.getTopicFilter();
  } else if ("fragment" in event) {
    fragment = event.fragment;
    topics = [fragment.topicHash];
  } else {
    assertArgument(false, "unknown event name", "event", event);
  }
  topics = topics.map((t) => {
    if (t == null) {
      return null;
    }
    if (Array.isArray(t)) {
      const items = Array.from(new Set(t.map((t2) => t2.toLowerCase())).values());
      if (items.length === 1) {
        return items[0];
      }
      items.sort();
      return items;
    }
    return t.toLowerCase();
  });
  const tag = topics.map((t) => {
    if (t == null) {
      return "null";
    }
    if (Array.isArray(t)) {
      return t.join("|");
    }
    return t;
  }).join("&");
  return { fragment, tag, topics };
}
async function hasSub(contract, event) {
  const { subs } = getInternal(contract);
  return subs.get((await getSubInfo(contract, event)).tag) || null;
}
async function getSub(contract, operation, event) {
  const provider = getProvider(contract.runner);
  assert(provider, "contract runner does not support subscribing", "UNSUPPORTED_OPERATION", { operation });
  const { fragment, tag, topics } = await getSubInfo(contract, event);
  const { addr, subs } = getInternal(contract);
  let sub = subs.get(tag);
  if (!sub) {
    const address = addr ? addr : contract;
    const filter = { address, topics };
    const listener = (log) => {
      let foundFragment = fragment;
      if (foundFragment == null) {
        try {
          foundFragment = contract.interface.getEvent(log.topics[0]);
        } catch (error) {
        }
      }
      if (foundFragment) {
        const _foundFragment = foundFragment;
        const args = fragment ? contract.interface.decodeEventLog(fragment, log.data, log.topics) : [];
        emit(contract, event, args, (listener2) => {
          return new ContractEventPayload(contract, listener2, event, _foundFragment, log);
        });
      } else {
        emit(contract, event, [], (listener2) => {
          return new ContractUnknownEventPayload(contract, listener2, event, log);
        });
      }
    };
    let starting = [];
    const start = () => {
      if (starting.length) {
        return;
      }
      starting.push(provider.on(filter, listener));
    };
    const stop = async () => {
      if (starting.length == 0) {
        return;
      }
      let started = starting;
      starting = [];
      await Promise.all(started);
      provider.off(filter, listener);
    };
    sub = { tag, listeners: [], start, stop };
    subs.set(tag, sub);
  }
  return sub;
}
var lastEmit = Promise.resolve();
async function _emit(contract, event, args, payloadFunc) {
  await lastEmit;
  const sub = await hasSub(contract, event);
  if (!sub) {
    return false;
  }
  const count = sub.listeners.length;
  sub.listeners = sub.listeners.filter(({ listener, once }) => {
    const passArgs = Array.from(args);
    if (payloadFunc) {
      passArgs.push(payloadFunc(once ? null : listener));
    }
    try {
      listener.call(contract, ...passArgs);
    } catch (error) {
    }
    return !once;
  });
  if (sub.listeners.length === 0) {
    sub.stop();
    getInternal(contract).subs.delete(sub.tag);
  }
  return count > 0;
}
async function emit(contract, event, args, payloadFunc) {
  try {
    await lastEmit;
  } catch (error) {
  }
  const resultPromise = _emit(contract, event, args, payloadFunc);
  lastEmit = resultPromise;
  return await resultPromise;
}
var passProperties2 = ["then"];
var _a;
var _BaseContract = class {
  /**
   *  Creates a new contract connected to %%target%% with the %%abi%% and
   *  optionally connected to a %%runner%% to perform operations on behalf
   *  of.
   */
  constructor(target, abi, runner, _deployTx) {
    /**
     *  The target to connect to.
     *
     *  This can be an address, ENS name or any [[Addressable]], such as
     *  another contract. To get the resovled address, use the ``getAddress``
     *  method.
     */
    __publicField(this, "target");
    /**
     *  The contract Interface.
     */
    __publicField(this, "interface");
    /**
     *  The connected runner. This is generally a [[Provider]] or a
     *  [[Signer]], which dictates what operations are supported.
     *
     *  For example, a **Contract** connected to a [[Provider]] may
     *  only execute read-only operations.
     */
    __publicField(this, "runner");
    /**
     *  All the Events available on this contract.
     */
    __publicField(this, "filters");
    /**
     *  @_ignore:
     */
    __publicField(this, _a);
    /**
     *  The fallback or receive function if any.
     */
    __publicField(this, "fallback");
    assertArgument(typeof target === "string" || isAddressable(target), "invalid value for Contract target", "target", target);
    if (runner == null) {
      runner = null;
    }
    const iface = Interface.from(abi);
    defineProperties(this, { target, runner, interface: iface });
    Object.defineProperty(this, internal2, { value: {} });
    let addrPromise;
    let addr = null;
    let deployTx = null;
    if (_deployTx) {
      const provider = getProvider(runner);
      deployTx = new ContractTransactionResponse(this.interface, provider, _deployTx);
    }
    let subs = /* @__PURE__ */ new Map();
    if (typeof target === "string") {
      if (isHexString(target)) {
        addr = target;
        addrPromise = Promise.resolve(target);
      } else {
        const resolver = getRunner(runner, "resolveName");
        if (!canResolve(resolver)) {
          throw makeError("contract runner does not support name resolution", "UNSUPPORTED_OPERATION", {
            operation: "resolveName"
          });
        }
        addrPromise = resolver.resolveName(target).then((addr2) => {
          if (addr2 == null) {
            throw makeError("an ENS name used for a contract target must be correctly configured", "UNCONFIGURED_NAME", {
              value: target
            });
          }
          getInternal(this).addr = addr2;
          return addr2;
        });
      }
    } else {
      addrPromise = target.getAddress().then((addr2) => {
        if (addr2 == null) {
          throw new Error("TODO");
        }
        getInternal(this).addr = addr2;
        return addr2;
      });
    }
    setInternal(this, { addrPromise, addr, deployTx, subs });
    const filters = new Proxy({}, {
      get: (target2, prop, receiver) => {
        if (typeof prop === "symbol" || passProperties2.indexOf(prop) >= 0) {
          return Reflect.get(target2, prop, receiver);
        }
        try {
          return this.getEvent(prop);
        } catch (error) {
          if (!isError(error, "INVALID_ARGUMENT") || error.argument !== "key") {
            throw error;
          }
        }
        return void 0;
      },
      has: (target2, prop) => {
        if (passProperties2.indexOf(prop) >= 0) {
          return Reflect.has(target2, prop);
        }
        return Reflect.has(target2, prop) || this.interface.hasEvent(String(prop));
      }
    });
    defineProperties(this, { filters });
    defineProperties(this, {
      fallback: iface.receive || iface.fallback ? buildWrappedFallback(this) : null
    });
    return new Proxy(this, {
      get: (target2, prop, receiver) => {
        if (typeof prop === "symbol" || prop in target2 || passProperties2.indexOf(prop) >= 0) {
          return Reflect.get(target2, prop, receiver);
        }
        try {
          return target2.getFunction(prop);
        } catch (error) {
          if (!isError(error, "INVALID_ARGUMENT") || error.argument !== "key") {
            throw error;
          }
        }
        return void 0;
      },
      has: (target2, prop) => {
        if (typeof prop === "symbol" || prop in target2 || passProperties2.indexOf(prop) >= 0) {
          return Reflect.has(target2, prop);
        }
        return target2.interface.hasFunction(prop);
      }
    });
  }
  /**
   *  Return a new Contract instance with the same target and ABI, but
   *  a different %%runner%%.
   */
  connect(runner) {
    return new _BaseContract(this.target, this.interface, runner);
  }
  /**
   *  Return a new Contract instance with the same ABI and runner, but
   *  a different %%target%%.
   */
  attach(target) {
    return new _BaseContract(target, this.interface, this.runner);
  }
  /**
   *  Return the resolved address of this Contract.
   */
  async getAddress() {
    return await getInternal(this).addrPromise;
  }
  /**
   *  Return the deployed bytecode or null if no bytecode is found.
   */
  async getDeployedCode() {
    const provider = getProvider(this.runner);
    assert(provider, "runner does not support .provider", "UNSUPPORTED_OPERATION", { operation: "getDeployedCode" });
    const code = await provider.getCode(await this.getAddress());
    if (code === "0x") {
      return null;
    }
    return code;
  }
  /**
   *  Resolve to this Contract once the bytecode has been deployed, or
   *  resolve immediately if already deployed.
   */
  async waitForDeployment() {
    const deployTx = this.deploymentTransaction();
    if (deployTx) {
      await deployTx.wait();
      return this;
    }
    const code = await this.getDeployedCode();
    if (code != null) {
      return this;
    }
    const provider = getProvider(this.runner);
    assert(provider != null, "contract runner does not support .provider", "UNSUPPORTED_OPERATION", { operation: "waitForDeployment" });
    return new Promise((resolve, reject) => {
      const checkCode = async () => {
        try {
          const code2 = await this.getDeployedCode();
          if (code2 != null) {
            return resolve(this);
          }
          provider.once("block", checkCode);
        } catch (error) {
          reject(error);
        }
      };
      checkCode();
    });
  }
  /**
   *  Return the transaction used to deploy this contract.
   *
   *  This is only available if this instance was returned from a
   *  [[ContractFactory]].
   */
  deploymentTransaction() {
    return getInternal(this).deployTx;
  }
  /**
   *  Return the function for a given name. This is useful when a contract
   *  method name conflicts with a JavaScript name such as ``prototype`` or
   *  when using a Contract programatically.
   */
  getFunction(key) {
    if (typeof key !== "string") {
      key = key.format();
    }
    const func = buildWrappedMethod(this, key);
    return func;
  }
  /**
   *  Return the event for a given name. This is useful when a contract
   *  event name conflicts with a JavaScript name such as ``prototype`` or
   *  when using a Contract programatically.
   */
  getEvent(key) {
    if (typeof key !== "string") {
      key = key.format();
    }
    return buildWrappedEvent(this, key);
  }
  /**
   *  @_ignore:
   */
  async queryTransaction(hash) {
    throw new Error("@TODO");
  }
  /*
      // @TODO: this is a non-backwards compatible change, but will be added
      //        in v7 and in a potential SmartContract class in an upcoming
      //        v6 release
      async getTransactionReceipt(hash: string): Promise<null | ContractTransactionReceipt> {
          const provider = getProvider(this.runner);
          assert(provider, "contract runner does not have a provider",
              "UNSUPPORTED_OPERATION", { operation: "queryTransaction" });
  
          const receipt = await provider.getTransactionReceipt(hash);
          if (receipt == null) { return null; }
  
          return new ContractTransactionReceipt(this.interface, provider, receipt);
      }
      */
  /**
   *  Provide historic access to event data for %%event%% in the range
   *  %%fromBlock%% (default: ``0``) to %%toBlock%% (default: ``"latest"``)
   *  inclusive.
   */
  async queryFilter(event, fromBlock, toBlock) {
    if (fromBlock == null) {
      fromBlock = 0;
    }
    if (toBlock == null) {
      toBlock = "latest";
    }
    const { addr, addrPromise } = getInternal(this);
    const address = addr ? addr : await addrPromise;
    const { fragment, topics } = await getSubInfo(this, event);
    const filter = { address, topics, fromBlock, toBlock };
    const provider = getProvider(this.runner);
    assert(provider, "contract runner does not have a provider", "UNSUPPORTED_OPERATION", { operation: "queryFilter" });
    return (await provider.getLogs(filter)).map((log) => {
      let foundFragment = fragment;
      if (foundFragment == null) {
        try {
          foundFragment = this.interface.getEvent(log.topics[0]);
        } catch (error) {
        }
      }
      if (foundFragment) {
        try {
          return new EventLog(log, this.interface, foundFragment);
        } catch (error) {
          return new UndecodedEventLog(log, error);
        }
      }
      return new Log(log, provider);
    });
  }
  /**
   *  Add an event %%listener%% for the %%event%%.
   */
  async on(event, listener) {
    const sub = await getSub(this, "on", event);
    sub.listeners.push({ listener, once: false });
    sub.start();
    return this;
  }
  /**
   *  Add an event %%listener%% for the %%event%%, but remove the listener
   *  after it is fired once.
   */
  async once(event, listener) {
    const sub = await getSub(this, "once", event);
    sub.listeners.push({ listener, once: true });
    sub.start();
    return this;
  }
  /**
   *  Emit an %%event%% calling all listeners with %%args%%.
   *
   *  Resolves to ``true`` if any listeners were called.
   */
  async emit(event, ...args) {
    return await emit(this, event, args, null);
  }
  /**
   *  Resolves to the number of listeners of %%event%% or the total number
   *  of listeners if unspecified.
   */
  async listenerCount(event) {
    if (event) {
      const sub = await hasSub(this, event);
      if (!sub) {
        return 0;
      }
      return sub.listeners.length;
    }
    const { subs } = getInternal(this);
    let total = 0;
    for (const { listeners } of subs.values()) {
      total += listeners.length;
    }
    return total;
  }
  /**
   *  Resolves to the listeners subscribed to %%event%% or all listeners
   *  if unspecified.
   */
  async listeners(event) {
    if (event) {
      const sub = await hasSub(this, event);
      if (!sub) {
        return [];
      }
      return sub.listeners.map(({ listener }) => listener);
    }
    const { subs } = getInternal(this);
    let result = [];
    for (const { listeners } of subs.values()) {
      result = result.concat(listeners.map(({ listener }) => listener));
    }
    return result;
  }
  /**
   *  Remove the %%listener%% from the listeners for %%event%% or remove
   *  all listeners if unspecified.
   */
  async off(event, listener) {
    const sub = await hasSub(this, event);
    if (!sub) {
      return this;
    }
    if (listener) {
      const index = sub.listeners.map(({ listener: listener2 }) => listener2).indexOf(listener);
      if (index >= 0) {
        sub.listeners.splice(index, 1);
      }
    }
    if (listener == null || sub.listeners.length === 0) {
      sub.stop();
      getInternal(this).subs.delete(sub.tag);
    }
    return this;
  }
  /**
   *  Remove all the listeners for %%event%% or remove all listeners if
   *  unspecified.
   */
  async removeAllListeners(event) {
    if (event) {
      const sub = await hasSub(this, event);
      if (!sub) {
        return this;
      }
      sub.stop();
      getInternal(this).subs.delete(sub.tag);
    } else {
      const { subs } = getInternal(this);
      for (const { tag, stop } of subs.values()) {
        stop();
        subs.delete(tag);
      }
    }
    return this;
  }
  /**
   *  Alias for [on].
   */
  async addListener(event, listener) {
    return await this.on(event, listener);
  }
  /**
   *  Alias for [off].
   */
  async removeListener(event, listener) {
    return await this.off(event, listener);
  }
  /**
   *  Create a new Class for the %%abi%%.
   */
  static buildClass(abi) {
    class CustomContract extends _BaseContract {
      constructor(address, runner = null) {
        super(address, abi, runner);
      }
    }
    return CustomContract;
  }
  /**
   *  Create a new BaseContract with a specified Interface.
   */
  static from(target, abi, runner) {
    if (runner == null) {
      runner = null;
    }
    const contract = new this(target, abi, runner);
    return contract;
  }
};
var BaseContract = _BaseContract;
_a = internal2;
function _ContractBase() {
  return BaseContract;
}
var Contract = class extends _ContractBase() {
};

// ../../node_modules/.pnpm/ethers@6.9.0/node_modules/ethers/lib.esm/contract/factory.js
var ContractFactory = class {
  /**
   *  Create a new **ContractFactory** with %%abi%% and %%bytecode%%,
   *  optionally connected to %%runner%%.
   *
   *  The %%bytecode%% may be the ``bytecode`` property within the
   *  standard Solidity JSON output.
   */
  constructor(abi, bytecode, runner) {
    /**
     *  The Contract Interface.
     */
    __publicField(this, "interface");
    /**
     *  The Contract deployment bytecode. Often called the initcode.
     */
    __publicField(this, "bytecode");
    /**
     *  The ContractRunner to deploy the Contract as.
     */
    __publicField(this, "runner");
    const iface = Interface.from(abi);
    if (bytecode instanceof Uint8Array) {
      bytecode = hexlify(getBytes(bytecode));
    } else {
      if (typeof bytecode === "object") {
        bytecode = bytecode.object;
      }
      if (!bytecode.startsWith("0x")) {
        bytecode = "0x" + bytecode;
      }
      bytecode = hexlify(getBytes(bytecode));
    }
    defineProperties(this, {
      bytecode,
      interface: iface,
      runner: runner || null
    });
  }
  attach(target) {
    return new BaseContract(target, this.interface, this.runner);
  }
  /**
   *  Resolves to the transaction to deploy the contract, passing %%args%%
   *  into the constructor.
   */
  async getDeployTransaction(...args) {
    let overrides = {};
    const fragment = this.interface.deploy;
    if (fragment.inputs.length + 1 === args.length) {
      overrides = await copyOverrides(args.pop());
    }
    if (fragment.inputs.length !== args.length) {
      throw new Error("incorrect number of arguments to constructor");
    }
    const resolvedArgs = await resolveArgs(this.runner, fragment.inputs, args);
    const data = concat([this.bytecode, this.interface.encodeDeploy(resolvedArgs)]);
    return Object.assign({}, overrides, { data });
  }
  /**
   *  Resolves to the Contract deployed by passing %%args%% into the
   *  constructor.
   *
   *  This will resovle to the Contract before it has been deployed to the
   *  network, so the [[BaseContract-waitForDeployment]] should be used before
   *  sending any transactions to it.
   */
  async deploy(...args) {
    const tx = await this.getDeployTransaction(...args);
    assert(this.runner && typeof this.runner.sendTransaction === "function", "factory runner does not support sending transactions", "UNSUPPORTED_OPERATION", {
      operation: "sendTransaction"
    });
    const sentTx = await this.runner.sendTransaction(tx);
    const address = getCreateAddress(sentTx);
    return new BaseContract(address, this.interface, this.runner, sentTx);
  }
  /**
   *  Return a new **ContractFactory** with the same ABI and bytecode,
   *  but connected to %%runner%%.
   */
  connect(runner) {
    return new ContractFactory(this.interface, this.bytecode, runner);
  }
  /**
   *  Create a new **ContractFactory** from the standard Solidity JSON output.
   */
  static fromSolidity(output2, runner) {
    assertArgument(output2 != null, "bad compiler output", "output", output2);
    if (typeof output2 === "string") {
      output2 = JSON.parse(output2);
    }
    const abi = output2.abi;
    let bytecode = "";
    if (output2.bytecode) {
      bytecode = output2.bytecode;
    } else if (output2.evm && output2.evm.bytecode) {
      bytecode = output2.evm.bytecode;
    }
    return new this(abi, bytecode, runner);
  }
};

// src/typechain/factories/artifacts/@openzeppelin/contracts/access/AccessControl__factory.ts
var _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32"
      }
    ],
    name: "RoleAdminChanged",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address"
      }
    ],
    name: "RoleGranted",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address"
      }
    ],
    name: "RoleRevoked",
    type: "event"
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      }
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var AccessControl__factory = class {
  static createInterface() {
    return new Interface(_abi);
  }
  static connect(address, runner) {
    return new Contract(address, _abi, runner);
  }
};
AccessControl__factory.abi = _abi;

// src/typechain/factories/artifacts/@openzeppelin/contracts/access/IAccessControl__factory.ts
var _abi2 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32"
      }
    ],
    name: "RoleAdminChanged",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address"
      }
    ],
    name: "RoleGranted",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address"
      }
    ],
    name: "RoleRevoked",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      }
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var IAccessControl__factory = class {
  static createInterface() {
    return new Interface(_abi2);
  }
  static connect(address, runner) {
    return new Contract(address, _abi2, runner);
  }
};
IAccessControl__factory.abi = _abi2;

// src/typechain/factories/artifacts/@openzeppelin/contracts/access/Ownable__factory.ts
var _abi3 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var Ownable__factory = class {
  static createInterface() {
    return new Interface(_abi3);
  }
  static connect(address, runner) {
    return new Contract(address, _abi3, runner);
  }
};
Ownable__factory.abi = _abi3;

// src/typechain/factories/artifacts/@openzeppelin/contracts/interfaces/index.ts
var interfaces_exports = {};
__export(interfaces_exports, {
  IERC1967__factory: () => IERC1967__factory,
  draftIerc1822Sol: () => draft_IERC1822_exports
});

// src/typechain/factories/artifacts/@openzeppelin/contracts/interfaces/draft-IERC1822.sol/index.ts
var draft_IERC1822_exports = {};
__export(draft_IERC1822_exports, {
  IERC1822Proxiable__factory: () => IERC1822Proxiable__factory
});

// src/typechain/factories/artifacts/@openzeppelin/contracts/interfaces/draft-IERC1822.sol/IERC1822Proxiable__factory.ts
var _abi4 = [
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var IERC1822Proxiable__factory = class {
  static createInterface() {
    return new Interface(_abi4);
  }
  static connect(address, runner) {
    return new Contract(address, _abi4, runner);
  }
};
IERC1822Proxiable__factory.abi = _abi4;

// src/typechain/factories/artifacts/@openzeppelin/contracts/interfaces/IERC1967__factory.ts
var _abi5 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address"
      }
    ],
    name: "AdminChanged",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address"
      }
    ],
    name: "BeaconUpgraded",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address"
      }
    ],
    name: "Upgraded",
    type: "event"
  }
];
var IERC1967__factory = class {
  static createInterface() {
    return new Interface(_abi5);
  }
  static connect(address, runner) {
    return new Contract(address, _abi5, runner);
  }
};
IERC1967__factory.abi = _abi5;

// src/typechain/factories/artifacts/@openzeppelin/contracts/proxy/index.ts
var proxy_exports = {};
__export(proxy_exports, {
  Proxy__factory: () => Proxy__factory,
  beacon: () => beacon_exports,
  erc1967: () => ERC1967_exports
});

// src/typechain/factories/artifacts/@openzeppelin/contracts/proxy/ERC1967/index.ts
var ERC1967_exports = {};
__export(ERC1967_exports, {
  ERC1967Proxy__factory: () => ERC1967Proxy__factory,
  ERC1967Upgrade__factory: () => ERC1967Upgrade__factory
});

// src/typechain/factories/artifacts/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy__factory.ts
var _abi6 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes"
      }
    ],
    stateMutability: "payable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address"
      }
    ],
    name: "AdminChanged",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address"
      }
    ],
    name: "BeaconUpgraded",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address"
      }
    ],
    name: "Upgraded",
    type: "event"
  },
  {
    stateMutability: "payable",
    type: "fallback"
  },
  {
    stateMutability: "payable",
    type: "receive"
  }
];
var _bytecode = "0x60406080815261042c908138038061001681610218565b93843982019181818403126102135780516001600160a01b038116808203610213576020838101516001600160401b0394919391858211610213570186601f820112156102135780519061007161006c83610253565b610218565b918083528583019886828401011161021357888661008f930161026e565b813b156101b9577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b031916841790556000927fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8480a28051158015906101b2575b61010b575b855160e790816103458239f35b855194606086019081118682101761019e578697849283926101889952602788527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c87890152660819985a5b195960ca1b8a8901525190845af4913d15610194573d9061017a61006c83610253565b91825281943d92013e610291565b508038808080806100fe565b5060609250610291565b634e487b7160e01b84526041600452602484fd5b50826100f9565b855162461bcd60e51b815260048101859052602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b600080fd5b6040519190601f01601f191682016001600160401b0381118382101761023d57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161023d57601f01601f191660200190565b60005b8381106102815750506000910152565b8181015183820152602001610271565b919290156102f357508151156102a5575090565b3b156102ae5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156103065750805190602001fd5b6044604051809262461bcd60e51b825260206004830152610336815180928160248601526020868601910161026e565b601f01601f19168101030190fdfe60806040523615605f5773ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f3fea26469706673582212209df431885e9a90d2cd3c2ca0220883adcbccc41235b12f55b5c75f2b27396c7964736f6c63430008160033";
var isSuperArgs = (xs) => xs.length > 1;
var ERC1967Proxy__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi6, _bytecode, args[0]);
    }
  }
  getDeployTransaction(_logic, _data3, overrides) {
    return super.getDeployTransaction(_logic, _data3, overrides || {});
  }
  deploy(_logic, _data3, overrides) {
    return super.deploy(_logic, _data3, overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi6);
  }
  static connect(address, runner) {
    return new Contract(address, _abi6, runner);
  }
};
ERC1967Proxy__factory.bytecode = _bytecode;
ERC1967Proxy__factory.abi = _abi6;

// src/typechain/factories/artifacts/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade__factory.ts
var _abi7 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address"
      }
    ],
    name: "AdminChanged",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address"
      }
    ],
    name: "BeaconUpgraded",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address"
      }
    ],
    name: "Upgraded",
    type: "event"
  }
];
var ERC1967Upgrade__factory = class {
  static createInterface() {
    return new Interface(_abi7);
  }
  static connect(address, runner) {
    return new Contract(address, _abi7, runner);
  }
};
ERC1967Upgrade__factory.abi = _abi7;

// src/typechain/factories/artifacts/@openzeppelin/contracts/proxy/beacon/index.ts
var beacon_exports = {};
__export(beacon_exports, {
  IBeacon__factory: () => IBeacon__factory
});

// src/typechain/factories/artifacts/@openzeppelin/contracts/proxy/beacon/IBeacon__factory.ts
var _abi8 = [
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var IBeacon__factory = class {
  static createInterface() {
    return new Interface(_abi8);
  }
  static connect(address, runner) {
    return new Contract(address, _abi8, runner);
  }
};
IBeacon__factory.abi = _abi8;

// src/typechain/factories/artifacts/@openzeppelin/contracts/proxy/Proxy__factory.ts
var _abi9 = [
  {
    stateMutability: "payable",
    type: "fallback"
  },
  {
    stateMutability: "payable",
    type: "receive"
  }
];
var Proxy__factory = class {
  static createInterface() {
    return new Interface(_abi9);
  }
  static connect(address, runner) {
    return new Contract(address, _abi9, runner);
  }
};
Proxy__factory.abi = _abi9;

// src/typechain/factories/artifacts/@openzeppelin/contracts/security/index.ts
var security_exports = {};
__export(security_exports, {
  Pausable__factory: () => Pausable__factory
});

// src/typechain/factories/artifacts/@openzeppelin/contracts/security/Pausable__factory.ts
var _abi10 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "Paused",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "Unpaused",
    type: "event"
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var Pausable__factory = class {
  static createInterface() {
    return new Interface(_abi10);
  }
  static connect(address, runner) {
    return new Contract(address, _abi10, runner);
  }
};
Pausable__factory.abi = _abi10;

// src/typechain/factories/artifacts/@openzeppelin/contracts/token/index.ts
var token_exports = {};
__export(token_exports, {
  erc20: () => ERC20_exports
});

// src/typechain/factories/artifacts/@openzeppelin/contracts/token/ERC20/index.ts
var ERC20_exports = {};
__export(ERC20_exports, {
  ERC20__factory: () => ERC20__factory,
  IERC20__factory: () => IERC20__factory,
  extensions: () => extensions_exports
});

// src/typechain/factories/artifacts/@openzeppelin/contracts/token/ERC20/extensions/index.ts
var extensions_exports = {};
__export(extensions_exports, {
  IERC20Metadata__factory: () => IERC20Metadata__factory,
  IERC20Permit__factory: () => IERC20Permit__factory
});

// src/typechain/factories/artifacts/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata__factory.ts
var _abi11 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "Approval",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "Transfer",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        internalType: "address",
        name: "spender",
        type: "address"
      }
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var IERC20Metadata__factory = class {
  static createInterface() {
    return new Interface(_abi11);
  }
  static connect(address, runner) {
    return new Contract(address, _abi11, runner);
  }
};
IERC20Metadata__factory.abi = _abi11;

// src/typechain/factories/artifacts/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit__factory.ts
var _abi12 = [
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address"
      }
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256"
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8"
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32"
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32"
      }
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var IERC20Permit__factory = class {
  static createInterface() {
    return new Interface(_abi12);
  }
  static connect(address, runner) {
    return new Contract(address, _abi12, runner);
  }
};
IERC20Permit__factory.abi = _abi12;

// src/typechain/factories/artifacts/@openzeppelin/contracts/token/ERC20/ERC20__factory.ts
var _abi13 = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string"
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "Approval",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "Transfer",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        internalType: "address",
        name: "spender",
        type: "address"
      }
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256"
      }
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256"
      }
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var _bytecode2 = "0x6080604052346200031d5762000e0e803803806200001d8162000322565b9283398101906040818303126200031d5780516001600160401b03908181116200031d57836200004f91840162000348565b91602093848201518381116200031d576200006b920162000348565b82518281116200021d576003918254916001958684811c9416801562000312575b88851014620002fc578190601f94858111620002a6575b5088908583116001146200023f5760009262000233575b505060001982861b1c191690861b1783555b80519384116200021d5760049586548681811c9116801562000212575b82821014620001fd57838111620001b2575b508092851160011462000144575093839491849260009562000138575b50501b92600019911b1c19161790555b604051610a539081620003bb8239f35b01519350388062000118565b92919084601f1981168860005285600020956000905b898383106200019757505050106200017c575b50505050811b01905562000128565b01519060f884600019921b161c19169055388080806200016d565b8587015189559097019694850194889350908101906200015a565b87600052816000208480880160051c820192848910620001f3575b0160051c019087905b828110620001e6575050620000fb565b60008155018790620001d6565b92508192620001cd565b602288634e487b7160e01b6000525260246000fd5b90607f1690620000e9565b634e487b7160e01b600052604160045260246000fd5b015190503880620000ba565b90889350601f19831691876000528a6000209260005b8c8282106200028f575050841162000276575b505050811b018355620000cc565b015160001983881b60f8161c1916905538808062000268565b8385015186558c9790950194938401930162000255565b90915085600052886000208580850160051c8201928b8610620002f2575b918a91869594930160051c01915b828110620002e2575050620000a3565b600081558594508a9101620002d2565b92508192620002c4565b634e487b7160e01b600052602260045260246000fd5b93607f16936200008c565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200021d57604052565b919080601f840112156200031d5782516001600160401b0381116200021d576020906200037e601f8201601f1916830162000322565b928184528282870101116200031d5760005b818110620003a657508260009394955001015290565b85810183015184820184015282016200039056fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461059e57508163095ea7b31461057457816318160ddd1461055557816323b872dd1461045f578163313ce5671461044357816339509351146103b757816370a082311461037457816395d89b41146101f4578163a457c2d71461012657508063a9059cbb146100f65763dd62ed3e1461009e57600080fd5b346100f257806003193601126100f257806020926100ba6106d0565b6100c26106f8565b73ffffffffffffffffffffffffffffffffffffffff91821683526001865283832091168252845220549051908152f35b5080fd5b50346100f257806003193601126100f25760209061011f6101156106d0565b602435903361085c565b5160018152f35b905082346101f157826003193601126101f1576101416106d0565b918360243592338152600160205281812073ffffffffffffffffffffffffffffffffffffffff861682526020522054908282106101885760208561011f858503873361071b565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b80fd5b8383346100f257816003193601126100f25780519082845460018160011c906001831692831561036a575b602093848410811461033e57838852879594939291811561030157506001146102a3575b50505003601f01601f191682019267ffffffffffffffff8411838510176102775750829182610273925282610688565b0390f35b806041867f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b8888529193925086917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106102eb5750505090601f1992601f92820101918193610243565b80548885018701528794509285019281016102ce565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016848701525050151560051b830101905081601f601f19610243565b60248960228c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b91607f169161021f565b5050346100f25760206003193601126100f2578060209273ffffffffffffffffffffffffffffffffffffffff6103a86106d0565b16815280845220549051908152f35b8284346101f157816003193601126101f1576103d16106d0565b338252600160205282822073ffffffffffffffffffffffffffffffffffffffff82168352602052828220549160243583018093116104175760208461011f85853361071b565b806011867f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b5050346100f257816003193601126100f2576020905160128152f35b839150346100f25760606003193601126100f25761047b6106d0565b6104836106f8565b91846044359473ffffffffffffffffffffffffffffffffffffffff8416815260016020528181203382526020522054907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036104e9575b60208661011f87878761085c565b84821061051257509183916105076020969561011f9503338361071b565b9193948193506104db565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346100f257816003193601126100f2576020906002549051908152f35b5050346100f257806003193601126100f25760209061011f6105946106d0565b602435903361071b565b849084346106845782600319360112610684578260035460018160011c906001831692831561067a575b602093848410811461033e578388528795949392918115610301575060011461061b5750505003601f01601f191682019267ffffffffffffffff8411838510176102775750829182610273925282610688565b600388529193925086917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106106645750505090601f1992601f92820101918193610243565b8054888501870152879450928501928101610647565b91607f16916105c8565b8280fd5b60208082528251818301819052939260005b8581106106bc57505050601f19601f8460006040809697860101520116010190565b81810183015184820160400152820161069a565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036106f357565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff821682036106f357565b73ffffffffffffffffffffffffffffffffffffffff8091169182156107f357169182156107895760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b608460405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff8091169182156109b35716918215610949576000828152806020526040812054918083106108df57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b608460405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fdfea264697066735822122066c063431d3325115505747766e7a598f7c4b20b0d64c700ccc494524a91b9da64736f6c63430008160033";
var isSuperArgs2 = (xs) => xs.length > 1;
var ERC20__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs2(args)) {
      super(...args);
    } else {
      super(_abi13, _bytecode2, args[0]);
    }
  }
  getDeployTransaction(name_, symbol_, overrides) {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  deploy(name_, symbol_, overrides) {
    return super.deploy(name_, symbol_, overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi13);
  }
  static connect(address, runner) {
    return new Contract(address, _abi13, runner);
  }
};
ERC20__factory.bytecode = _bytecode2;
ERC20__factory.abi = _abi13;

// src/typechain/factories/artifacts/@openzeppelin/contracts/token/ERC20/IERC20__factory.ts
var _abi14 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "Approval",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "Transfer",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        internalType: "address",
        name: "spender",
        type: "address"
      }
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var IERC20__factory = class {
  static createInterface() {
    return new Interface(_abi14);
  }
  static connect(address, runner) {
    return new Contract(address, _abi14, runner);
  }
};
IERC20__factory.abi = _abi14;

// src/typechain/factories/artifacts/@openzeppelin/contracts/utils/index.ts
var utils_exports = {};
__export(utils_exports, {
  introspection: () => introspection_exports
});

// src/typechain/factories/artifacts/@openzeppelin/contracts/utils/introspection/index.ts
var introspection_exports = {};
__export(introspection_exports, {
  ERC165__factory: () => ERC165__factory,
  IERC165__factory: () => IERC165__factory
});

// src/typechain/factories/artifacts/@openzeppelin/contracts/utils/introspection/ERC165__factory.ts
var _abi15 = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var ERC165__factory = class {
  static createInterface() {
    return new Interface(_abi15);
  }
  static connect(address, runner) {
    return new Contract(address, _abi15, runner);
  }
};
ERC165__factory.abi = _abi15;

// src/typechain/factories/artifacts/@openzeppelin/contracts/utils/introspection/IERC165__factory.ts
var _abi16 = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var IERC165__factory = class {
  static createInterface() {
    return new Interface(_abi16);
  }
  static connect(address, runner) {
    return new Contract(address, _abi16, runner);
  }
};
IERC165__factory.abi = _abi16;

// src/typechain/factories/artifacts/@openzeppelin/contracts-upgradeable/index.ts
var contracts_upgradeable_exports = {};
__export(contracts_upgradeable_exports, {
  access: () => access_exports2,
  proxy: () => proxy_exports2,
  security: () => security_exports2,
  utils: () => utils_exports3
});

// src/typechain/factories/artifacts/@openzeppelin/contracts-upgradeable/access/index.ts
var access_exports2 = {};
__export(access_exports2, {
  AccessControlUpgradeable__factory: () => AccessControlUpgradeable__factory,
  IAccessControlUpgradeable__factory: () => IAccessControlUpgradeable__factory,
  OwnableUpgradeable__factory: () => OwnableUpgradeable__factory
});

// src/typechain/factories/artifacts/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable__factory.ts
var _abi17 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8"
      }
    ],
    name: "Initialized",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32"
      }
    ],
    name: "RoleAdminChanged",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address"
      }
    ],
    name: "RoleGranted",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address"
      }
    ],
    name: "RoleRevoked",
    type: "event"
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      }
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var AccessControlUpgradeable__factory = class {
  static createInterface() {
    return new Interface(_abi17);
  }
  static connect(address, runner) {
    return new Contract(
      address,
      _abi17,
      runner
    );
  }
};
AccessControlUpgradeable__factory.abi = _abi17;

// src/typechain/factories/artifacts/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable__factory.ts
var _abi18 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32"
      }
    ],
    name: "RoleAdminChanged",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address"
      }
    ],
    name: "RoleGranted",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address"
      }
    ],
    name: "RoleRevoked",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      }
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var IAccessControlUpgradeable__factory = class {
  static createInterface() {
    return new Interface(_abi18);
  }
  static connect(address, runner) {
    return new Contract(
      address,
      _abi18,
      runner
    );
  }
};
IAccessControlUpgradeable__factory.abi = _abi18;

// src/typechain/factories/artifacts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable__factory.ts
var _abi19 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8"
      }
    ],
    name: "Initialized",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var OwnableUpgradeable__factory = class {
  static createInterface() {
    return new Interface(_abi19);
  }
  static connect(address, runner) {
    return new Contract(address, _abi19, runner);
  }
};
OwnableUpgradeable__factory.abi = _abi19;

// src/typechain/factories/artifacts/@openzeppelin/contracts-upgradeable/proxy/index.ts
var proxy_exports2 = {};
__export(proxy_exports2, {
  utils: () => utils_exports2
});

// src/typechain/factories/artifacts/@openzeppelin/contracts-upgradeable/proxy/utils/index.ts
var utils_exports2 = {};
__export(utils_exports2, {
  Initializable__factory: () => Initializable__factory
});

// src/typechain/factories/artifacts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable__factory.ts
var _abi20 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8"
      }
    ],
    name: "Initialized",
    type: "event"
  }
];
var Initializable__factory = class {
  static createInterface() {
    return new Interface(_abi20);
  }
  static connect(address, runner) {
    return new Contract(address, _abi20, runner);
  }
};
Initializable__factory.abi = _abi20;

// src/typechain/factories/artifacts/@openzeppelin/contracts-upgradeable/security/index.ts
var security_exports2 = {};
__export(security_exports2, {
  PausableUpgradeable__factory: () => PausableUpgradeable__factory,
  ReentrancyGuardUpgradeable__factory: () => ReentrancyGuardUpgradeable__factory
});

// src/typechain/factories/artifacts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable__factory.ts
var _abi21 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8"
      }
    ],
    name: "Initialized",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "Paused",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "Unpaused",
    type: "event"
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var PausableUpgradeable__factory = class {
  static createInterface() {
    return new Interface(_abi21);
  }
  static connect(address, runner) {
    return new Contract(
      address,
      _abi21,
      runner
    );
  }
};
PausableUpgradeable__factory.abi = _abi21;

// src/typechain/factories/artifacts/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable__factory.ts
var _abi22 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8"
      }
    ],
    name: "Initialized",
    type: "event"
  }
];
var ReentrancyGuardUpgradeable__factory = class {
  static createInterface() {
    return new Interface(_abi22);
  }
  static connect(address, runner) {
    return new Contract(
      address,
      _abi22,
      runner
    );
  }
};
ReentrancyGuardUpgradeable__factory.abi = _abi22;

// src/typechain/factories/artifacts/@openzeppelin/contracts-upgradeable/utils/index.ts
var utils_exports3 = {};
__export(utils_exports3, {
  ContextUpgradeable__factory: () => ContextUpgradeable__factory,
  introspection: () => introspection_exports2
});

// src/typechain/factories/artifacts/@openzeppelin/contracts-upgradeable/utils/introspection/index.ts
var introspection_exports2 = {};
__export(introspection_exports2, {
  ERC165Upgradeable__factory: () => ERC165Upgradeable__factory,
  IERC165Upgradeable__factory: () => IERC165Upgradeable__factory
});

// src/typechain/factories/artifacts/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable__factory.ts
var _abi23 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8"
      }
    ],
    name: "Initialized",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var ERC165Upgradeable__factory = class {
  static createInterface() {
    return new Interface(_abi23);
  }
  static connect(address, runner) {
    return new Contract(address, _abi23, runner);
  }
};
ERC165Upgradeable__factory.abi = _abi23;

// src/typechain/factories/artifacts/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable__factory.ts
var _abi24 = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var IERC165Upgradeable__factory = class {
  static createInterface() {
    return new Interface(_abi24);
  }
  static connect(address, runner) {
    return new Contract(address, _abi24, runner);
  }
};
IERC165Upgradeable__factory.abi = _abi24;

// src/typechain/factories/artifacts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable__factory.ts
var _abi25 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8"
      }
    ],
    name: "Initialized",
    type: "event"
  }
];
var ContextUpgradeable__factory = class {
  static createInterface() {
    return new Interface(_abi25);
  }
  static connect(address, runner) {
    return new Contract(address, _abi25, runner);
  }
};
ContextUpgradeable__factory.abi = _abi25;

// src/typechain/factories/artifacts/contracts/index.ts
var contracts_exports5 = {};
__export(contracts_exports5, {
  messagelib: () => messagelib_exports,
  oapp: () => oapp_exports,
  protocol: () => protocol_exports
});

// src/typechain/factories/artifacts/contracts/messagelib/index.ts
var messagelib_exports = {};
__export(messagelib_exports, {
  contracts: () => contracts_exports2
});

// src/typechain/factories/artifacts/contracts/messagelib/contracts/index.ts
var contracts_exports2 = {};
__export(contracts_exports2, {
  ExecutorFeeLib__factory: () => ExecutorFeeLib__factory,
  Executor__factory: () => Executor__factory,
  MessageLibBase__factory: () => MessageLibBase__factory,
  PriceFeed__factory: () => PriceFeed__factory,
  ReceiveLibBaseE2__factory: () => ReceiveLibBaseE2__factory,
  SendLibBaseE2__factory: () => SendLibBaseE2__factory,
  SendLibBase__factory: () => SendLibBase__factory,
  Treasury__factory: () => Treasury__factory,
  Worker__factory: () => Worker__factory,
  interfaces: () => interfaces_exports2,
  uln: () => uln_exports,
  upgradeable: () => upgradeable_exports
});

// src/typechain/factories/artifacts/contracts/messagelib/contracts/interfaces/index.ts
var interfaces_exports2 = {};
__export(interfaces_exports2, {
  IExecutorFeeLib__factory: () => IExecutorFeeLib__factory,
  IExecutor__factory: () => IExecutor__factory,
  ILayerZeroExecutor__factory: () => ILayerZeroExecutor__factory,
  ILayerZeroPriceFeed__factory: () => ILayerZeroPriceFeed__factory,
  ILayerZeroTreasury__factory: () => ILayerZeroTreasury__factory,
  ILayerZeroUltraLightNodeV2__factory: () => ILayerZeroUltraLightNodeV2__factory,
  IWorker__factory: () => IWorker__factory
});

// src/typechain/factories/artifacts/contracts/messagelib/contracts/interfaces/IExecutor__factory.ts
var _abi26 = [
  {
    inputs: [],
    name: "NotAllowed",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyMessageLib",
    type: "error"
  },
  {
    inputs: [],
    name: "RoleRenouncingDisabled",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "uint64",
            name: "baseGas",
            type: "uint64"
          },
          {
            internalType: "uint16",
            name: "multiplierBps",
            type: "uint16"
          },
          {
            internalType: "uint128",
            name: "floorMarginUSD",
            type: "uint128"
          },
          {
            internalType: "uint128",
            name: "nativeDropCap",
            type: "uint128"
          }
        ],
        indexed: false,
        internalType: "struct IExecutor.DstConfigParam[]",
        name: "params",
        type: "tuple[]"
      }
    ],
    name: "DstConfigSet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        indexed: false,
        internalType: "struct Origin",
        name: "origin",
        type: "tuple"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "dstEid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "oapp",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "NativeDropFailed",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        indexed: false,
        internalType: "struct Origin",
        name: "origin",
        type: "tuple"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "dstEid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "oapp",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "NativeDropSucceeded",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "multiplierBps",
        type: "uint16"
      }
    ],
    name: "SetDefaultMultiplierBps",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "priceFeed",
        type: "address"
      }
    ],
    name: "SetPriceFeed",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "dstEid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "uint8[]",
        name: "optionTypes",
        type: "uint8[]"
      }
    ],
    name: "SetSupportedOptionTypes",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "workerLib",
        type: "address"
      }
    ],
    name: "SetWorkerLib",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lib",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "Withdraw",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_calldataSize",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "assignJob",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256"
      }
    ],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [],
    name: "defaultMultiplierBps",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      }
    ],
    name: "dstConfig",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16"
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128"
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_calldataSize",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "getSupportedOptionTypes",
    outputs: [
      {
        internalType: "uint8[]",
        name: "",
        type: "uint8[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "priceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_multiplierBps",
        type: "uint16"
      }
    ],
    name: "setDefaultMultiplierBps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address"
      }
    ],
    name: "setPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "uint8[]",
        name: "_optionTypes",
        type: "uint8[]"
      }
    ],
    name: "setSupportedOptionTypes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var IExecutor__factory = class {
  static createInterface() {
    return new Interface(_abi26);
  }
  static connect(address, runner) {
    return new Contract(address, _abi26, runner);
  }
};
IExecutor__factory.abi = _abi26;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/interfaces/IExecutorFeeLib__factory.ts
var _abi27 = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cursor",
        type: "uint256"
      }
    ],
    name: "InvalidExecutorOptions",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "cap",
        type: "uint256"
      }
    ],
    name: "NativeDropAmountExceedsCap",
    type: "error"
  },
  {
    inputs: [],
    name: "NoOptions",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "optionType",
        type: "uint8"
      }
    ],
    name: "UnsupportedOptionType",
    type: "error"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "priceFeed",
            type: "address"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "calldataSize",
            type: "uint256"
          },
          {
            internalType: "uint16",
            name: "defaultMultiplierBps",
            type: "uint16"
          }
        ],
        internalType: "struct IExecutorFeeLib.FeeParams",
        name: "_params",
        type: "tuple"
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "baseGas",
            type: "uint64"
          },
          {
            internalType: "uint16",
            name: "multiplierBps",
            type: "uint16"
          },
          {
            internalType: "uint128",
            name: "floorMarginUSD",
            type: "uint128"
          },
          {
            internalType: "uint128",
            name: "nativeDropCap",
            type: "uint128"
          }
        ],
        internalType: "struct IExecutor.DstConfig",
        name: "_dstConfig",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "priceFeed",
            type: "address"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "calldataSize",
            type: "uint256"
          },
          {
            internalType: "uint16",
            name: "defaultMultiplierBps",
            type: "uint16"
          }
        ],
        internalType: "struct IExecutorFeeLib.FeeParams",
        name: "_params",
        type: "tuple"
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "baseGas",
            type: "uint64"
          },
          {
            internalType: "uint16",
            name: "multiplierBps",
            type: "uint16"
          },
          {
            internalType: "uint128",
            name: "floorMarginUSD",
            type: "uint128"
          },
          {
            internalType: "uint128",
            name: "nativeDropCap",
            type: "uint128"
          }
        ],
        internalType: "struct IExecutor.DstConfig",
        name: "_dstConfig",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "getFeeOnSend",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      }
    ],
    stateMutability: "payable",
    type: "function"
  }
];
var IExecutorFeeLib__factory = class {
  static createInterface() {
    return new Interface(_abi27);
  }
  static connect(address, runner) {
    return new Contract(address, _abi27, runner);
  }
};
IExecutorFeeLib__factory.abi = _abi27;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/interfaces/ILayerZeroExecutor__factory.ts
var _abi28 = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_calldataSize",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "assignJob",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256"
      }
    ],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_calldataSize",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var ILayerZeroExecutor__factory = class {
  static createInterface() {
    return new Interface(_abi28);
  }
  static connect(address, runner) {
    return new Contract(address, _abi28, runner);
  }
};
ILayerZeroExecutor__factory.abi = _abi28;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/interfaces/ILayerZeroPriceFeed__factory.ts
var _abi29 = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "provided",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "required",
        type: "uint256"
      }
    ],
    name: "InsufficientFee",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyPriceUpdater",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "l2Eid",
        type: "uint32"
      }
    ],
    name: "UnknownL2Eid",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "uint256",
        name: "_callDataSize",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_gas",
        type: "uint256"
      }
    ],
    name: "estimateFeeByEid",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      },
      {
        internalType: "uint128",
        name: "priceRatio",
        type: "uint128"
      },
      {
        internalType: "uint128",
        name: "priceRatioDenominator",
        type: "uint128"
      },
      {
        internalType: "uint128",
        name: "nativePriceUSD",
        type: "uint128"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "uint256",
        name: "_callDataSize",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_gas",
        type: "uint256"
      }
    ],
    name: "estimateFeeOnSend",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      },
      {
        internalType: "uint128",
        name: "priceRatio",
        type: "uint128"
      },
      {
        internalType: "uint128",
        name: "priceRatioDenominator",
        type: "uint128"
      },
      {
        internalType: "uint128",
        name: "nativePriceUSD",
        type: "uint128"
      }
    ],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "uint256",
        name: "_callDataSize",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_gas",
        type: "uint256"
      }
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      }
    ],
    name: "getPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "priceRatio",
            type: "uint128"
          },
          {
            internalType: "uint64",
            name: "gasPriceInUnit",
            type: "uint64"
          },
          {
            internalType: "uint32",
            name: "gasPerByte",
            type: "uint32"
          }
        ],
        internalType: "struct ILayerZeroPriceFeed.Price",
        name: "",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "getPriceRatioDenominator",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "nativeTokenPriceUSD",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var ILayerZeroPriceFeed__factory = class {
  static createInterface() {
    return new Interface(_abi29);
  }
  static connect(address, runner) {
    return new Contract(
      address,
      _abi29,
      runner
    );
  }
};
ILayerZeroPriceFeed__factory.abi = _abi29;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/interfaces/ILayerZeroTreasury__factory.ts
var _abi30 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "uint256",
        name: "_totalNativeFee",
        type: "uint256"
      },
      {
        internalType: "bool",
        name: "_payInLzToken",
        type: "bool"
      }
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "uint256",
        name: "_totalNativeFee",
        type: "uint256"
      },
      {
        internalType: "bool",
        name: "_payInLzToken",
        type: "bool"
      }
    ],
    name: "payFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      }
    ],
    stateMutability: "payable",
    type: "function"
  }
];
var ILayerZeroTreasury__factory = class {
  static createInterface() {
    return new Interface(_abi30);
  }
  static connect(address, runner) {
    return new Contract(address, _abi30, runner);
  }
};
ILayerZeroTreasury__factory.abi = _abi30;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/interfaces/ILayerZeroUltraLightNodeV2__factory.ts
var _abi31 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint16",
        name: "chainId",
        type: "uint16"
      },
      {
        indexed: false,
        internalType: "address",
        name: "lib",
        type: "address"
      }
    ],
    name: "AddInboundProofLibraryForChain",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "userApplication",
        type: "address"
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "configType",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "newConfig",
        type: "bytes"
      }
    ],
    name: "AppConfigUpdated",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint16",
        name: "chainId",
        type: "uint16"
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "proofType",
        type: "uint16"
      }
    ],
    name: "EnableSupportedOutboundProof",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint16",
        name: "srcChainId",
        type: "uint16"
      },
      {
        indexed: true,
        internalType: "address",
        name: "oracle",
        type: "address"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "lookupHash",
        type: "bytes32"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "blockData",
        type: "bytes32"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "confirmations",
        type: "uint256"
      }
    ],
    name: "HashReceived",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint16",
        name: "srcChainId",
        type: "uint16"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "srcAddress",
        type: "bytes"
      },
      {
        indexed: true,
        internalType: "address",
        name: "dstAddress",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "nonce",
        type: "uint64"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "payloadHash",
        type: "bytes32"
      }
    ],
    name: "InvalidDst",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "payload",
        type: "bytes"
      }
    ],
    name: "Packet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint16",
        name: "srcChainId",
        type: "uint16"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "srcAddress",
        type: "bytes"
      },
      {
        indexed: true,
        internalType: "address",
        name: "dstAddress",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "nonce",
        type: "uint64"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "payloadHash",
        type: "bytes32"
      }
    ],
    name: "PacketReceived",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "adapterParams",
        type: "bytes"
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "outboundProofType",
        type: "uint16"
      }
    ],
    name: "RelayerParams",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint16",
        name: "chainId",
        type: "uint16"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "size",
        type: "uint256"
      }
    ],
    name: "SetChainAddressSize",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint16",
        name: "chainId",
        type: "uint16"
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "proofType",
        type: "uint16"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "adapterParams",
        type: "bytes"
      }
    ],
    name: "SetDefaultAdapterParamsForChainId",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint16",
        name: "chainId",
        type: "uint16"
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "inboundProofLib",
        type: "uint16"
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "inboundBlockConfirm",
        type: "uint64"
      },
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "outboundProofType",
        type: "uint16"
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "outboundBlockConfirm",
        type: "uint64"
      },
      {
        indexed: false,
        internalType: "address",
        name: "oracle",
        type: "address"
      }
    ],
    name: "SetDefaultConfigForChainId",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address"
      }
    ],
    name: "SetLayerZeroToken",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint16",
        name: "chainId",
        type: "uint16"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "uln",
        type: "bytes32"
      }
    ],
    name: "SetRemoteUln",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "treasuryAddress",
        type: "address"
      }
    ],
    name: "SetTreasury",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "msgSender",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "WithdrawNative",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "msgSender",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "WithdrawZRO",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address"
      }
    ],
    name: "accruedNativeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_remoteChainId",
        type: "uint16"
      },
      {
        internalType: "address",
        name: "_userApplicationAddress",
        type: "address"
      }
    ],
    name: "getAppConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "inboundProofLibraryVersion",
            type: "uint16"
          },
          {
            internalType: "uint64",
            name: "inboundBlockConfirmations",
            type: "uint64"
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address"
          },
          {
            internalType: "uint16",
            name: "outboundProofType",
            type: "uint16"
          },
          {
            internalType: "uint64",
            name: "outboundBlockConfirmations",
            type: "uint64"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        internalType: "struct ILayerZeroUltraLightNodeV2.ApplicationConfiguration",
        name: "",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_srcChainId",
        type: "uint16"
      },
      {
        internalType: "bytes32",
        name: "_lookupHash",
        type: "bytes32"
      },
      {
        internalType: "uint256",
        name: "_confirmations",
        type: "uint256"
      },
      {
        internalType: "bytes32",
        name: "_blockData",
        type: "bytes32"
      }
    ],
    name: "updateHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_srcChainId",
        type: "uint16"
      },
      {
        internalType: "address",
        name: "_dstAddress",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_gasLimit",
        type: "uint256"
      },
      {
        internalType: "bytes32",
        name: "_lookupHash",
        type: "bytes32"
      },
      {
        internalType: "bytes32",
        name: "_blockData",
        type: "bytes32"
      },
      {
        internalType: "bytes",
        name: "_transactionProof",
        type: "bytes"
      }
    ],
    name: "validateTransactionProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawZRO",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var ILayerZeroUltraLightNodeV2__factory = class {
  static createInterface() {
    return new Interface(_abi31);
  }
  static connect(address, runner) {
    return new Contract(
      address,
      _abi31,
      runner
    );
  }
};
ILayerZeroUltraLightNodeV2__factory.abi = _abi31;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/interfaces/IWorker__factory.ts
var _abi32 = [
  {
    inputs: [],
    name: "NotAllowed",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyMessageLib",
    type: "error"
  },
  {
    inputs: [],
    name: "RoleRenouncingDisabled",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "multiplierBps",
        type: "uint16"
      }
    ],
    name: "SetDefaultMultiplierBps",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "priceFeed",
        type: "address"
      }
    ],
    name: "SetPriceFeed",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "dstEid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "uint8[]",
        name: "optionTypes",
        type: "uint8[]"
      }
    ],
    name: "SetSupportedOptionTypes",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "workerLib",
        type: "address"
      }
    ],
    name: "SetWorkerLib",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lib",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "Withdraw",
    type: "event"
  },
  {
    inputs: [],
    name: "defaultMultiplierBps",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "getSupportedOptionTypes",
    outputs: [
      {
        internalType: "uint8[]",
        name: "",
        type: "uint8[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "priceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_multiplierBps",
        type: "uint16"
      }
    ],
    name: "setDefaultMultiplierBps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address"
      }
    ],
    name: "setPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "uint8[]",
        name: "_optionTypes",
        type: "uint8[]"
      }
    ],
    name: "setSupportedOptionTypes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var IWorker__factory = class {
  static createInterface() {
    return new Interface(_abi32);
  }
  static connect(address, runner) {
    return new Contract(address, _abi32, runner);
  }
};
IWorker__factory.abi = _abi32;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/uln/index.ts
var uln_exports = {};
__export(uln_exports, {
  ReceiveUlnBase__factory: () => ReceiveUlnBase__factory,
  SendUlnBase__factory: () => SendUlnBase__factory,
  UlnBase__factory: () => UlnBase__factory,
  dvn: () => dvn_exports,
  interfaces: () => interfaces_exports3,
  libs: () => libs_exports,
  uln302: () => uln302_exports
});

// src/typechain/factories/artifacts/contracts/messagelib/contracts/uln/dvn/index.ts
var dvn_exports = {};
__export(dvn_exports, {
  DVNFeeLib__factory: () => DVNFeeLib__factory,
  DVN__factory: () => DVN__factory,
  MultiSig__factory: () => MultiSig__factory
});

// src/typechain/factories/artifacts/contracts/messagelib/contracts/uln/dvn/DVN__factory.ts
var _abi33 = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_vid",
        type: "uint32"
      },
      {
        internalType: "address[]",
        name: "_messageLibs",
        type: "address[]"
      },
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address"
      },
      {
        internalType: "address[]",
        name: "_signers",
        type: "address[]"
      },
      {
        internalType: "uint64",
        name: "_quorum",
        type: "uint64"
      },
      {
        internalType: "address[]",
        name: "_admins",
        type: "address[]"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "executableHash",
        type: "bytes32"
      }
    ],
    name: "DuplicatedHash",
    type: "error"
  },
  {
    inputs: [],
    name: "InstructionExpired",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      }
    ],
    name: "InvalidRole",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidSignatures",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      }
    ],
    name: "InvalidTarget",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "vid",
        type: "uint32"
      }
    ],
    name: "InvalidVid",
    type: "error"
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyMessageLib",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlySelf",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlySigner",
    type: "error"
  },
  {
    inputs: [],
    name: "QuorumIsZero",
    type: "error"
  },
  {
    inputs: [],
    name: "RoleRenouncingDisabled",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "signersSize",
        type: "uint64"
      },
      {
        internalType: "uint64",
        name: "quorum",
        type: "uint64"
      }
    ],
    name: "SignersSizeIsLessThanQuorum",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address"
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool"
      }
    ],
    name: "StateAlreadySet",
    type: "error"
  },
  {
    inputs: [],
    name: "ToAddressIsZero",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256"
      }
    ],
    name: "TransferNativeFailed",
    type: "error"
  },
  {
    inputs: [],
    name: "UnorderedSigners",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_index",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes"
      }
    ],
    name: "ExecuteFailed",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "vid",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "target",
            type: "address"
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes"
          },
          {
            internalType: "uint256",
            name: "expiration",
            type: "uint256"
          },
          {
            internalType: "bytes",
            name: "signatures",
            type: "bytes"
          }
        ],
        indexed: false,
        internalType: "struct ExecuteParam",
        name: "param",
        type: "tuple"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32"
      }
    ],
    name: "HashAlreadyUsed",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "Paused",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32"
      }
    ],
    name: "RoleAdminChanged",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address"
      }
    ],
    name: "RoleGranted",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address"
      }
    ],
    name: "RoleRevoked",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "multiplierBps",
        type: "uint16"
      }
    ],
    name: "SetDefaultMultiplierBps",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "uint64",
            name: "gas",
            type: "uint64"
          },
          {
            internalType: "uint16",
            name: "multiplierBps",
            type: "uint16"
          },
          {
            internalType: "uint128",
            name: "floorMarginUSD",
            type: "uint128"
          }
        ],
        indexed: false,
        internalType: "struct IDVN.DstConfigParam[]",
        name: "params",
        type: "tuple[]"
      }
    ],
    name: "SetDstConfig",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "priceFeed",
        type: "address"
      }
    ],
    name: "SetPriceFeed",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "dstEid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "uint8[]",
        name: "optionTypes",
        type: "uint8[]"
      }
    ],
    name: "SetSupportedOptionTypes",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "workerLib",
        type: "address"
      }
    ],
    name: "SetWorkerLib",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "Unpaused",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "_quorum",
        type: "uint64"
      }
    ],
    name: "UpdateQuorum",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_signer",
        type: "address"
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_active",
        type: "bool"
      }
    ],
    name: "UpdateSigner",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      }
    ],
    name: "VerifierFeePaid",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "idx",
        type: "uint256"
      }
    ],
    name: "VerifySignaturesFailed",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lib",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "Withdraw",
    type: "event"
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "allowlistSize",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "bytes",
            name: "packetHeader",
            type: "bytes"
          },
          {
            internalType: "bytes32",
            name: "payloadHash",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "confirmations",
            type: "uint64"
          },
          {
            internalType: "address",
            name: "sender",
            type: "address"
          }
        ],
        internalType: "struct ILayerZeroDVN.AssignJobParam",
        name: "_param",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "assignJob",
    outputs: [
      {
        internalType: "uint256",
        name: "totalFee",
        type: "uint256"
      }
    ],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_dstEid",
        type: "uint16"
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16"
      },
      {
        internalType: "uint64",
        name: "_confirmations",
        type: "uint64"
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      }
    ],
    name: "assignJob",
    outputs: [
      {
        internalType: "uint256",
        name: "totalFee",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "defaultMultiplierBps",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "dstEid",
        type: "uint32"
      }
    ],
    name: "dstConfig",
    outputs: [
      {
        internalType: "uint64",
        name: "gas",
        type: "uint64"
      },
      {
        internalType: "uint16",
        name: "multiplierBps",
        type: "uint16"
      },
      {
        internalType: "uint128",
        name: "floorMarginUSD",
        type: "uint128"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "vid",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "target",
            type: "address"
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes"
          },
          {
            internalType: "uint256",
            name: "expiration",
            type: "uint256"
          },
          {
            internalType: "bytes",
            name: "signatures",
            type: "bytes"
          }
        ],
        internalType: "struct ExecuteParam[]",
        name: "_params",
        type: "tuple[]"
      }
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "uint64",
        name: "_confirmations",
        type: "uint64"
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_dstEid",
        type: "uint16"
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16"
      },
      {
        internalType: "uint64",
        name: "_confirmations",
        type: "uint64"
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      }
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      }
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "getSupportedOptionTypes",
    outputs: [
      {
        internalType: "uint8[]",
        name: "",
        type: "uint8[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "_account",
        type: "address"
      }
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      }
    ],
    name: "hasAcl",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_vid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_target",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes"
      },
      {
        internalType: "uint256",
        name: "_expiration",
        type: "uint256"
      }
    ],
    name: "hashCallData",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "priceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "quorum",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "vid",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "target",
            type: "address"
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes"
          },
          {
            internalType: "uint256",
            name: "expiration",
            type: "uint256"
          },
          {
            internalType: "bytes",
            name: "signatures",
            type: "bytes"
          }
        ],
        internalType: "struct ExecuteParam",
        name: "_param",
        type: "tuple"
      }
    ],
    name: "quorumChangeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "_account",
        type: "address"
      }
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_multiplierBps",
        type: "uint16"
      }
    ],
    name: "setDefaultMultiplierBps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "uint64",
            name: "gas",
            type: "uint64"
          },
          {
            internalType: "uint16",
            name: "multiplierBps",
            type: "uint16"
          },
          {
            internalType: "uint128",
            name: "floorMarginUSD",
            type: "uint128"
          }
        ],
        internalType: "struct IDVN.DstConfigParam[]",
        name: "_params",
        type: "tuple[]"
      }
    ],
    name: "setDstConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_paused",
        type: "bool"
      }
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address"
      }
    ],
    name: "setPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_quorum",
        type: "uint64"
      }
    ],
    name: "setQuorum",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address"
      },
      {
        internalType: "bool",
        name: "_active",
        type: "bool"
      }
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "uint8[]",
        name: "_optionTypes",
        type: "uint8[]"
      }
    ],
    name: "setSupportedOptionTypes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_workerFeeLib",
        type: "address"
      }
    ],
    name: "setWorkerFeeLib",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "signerSize",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address"
      }
    ],
    name: "signers",
    outputs: [
      {
        internalType: "bool",
        name: "active",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "executableHash",
        type: "bytes32"
      }
    ],
    name: "usedHashes",
    outputs: [
      {
        internalType: "bool",
        name: "used",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32"
      },
      {
        internalType: "bytes",
        name: "_signatures",
        type: "bytes"
      }
    ],
    name: "verifySignatures",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      },
      {
        internalType: "enum MultiSig.Errors",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "vid",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        internalType: "address payable",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawFeeFromUlnV2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "workerFeeLib",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var _bytecode3 = "0x604060a08152346200036e57620040d4803803806200001e8162000373565b92833981019060c0818303126200036e5780519163ffffffff831683036200036e576020828101516001600160401b039291908381116200036e578262000067918601620003c4565b9062000075878601620003af565b9060608601518581116200036e578462000091918801620003c4565b93608087015196868816918289036200036e5760a08201518881116200036e57620000bd9201620003c4565b6001805460ff61ffff60e81b01191661017760ed1b178155600280546001600160a01b0319166001600160a01b039687161790559485906000825b620002c0575b505090816000905b62000212575b50505080156200020157845190808210620001e25750508291600080935b62000186575b505050505051166005549168010000000000000000600160801b0390851b169160018060801b031916171760055560805251613c519081620004638239608051818181610274015281816108ef0152610e930152f35b8551841015620001dc5781806200019e868962000437565b51169116811115620001cb576000818152600484528a9020805460ff19168617905592840192846200012a565b8951630721857b60e01b8152600490fd5b62000130565b8951638626e1a960e01b81529187166004830152602482015260449150fd5b8851638923b8ef60e01b8152600490fd5b8151811015620002ba57808c876200022c86948662000437565b51167fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217759182600052600089528060002082600052895260ff816000205416156200027c575b505050018262000106565b8260005260008952806000208260005289526000208460ff198254161790553391600080516020620040b4833981519152600080a438808e62000271565b6200010c565b81518110156200036857808d88620002da86948662000437565b51167f724aface199fe5bed93ae8508474576a9adf3dc443b2c451842a2242919f19de918260005260008a5280600020826000528a5260ff816000205416156200032a575b5050500182620000f8565b8260005260008a5280600020826000528a526000208460ff198254161790553391600080516020620040b4833981519152600080a438808f6200031f565b620000fe565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200039957604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200036e57565b81601f820112156200036e578051916020916001600160401b03841162000399578360051b908380620003f981850162000373565b8097815201928201019283116200036e578301905b8282106200041d575050505090565b8380916200042b84620003af565b8152019101906200040e565b80518210156200044c5760209160051b010190565b634e487b7160e01b600052603260045260246000fdfe6080806040526004908136101561001557600080fd5b600091823560e01c918262bf2e8014612e205750816301e3366714612bbd57816301ffc9a714612b1c5781631095b6d7146129b057816316c38b3c1461267e5781631703a01814612653578163248a9ca31461262757816326e67a37146120425781632de11376146120195781632f2ff15d14611df357816330bb3aac14611cc557816331cb610514611ab757816336568abe14611a7357816352d3b871146118255781635553fb8e146117055781635c975abb146116e2578163724e78da14611660578163736c0d5b14611623578163741bef1a146115fc5781638585c945146114af57816391d148541461146457816395d376d7146112b25781639e9449651461124a578163a217fddf1461122e578163aef18bf7146111ff578163b143044b14610e0e578163c358de0a14610d67578163c416aa5114610d3d578163c5e193cd14610bb1578163c7a823e014610b45578163c7b2370b14610aa8578163cd88b90314610913578163cf34c768146108d2578163d2ae2104146108a7578163d547741f1461063a578163dafe0ccc14610529578163f010cb23146104cd578163f3b4ebd0146101fa575063fd62e750146101d057600080fd5b346101f757806003193601126101f757602067ffffffffffffffff60055416604051908152f35b80fd5b9050346104c9576020906003199082823601126104c55780359067ffffffffffffffff82116103cb5760a08282019383360301126103cb576064820135914283111561049c57602481019161024e836132b7565b936001600160a01b039485309116036104615761026a866131ca565b63ffffffff9081807f00000000000000000000000000000000000000000000000000000000000000001691160361042657506102d960846102d16102e0936102ba6102b48b6131ca565b986132b7565b60448801986102c98a8d6132cb565b929091613591565b9401876132cb565b908461339c565b50156103fe578187526007865260ff6040882054166103cf5750849161031d91875260078352604087209460ff19956001878254161790556132cb565b90809291810103126103cb5761033290612e6f565b16907fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775928360005260008152604060002083600052815260ff604060002054161561037b578480f35b83600052600081526040600020908360005252600160406000209182541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d600080a4388080808480f35b8480fd5b602491604051917f90ada7a7000000000000000000000000000000000000000000000000000000008352820152fd5b6040517f274cf401000000000000000000000000000000000000000000000000000000008152fd5b60249083610433896131ca565b6040517fa100763c000000000000000000000000000000000000000000000000000000008152921690820152fd5b6024858361046e876132b7565b6040517fd08525e9000000000000000000000000000000000000000000000000000000008152921690820152fd5b506040517f4a88c125000000000000000000000000000000000000000000000000000000008152fd5b8380fd5b5080fd5b82346101f75760806003193601126101f7576104e7612eb8565b916104f0612e59565b916044359067ffffffffffffffff82116101f7576020610521868661051736878901612edc565b9160643593613591565b604051908152f35b82346101f75760606003193601126101f757610543612e43565b9161054c612e59565b61055461361d565b7f724aface199fe5bed93ae8508474576a9adf3dc443b2c451842a2242919f19de83528260205260408320936001600160a01b03809116948560005260205260ff6040600020541615610611578484953b156103cb5784928360449260405196879586947f07b18bde0000000000000000000000000000000000000000000000000000000086521690840152833560248401525af18015610606576105f65750f35b6105ff90612f90565b6101f75780f35b6040513d84823e3d90fd5b826040517f42cbfad1000000000000000000000000000000000000000000000000000000008152fd5b9050346104c95760406003193601126104c957803590610658612e59565b907f74845de37cfabd357633214b47fa91ccd19b05b7c5a08ac22c187f811fb62bca831480801561087e575b8015610855575b156107f1573330036107c8575b8061079e575b61071d575b50818352826020526001600160a01b03604084209116908160005260205260ff604060002054166106d2578280f35b818352826020526040832081600052602052604060002060ff19815416905533917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b8480a438808280f35b6001549067ffffffffffffffff8260a81c1690811561078b57507cffffffffffffffff0000000000000000000000000000000000000000006000197fffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffff920160a81b16911617600155386106a3565b856011602492634e487b7160e01b835252fd5b5082845283602052604084206001600160a01b03831660005260205260ff6040600020541661069e565b506040517f14d4a4e8000000000000000000000000000000000000000000000000000000008152fd5b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177584036108255761082061361d565b610698565b60248285604051917f125a2bb7000000000000000000000000000000000000000000000000000000008352820152fd5b507f724aface199fe5bed93ae8508474576a9adf3dc443b2c451842a2242919f19de841461068b565b507f4270fae16c6d150d00e80b689daca99e8073b1838ff2b6063a37be9d851283e48414610684565b82346101f757806003193601126101f757602067ffffffffffffffff60015460a81c16604051908152f35b82346101f757806003193601126101f757602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b9050346104c95760406003193601126104c95761092e612eb8565b9060243567ffffffffffffffff928382116103cb5761095563ffffffff9236908501612f5f565b92909161096061361d565b1685526020926003845260408620948311610a9557680100000000000000008311610a9557508354828555808310610a40575b50928452818420908060051c92855b848110610a0d5750601f19821680830392036109bc578580f35b93908594865b8281106109d85750505050015538808080808580f35b9091929582610a02600192846109ed8b613583565b919060ff809160031b9316831b921b19161790565b9701939291016109c2565b86875b838110610a245750848201556001016109a2565b969083610a376001928a6109ed86613583565b92019701610a10565b848652838620601f80850160051c8201920160051c0190601f841680610a7b575b505b818110610a705750610993565b868155600101610a63565b6000199081830191825491880360031b1c16905538610a61565b856041602492634e487b7160e01b835252fd5b82346101f75760206003193601126101f7577f1399be28223800f8669b3ba5f8721d9fc16fc4e8d0bbf98378791c8c5a3015e06020610ae5612e43565b610aed61361d565b6001547fffffffffffffffffffffff0000000000000000000000000000000000000000ff74ffffffffffffffffffffffffffffffffffffffff008360081b169116176001556001600160a01b0360405191168152a180f35b82346101f75760406003193601126101f75760243567ffffffffffffffff81116104c957610b79610b819136908501612edc565b90843561339c565b9091604051921515835283821015610b9e57604083836020820152f35b80602185634e487b7160e01b6024945252fd5b82346101f757610bc036612f0a565b9492909150610bcd61381f565b610bd685613031565b15610d14576001600160a01b0390816002541667ffffffffffffffff968760055460401c1692600154938561ffff809360405196610c1388612fba565b8752169360209b8c99868b89015216604087015216606085015260808401528360e81c1660a083015286526006845285604081209360405196610c5588612fd6565b828852610c8f604051988997889687947fdf2b057e000000000000000000000000000000000000000000000000000000008652850161323f565b039360081c165af1918215610d085791610cd6575b507f87e46b0a6199bc734632187269a103c05714ee0adae5b28f30723955724f37ef82604051838152a1604051908152f35b90508181813d8311610d01575b610ced818361300e565b81010312610cfc575182610ca4565b600080fd5b503d610ce3565b604051903d90823e3d90fd5b826040517f3d693ada000000000000000000000000000000000000000000000000000000008152fd5b82346101f757806003193601126101f75760206001600160a01b0360015460081c16604051908152f35b9050346104c95760206003193601126104c9573561ffff811690818103610cfc577f7af0ac740036ffb1c97b03697859d729e80a44ae5030543d64971c313565ab4d91602091610db561361d565b7fff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7effff00000000000000000000000000000000000000000000000000000000006001549260e81b16911617600155604051908152a180f35b9050346104c95760206003193601126104c957803567ffffffffffffffff81116111fb57610e3f9036908301612f5f565b90610e4861361d565b835b828110610e55578480f35b8060051b820135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61833603018212156111f75760019163ffffffff7f00000000000000000000000000000000000000000000000000000000000000001663ffffffff610ec38387016131ca565b16036111f15760608185010135428111156111ea5787610f0782610ee88589016131ca565b610ef66020878b01016132b7565b906102c98a880160408101906132cb565b92610f22610f1b88830160808101906132cb565b908661339c565b50156111b75786610f3982820160408101906132cb565b7fffffffff000000000000000000000000000000000000000000000000000000009182919035828116918e8082106111a2575b505050905016937f0223536e000000000000000000000000000000000000000000000000000000008514159485611177575b508461105e575b509082610fc7610fba602084849601016132b7565b928a0160408101906132cb565b9190826040519384928337810182815203925af1610fe361336c565b9015610ff4575b5050505b01610e4a565b7fdc8cdd96296241bbefda4a8e18ad2e0985a8da6495b34d409cfc4c886ee3b0cf9261103a92611045575b5060405191829185835260406020840152604083019061321a565b0390a1388080610fea565b895260076020526040892060ff1981541690553861101f565b9092948092949552600760205260408b20948b86549660ff881660001461115d575050507f9bb9bddbdf537a2104255307230b323d7982f4512ee8e5bd15df62ddca50ab97945061110f61111f8561114f936001600160a01b036110e460206040519a8b9a60408c5263ffffffff6110d7838301612ecb565b1660408d01520101612e6f565b1660608801526110fa828d01604081019061331c565b949060a0958660808b015260e08a01916130e0565b938701528a01608081019061331c565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08684030160c08701526130e0565b9060208301520390a1610fee565b9195925093508760ff198594971617905590508638610fa5565b7f704316e5000000000000000000000000000000000000000000000000000000001415945038610f9e565b849293500360031b1b1616819038808e610f6c565b505050507fd6d90193101048cc1b6edcdc2348f5acf7a4a4a97d3e7b668b74cb7602ab3ebc6020604051838152a1610fee565b5050610fee565b50610fee565b8580fd5b8280fd5b9050346104c95760206003193601126104c957604060209260ff92358152600784522054166040519015158152f35b82346101f757806003193601126101f757602090604051908152f35b82346101f75760206003193601126101f757604060609163ffffffff61126e612eb8565b168152600660205220546fffffffffffffffffffffffffffffffff6040519167ffffffffffffffff8116835261ffff8160401c16602084015260501c166040820152f35b600319836040368301126101f75782359167ffffffffffffffff908184116111fb5760a09084360301126104c9576024358181116111fb576112f79036908601612edc565b91909361130261381f565b6084810191611318611313846132b7565b613031565b1561143b57936020948196976001600160a01b03916113a58360025416956113418185016131ca565b9285611358611352606485016131b5565b9a6132b7565b8260055460401c16926001549b6040519b6113728d612fba565b8c5263ffffffff8098168f8d01521660408b0152166060890152608088015261ffff8860e81c1660a088015283016131ca565b168352600687526113e860408420966040519a8b98899788957fdf2b057e0000000000000000000000000000000000000000000000000000000087528601613101565b039360081c165af1908115610d085790611408575b602090604051908152f35b506020813d602011611433575b816114226020938361300e565b81010312610cfc57602090516113fd565b3d9150611415565b866040517f3d693ada000000000000000000000000000000000000000000000000000000008152fd5b82346101f75760406003193601126101f75760406001600160a01b0391611489612e59565b9335815280602052209116600052602052602060ff604060002054166040519015158152f35b9050346104c95760206003193601126104c95767ffffffffffffffff813581811692838203610cfc573330036115d45783156115ac576005549283169084821061156057857fb600f3cf7f38a4b49bb0c75f722ef69f7e3e39ef3bb4aa8207fd86e724a23249602087877fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff6fffffffffffffffff00000000000000008960401b16911617600555604051908152a180f35b604080517f8626e1a900000000000000000000000000000000000000000000000000000000815267ffffffffffffffff93841692810192835292841660208301528291010390fd5b0390fd5b6040517f8923b8ef000000000000000000000000000000000000000000000000000000008152fd5b6040517f14d4a4e8000000000000000000000000000000000000000000000000000000008152fd5b82346101f757806003193601126101f75760206001600160a01b0360025416604051908152f35b9050346104c95760206003193601126104c957604060209260ff926001600160a01b0361164e612e43565b16825284522054166040519015158152f35b82346101f75760206003193601126101f7577ff724a45d041687842411f2b977ef22ab8f43c8f1104f4592b42a00f9b34a643d60206001600160a01b036116a5612e43565b6116ad61361d565b16807fffffffffffffffffffffffff00000000000000000000000000000000000000006002541617600255604051908152a180f35b82346101f757806003193601126101f757602060ff600154166040519015158152f35b82346101f75761171436612f0a565b949290915061172285613031565b15610d14576001600160a01b0390816002541667ffffffffffffffff968760055460401c1692600154938561ffff80936040519661175f88612fba565b8752169360209b8c99868b89015216604087015216606085015260808401528360e81c1660a08301528652600684526040862092604051956117a087612fd6565b8787526117da604051978896879586947f7bfa20a9000000000000000000000000000000000000000000000000000000008652850161323f565b039260081c165afa918215610d0857916117f8575b50604051908152f35b90508181813d831161181e575b61180f818361300e565b81010312610cfc5751826117ef565b503d611805565b9050346104c957602090816003193601126111fb5780359067ffffffffffffffff928383116103cb57366023840112156103cb5782820135918483116111f7576024906007903660248660071b88010111611a6f576118869694939661361d565b875b848110611958575050505060405193818186018287525260246040860194019286915b8383106118dc57877f7dd21e42791b013d1929e86f0c59085e4fca24251f0f1aa81917b3b1611766e088880389a180f35b909192939463ffffffff6118ef87612ecb565b16815281860135838116809103610cfc5782820152604086013561ffff8116809103610cfc576040820152606090818701356fffffffffffffffffffffffffffffffff81168091036119545760019282015260808091019601930191909392936118ab565b8980fd5b8083989596981b870161196d604482016131b5565b9060648101359061ffff8216809203611a6b576084810135906fffffffffffffffffffffffffffffffff8216809203611a675760405193606085018d811186821017611a53578e63ffffffff8f938c60019a999897968f876119e2946040988952168b528a01988952858a01978852016131ca565b16815260068c52209351167fffffffffffff000000000000000000000000000000000000000000000000000079ffffffffffffffffffffffffffffffff0000000000000000000069ffff00000000000000008654955160401b16935160501b16931617171790550196949396611888565b89604189634e487b7160e01b600052526000fd5b8c80fd5b8b80fd5b8780fd5b82346101f75760406003193601126101f75750611a8e612e59565b506040517fcebd140e000000000000000000000000000000000000000000000000000000008152fd5b82346101f75760406003193601126101f757611ad1612e43565b60243590811515808303610cfc57333003611c9c576001600160a01b038216808552856020528160ff604087205416151514611c5457845284602052604084209060ff60ff19835416911617905581600014611c355767ffffffffffffffff6001816005541601908111611c2257935b6005549467ffffffffffffffff91828760401c1692821692808410611bd9575050507fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000007f863d338cad74814b108a06288ad5e0e80d56495e0332238b1d2cdcfa0ca8e5ce94951617600555611bd3604051928392839092916020906001600160a01b0360408401951683521515910152565b0390a180f35b604080517f8626e1a900000000000000000000000000000000000000000000000000000000815267ffffffffffffffff9485169381019384529390911660208301528291010390fd5b602484601187634e487b7160e01b835252fd5b67ffffffffffffffff600019816005541601908111611c225793611b41565b604080517fd61afe6e0000000000000000000000000000000000000000000000000000000081526001600160a01b038516818901908152861515602082015290918291010390fd5b846040517f14d4a4e8000000000000000000000000000000000000000000000000000000008152fd5b82346101f75760806003193601126101f757611cdf612eb8565b6024359067ffffffffffffffff91828116809103610cfc57604435926001600160a01b0380851692838603610cfc57606435838111611a6f5790611d2c611d349594939236908b01612edc565b959097613031565b15611dca579763ffffffff9882600254169360055460401c166001549560405195611d5e87612fba565b865260209b8c991692838a88015260408701526060860152608085015261ffff8560e81c1660a08501528852600686526117da6040892095604051988997889687957f7bfa20a90000000000000000000000000000000000000000000000000000000087528601613101565b886040517f3d693ada000000000000000000000000000000000000000000000000000000008152fd5b9050346104c95760406003193601126104c957803590611e11612e59565b907f74845de37cfabd357633214b47fa91ccd19b05b7c5a08ac22c187f811fb62bca8314808015611ff0575b8015611fc7575b15611f93573330036107c8575b80611f65575b611ee1575b508160005260006020526001600160a01b0360406000209116908160005260205260ff6040600020541615611e8f578280f35b8160005260006020526040600020816000526020526040600020600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d600080a438808280f35b6001549067ffffffffffffffff90818360a81c16918214611f5057507cffffffffffffffff00000000000000000000000000000000000000000060017fffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffff920160a81b1691161760015538611e5c565b601190634e487b7160e01b6000525260246000fd5b5082600052600060205260406000206001600160a01b03831660005260205260ff6040600020541615611e57565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775840361082557611fc261361d565b611e51565b507f724aface199fe5bed93ae8508474576a9adf3dc443b2c451842a2242919f19de8414611e44565b507f4270fae16c6d150d00e80b689daca99e8073b1838ff2b6063a37be9d851283e48414611e3d565b82346101f75760206003193601126101f7576020612038611313612e43565b6040519015158152f35b82346101f7576020806003193601126104c95763ffffffff612062612eb8565b168252600381526040822090604051908182828086549384815201809688528188209388905b80601f83011061249c576121a795549184828210612489575b828210612473575b82821061245d575b828210612447575b828210612432575b82821061241c575b828210612406575b8282106123f0575b8282106123da575b8282106123c4575b8282106123ae575b828210612398575b828210612382575b82821061236c575b828210612356575b828210612340575b82821061232a575b828210612314575b8282106122fe575b8282106122e8575b8282106122d2575b8282106122bc575b8282106122a6575b828210612290575b82821061227a575b828210612264575b82821061224e575b828210612238575b828210612222575b82821061220c575b8282106121f6575b50106121e8575b5090509592949395038561300e565b60405193838594850191818652518092526040850193925b8281106121ce57505050500390f35b835160ff16855286955093810193928101926001016121bf565b60f81c815201839088612198565b6001919460ff8560f01c16815201930184612191565b6001919460ff8560e81c16815201930184612189565b6001919460ff8560e01c16815201930184612181565b6001919460ff8560d81c16815201930184612179565b6001919460ff8560d01c16815201930184612171565b6001919460ff8560c81c16815201930184612169565b6001919460ff8560c01c16815201930184612161565b6001919460ff8560b81c16815201930184612159565b6001919460ff8560b01c16815201930184612151565b6001919460ff8560a81c16815201930184612149565b6001919460ff8560a01c16815201930184612141565b6001919460ff8560981c16815201930184612139565b6001919460ff8560901c16815201930184612131565b6001919460ff8560881c16815201930184612129565b6001919460ff8560801c16815201930184612121565b6001919460ff8560781c16815201930184612119565b6001919460ff8560701c16815201930184612111565b6001919460ff8560681c16815201930184612109565b6001919460ff8560601c16815201930184612101565b6001919460ff8560581c168152019301846120f9565b6001919460ff8560501c168152019301846120f1565b6001919460ff8560481c168152019301846120e9565b6001919460ff8560401c168152019301846120e1565b6001919460ff8560381c168152019301846120d9565b6001919460ff8560301c168152019301846120d1565b6001919460ff8560281c168152019301846120c9565b6001919460ff85831c168152019301846120c1565b6001919460ff8560181c168152019301846120b9565b6001919460ff8560101c168152019301846120b1565b6001919460ff8560081c168152019301846120a9565b6001919460ff85168152019301846120a1565b9291600191945061040090865460ff8082168352808260081c1686840152808260101c16604084015280828482826060828260181c168185015282828d82826080921c1681880152828260a095828260281c16878b015260c099838360301c168b820152838360381c1660e0820152838360401c16610100820152838360481c16610120820152838360501c16610140820152610160848460581c169101521c166101808d0152828260681c166101a08d0152828260701c166101c08d0152828260781c166101e08d01521c166102008a0152828260881c166102208a0152828260901c166102408a0152828260981c166102608a01521c16610280870152828260a81c166102a0870152828260b01c166102c0870152828260b81c166102e08701521c16610300840152808260c81c16610320840152808260d01c16610340840152808260d81c16610360840152808260e01c16610380840152808260e81c166103a08401528160f01c166103c083015260f81c6103e08201520194019201928592938592612088565b9050346104c95760206003193601126104c9576040602092600192358152808452200154604051908152f35b82346101f757806003193601126101f757602067ffffffffffffffff60055460401c16604051908152f35b82346101f7576020806003193601126104c95782358015158103610cfc576000805260008252604060002033600052825260ff60406000205416156127cc5715612748576001549260ff84166127065750600160ff197f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25893941617600155604051338152a180f35b6064916040519162461bcd60e51b8352820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152fd5b6001549260ff84161561278a575060ff197f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa929316600155604051338152a180f35b6064916040519162461bcd60e51b8352820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152fd5b50826127d733613a66565b60006040516127e581612ff2565b6042815284810191606036843781511561299d576030835381516001906001101561298a57607860218401536041905b8082116129105750506128ce5760486115a8936128a3936128b2936040519586937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008b86015261286e815180928d6037890191016131f7565b8401917f206973206d697373696e6720726f6c65200000000000000000000000000000006037840152518093868401906131f7565b0103602881018452018261300e565b60405193849362461bcd60e51b8552840152602483019061321a565b60648486806040519262461bcd60e51b845283015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f81166010811015612975577f3031323334353637383961626364656600000000000000000000000000000000901a61294c8486613a3f565b53861c918015612960576000190190612815565b601187634e487b7160e01b6000525260246000fd5b603288634e487b7160e01b6000525260246000fd5b602482603288634e487b7160e01b835252fd5b80603286634e487b7160e01b6024945252fd5b9050346104c9576129c036612e83565b91906129ca61361d565b7f724aface199fe5bed93ae8508474576a9adf3dc443b2c451842a2242919f19de85528460205260408520936001600160a01b038093169485875260205260ff60408720541615612af45785853b156101f757604080517ffd9be5220000000000000000000000000000000000000000000000000000000081526001600160a01b03851693810193845260208401879052928391829101038183895af18015612ae957612aad575b5060408051948552911660208401528201527f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb90606090a180f35b916060939195612ade7f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9694612f90565b959193509193612a72565b6040513d88823e3d90fd5b6040517f42cbfad1000000000000000000000000000000000000000000000000000000008152fd5b9050346104c95760206003193601126104c957357fffffffff0000000000000000000000000000000000000000000000000000000081168091036104c957807f7965db0b0000000000000000000000000000000000000000000000000000000060209214908115612b93575b506040519015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501482612b88565b9050346104c957612bcd36612e83565b909291612bd861361d565b6001600160a01b0390811680612c7c5750831615612c53578380808084875af1612c0061336c565b5015612c0c5750505080f35b604080517f2c024f920000000000000000000000000000000000000000000000000000000081526001600160a01b0390941692840192835260208301919091528291010390fd5b506040517f32fa6a1d000000000000000000000000000000000000000000000000000000008152fd5b90849293941615612df7576040517fa9059cbb0000000000000000000000000000000000000000000000000000000060208083019182526001600160a01b039490941660248301526044808301959095529381529192612cdd60648461300e565b604051926040840184811067ffffffffffffffff821117612de4576040528484527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648585015251612d409392918791829182855af1612d3a61336c565b91613b83565b8051828115918215612dc4575b5050905015612d5b57505080f35b608492506040519162461bcd60e51b8352820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b83809293500103126104c55781015180151581036104c557808238612d4d565b602488604189634e487b7160e01b835252fd5b836040517f32fa6a1d000000000000000000000000000000000000000000000000000000008152fd5b8390346104c957816003193601126104c95760209061ffff60015460e81c168152f35b600435906001600160a01b0382168203610cfc57565b602435906001600160a01b0382168203610cfc57565b35906001600160a01b0382168203610cfc57565b6003196060910112610cfc576001600160a01b03906004358281168103610cfc57916024359081168103610cfc579060443590565b6004359063ffffffff82168203610cfc57565b359063ffffffff82168203610cfc57565b9181601f84011215610cfc5782359167ffffffffffffffff8311610cfc5760208381860195010111610cfc57565b6003196080910112610cfc5761ffff906004358281168103610cfc57916024359081168103610cfc579060443567ffffffffffffffff81168103610cfc57906064356001600160a01b0381168103610cfc5790565b9181601f84011215610cfc5782359167ffffffffffffffff8311610cfc576020808501948460051b010111610cfc57565b67ffffffffffffffff8111612fa457604052565b634e487b7160e01b600052604160045260246000fd5b60c0810190811067ffffffffffffffff821117612fa457604052565b6020810190811067ffffffffffffffff821117612fa457604052565b6080810190811067ffffffffffffffff821117612fa457604052565b90601f601f19910116810190811067ffffffffffffffff821117612fa457604052565b6001600160a01b031660008181527f93c430521711328044ae92d0f1f1286cf040bc4a382f1642bd89984e86630553602052604081205490919060ff1615613077575090565b67ffffffffffffffff60015460a81c161590811561309f575b501561309c5750600190565b90565b90507f74845de37cfabd357633214b47fa91ccd19b05b7c5a08ac22c187f811fb62bca8252816020526040822090825260205260ff60408220541638613090565b601f8260209493601f19938186528686013760008582860101520116010190565b6131a761309c959361316b836101409561ffff60a080926001600160a01b0380825116865263ffffffff602083015116602087015260408201519067ffffffffffffffff809216604088015260608301511660608701526080820151166080860152015116910152565b5467ffffffffffffffff811660c0840152604081901c61ffff1660e084015260501c6fffffffffffffffffffffffffffffffff16610100830152565b8161012082015201916130e0565b3567ffffffffffffffff81168103610cfc5790565b3563ffffffff81168103610cfc5790565b67ffffffffffffffff8111612fa457601f01601f191660200190565b60005b83811061320a5750506000910152565b81810151838201526020016131fa565b90601f19601f602093613238815180928187528780880191016131f7565b0116010190565b6132a961309c949361316b836101409561ffff60a080926001600160a01b0380825116865263ffffffff602083015116602087015260408201519067ffffffffffffffff809216604088015260608301511660608701526080820151166080860152015116910152565b81610120820152019061321a565b356001600160a01b0381168103610cfc5790565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610cfc570180359067ffffffffffffffff8211610cfc57602001918136038313610cfc57565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe182360301811215610cfc57016020813591019167ffffffffffffffff8211610cfc578136038313610cfc57565b3d15613397573d9061337d826131db565b9161338b604051938461300e565b82523d6000602084013e565b606090565b9167ffffffffffffffff90600592600554918360409360401c16956041908188028881048314891517156135485783036135735760405160209660208201927f19457468657265756d205369676e6564204d6573736167653a0a3332000000008452603c830152603c825260608201908282109082111761355e57604052519020600093845b89861061343b5750505050505050505050600190600090565b838602908682048514871517156135485760019182880190818911613548578682029180830488149015171561354857818111610cfc57878211610cfc578085019103613487816131db565b906134948b51928361300e565b8082523681840111610cfc578b816000926134b795838601378301015285613978565b8b8194929410156135325761351f57506001600160a01b03808316911681111561350c576000526004885260ff876000205416156134fa57600190950194613422565b50505050505050505050600090600390565b5050505050505050505050600090600290565b9b9a505050505050505050505060009190565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b83634e487b7160e01b60005260045260246000fd5b5050505050505050600090600190565b3560ff81168103610cfc5790565b9390837fffffffffffffffffffffffffffffffffffffffff00000000000000000000000094613617946058946040519788957fffffffff00000000000000000000000000000000000000000000000000000000602088019b60e01b168b5260601b166024860152603885015284840137810160008382015203603881018452018261300e565b51902090565b3360009081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602090815260408083205490927fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217759160ff16156136815750505050565b61368a33613a66565b9184519061369782612ff2565b6042825284820192606036853782511561380b57603084538251906001916001101561380b5790607860218501536041915b8183116137905750505061374e5760486115a89386936137329361372398519889937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008a86015261286e815180928c6037890191016131f7565b0103602881018752018561300e565b5192839262461bcd60e51b84526004840152602483019061321a565b60648486519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f811660108110156137f7577f3031323334353637383961626364656600000000000000000000000000000000901a6137cd8587613a3f565b5360041c9280156137e3576000190191906136c9565b602482634e487b7160e01b81526011600452fd5b602483634e487b7160e01b81526032600452fd5b80634e487b7160e01b602492526032600452fd5b3360009081527f9b50f4667d2d24216ccbf0dce3a90c0f620fa4d895e7b069d80ff6247fd25620602090815260408083205490927f724aface199fe5bed93ae8508474576a9adf3dc443b2c451842a2242919f19de9160ff16156138835750505050565b61388c33613a66565b9184519061389982612ff2565b6042825284820192606036853782511561380b57603084538251906001916001101561380b5790607860218501536041915b8183116139255750505061374e5760486115a89386936137329361372398519889937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008a86015261286e815180928c6037890191016131f7565b909192600f811660108110156137f7577f3031323334353637383961626364656600000000000000000000000000000000901a6139628587613a3f565b5360041c9280156137e3576000190191906138cb565b9060418151146000146139a6576139a2916020820151906060604084015193015160001a906139b0565b9091565b5050600090600290565b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311613a335791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa15613a265781516001600160a01b03811615613a20579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b908151811015613a50570160200190565b634e487b7160e01b600052603260045260246000fd5b604051906060820182811067ffffffffffffffff821117612fa457604052602a8252602082016040368237825115613a505760309053815160019060011015613a5057607860218401536029905b808211613b08575050613ac45790565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f81166010811015613b6e577f3031323334353637383961626364656600000000000000000000000000000000901a613b448486613a3f565b5360041c918015613b59576000190190613ab4565b60246000634e487b7160e01b81526011600452fd5b60246000634e487b7160e01b81526032600452fd5b91929015613be45750815115613b97575090565b3b15613ba05790565b606460405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b825190915015613bf75750805190602001fd5b6115a89060405191829162461bcd60e51b835260206004840152602483019061321a56fea2646970667358221220ca9eec351ceaf9fc208cf34c13c8b8cf41cda6f4e6b962972a950c8e3b89397e64736f6c634300081600332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d";
var isSuperArgs3 = (xs) => xs.length > 1;
var DVN__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs3(args)) {
      super(...args);
    } else {
      super(_abi33, _bytecode3, args[0]);
    }
  }
  getDeployTransaction(_vid, _messageLibs, _priceFeed, _signers, _quorum, _admins, overrides) {
    return super.getDeployTransaction(
      _vid,
      _messageLibs,
      _priceFeed,
      _signers,
      _quorum,
      _admins,
      overrides || {}
    );
  }
  deploy(_vid, _messageLibs, _priceFeed, _signers, _quorum, _admins, overrides) {
    return super.deploy(
      _vid,
      _messageLibs,
      _priceFeed,
      _signers,
      _quorum,
      _admins,
      overrides || {}
    );
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi33);
  }
  static connect(address, runner) {
    return new Contract(address, _abi33, runner);
  }
};
DVN__factory.bytecode = _bytecode3;
DVN__factory.abi = _abi33;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/uln/dvn/DVNFeeLib__factory.ts
var _abi34 = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nativeDecimalsRate",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cursor",
        type: "uint256"
      }
    ],
    name: "InvalidDVNOptions",
    type: "error"
  },
  {
    inputs: [],
    name: "ToAddressIsZero",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256"
      }
    ],
    name: "TransferNativeFailed",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "optionType",
        type: "uint8"
      }
    ],
    name: "UnsupportedOptionType",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "priceFeed",
            type: "address"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "uint64",
            name: "confirmations",
            type: "uint64"
          },
          {
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            internalType: "uint64",
            name: "quorum",
            type: "uint64"
          },
          {
            internalType: "uint16",
            name: "defaultMultiplierBps",
            type: "uint16"
          }
        ],
        internalType: "struct IDVNFeeLib.FeeParams",
        name: "_params",
        type: "tuple"
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "gas",
            type: "uint64"
          },
          {
            internalType: "uint16",
            name: "multiplierBps",
            type: "uint16"
          },
          {
            internalType: "uint128",
            name: "floorMarginUSD",
            type: "uint128"
          }
        ],
        internalType: "struct IDVN.DstConfig",
        name: "_dstConfig",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "priceFeed",
            type: "address"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "uint64",
            name: "confirmations",
            type: "uint64"
          },
          {
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            internalType: "uint64",
            name: "quorum",
            type: "uint64"
          },
          {
            internalType: "uint16",
            name: "defaultMultiplierBps",
            type: "uint16"
          }
        ],
        internalType: "struct IDVNFeeLib.FeeParams",
        name: "_params",
        type: "tuple"
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "gas",
            type: "uint64"
          },
          {
            internalType: "uint16",
            name: "multiplierBps",
            type: "uint16"
          },
          {
            internalType: "uint128",
            name: "floorMarginUSD",
            type: "uint128"
          }
        ],
        internalType: "struct IDVN.DstConfig",
        name: "_dstConfig",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "getFeeOnSend",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    stateMutability: "payable",
    type: "receive"
  }
];
var _bytecode4 = "0x60a0346100a057601f610e1338819003918201601f19168301916001600160401b038311848410176100a5578084926020946040528339810103126100a0575160008054336001600160a01b0319821681178355604051939290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3608052610d5790816100bc823960805181610b4e0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60406080815260049081361015610020575b5050361561001e57600080fd5b005b600091823560e01c806301e3366714610483578063715018a6146104025780637bfa20a9146103175780638da5cb5b146102e0578063df2b057e1461018a5763f2fde38b1461006f5750610011565b3461018657602060031936011261018657610088610754565b90610091610919565b73ffffffffffffffffffffffffffffffffffffffff8092169283156101035750508254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b506101a06101973661077c565b90939193610998565b5060806101c067ffffffffffffffff6101ba838501610800565b16610aab565b73ffffffffffffffffffffffffffffffffffffffff6101de84610815565b166101eb60208501610836565b886101f587610800565b9761024f8a51998a96879586947fc1723a1d000000000000000000000000000000000000000000000000000000008652850191604091949367ffffffffffffffff9163ffffffff6060860197168552602085015216910152565b03925af19283156102d6579185916102959493602097939461029c575b5061028f8661028860a06102818b87016108ed565b94016108ed565b93016108fc565b92610b03565b9051908152f35b9093506102c291925060803d6080116102cf575b6102ba8183610847565b8101906108b6565b939291505091923861026c565b503d6102b0565b84513d87823e3d90fd5b50503461031357816003193601126103135773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b5080fd5b5034610186576103296101973661077c565b50608061034367ffffffffffffffff6101ba838501610800565b73ffffffffffffffffffffffffffffffffffffffff61036184610815565b1661036e60208501610836565b61037786610800565b966103d18951988995869485947f88a4124c000000000000000000000000000000000000000000000000000000008652850191604091949367ffffffffffffffff9163ffffffff6060860197168552602085015216910152565b03915afa9283156102d6579185916102959493602097939461029c575061028f8661028860a06102818b87016108ed565b833461048057806003193601126104805761041b610919565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50346101865760606003193601126101865761049d610754565b6024359273ffffffffffffffffffffffffffffffffffffffff8085169081860361075057604435936104cd610919565b168061056e575015610546578480808085885af16104e9610bdd565b50156104f6575050505080f35b517f2c024f9200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909316918301918252602082015281906040010390fd5b9050517f32fa6a1d000000000000000000000000000000000000000000000000000000008152fd5b909491929394156107285782517fa9059cbb00000000000000000000000000000000000000000000000000000000602080830191825273ffffffffffffffffffffffffffffffffffffffff94909416602483015260448083019690965294815291936105db606484610847565b83519284840184811067ffffffffffffffff8211176106fc5785528584527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564868501525161063b9392918891829182855af1610635610bdd565b91610c1d565b80518381159182156106d8575b50509050156106575750505080f35b6084935051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b83809293500103126106f85782015180151581036106f857808338610648565b8480fd5b60248960418a7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8483517f32fa6a1d000000000000000000000000000000000000000000000000000000008152fd5b8680fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361077757565b600080fd5b90600319820161014081126107775760c0136107775760049160607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3c8201126107775760c4916101243567ffffffffffffffff9283821161077757806023830112156107775781600401359384116107775760248483010111610777576024019190565b3567ffffffffffffffff811681036107775790565b3573ffffffffffffffffffffffffffffffffffffffff811681036107775790565b3563ffffffff811681036107775790565b90601f601f19910116810190811067ffffffffffffffff82111761086a57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b51906fffffffffffffffffffffffffffffffff8216820361077757565b9190826080910312610777578151916108d160208201610899565b916108ea60606108e360408501610899565b9301610899565b90565b3561ffff811681036107775790565b356fffffffffffffffffffffffffffffffff811681036107775790565b73ffffffffffffffffffffffffffffffffffffffff60005416330361093a57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b816109d857506109a757600090565b60246040517f9af41d3300000000000000000000000000000000000000000000000000000000815260006004820152fd5b9080600311610777578060041015610a3a57600182013560f01c600301806005116107775711610777576024906004604051917f3d6c5c70000000000000000000000000000000000000000000000000000000008352013560f81c6004820152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b81810292918115918404141715610a7c57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b604181029080820460411490151715610a7c5780601f811680610ae7575b505061012490808201809211610a7c5761016401809111610a7c5790565b810391508111610a7c5760208101809111610a7c573880610ac9565b93929161271091610b229161ffff91828116610bd657505b1685610a69565b04916fffffffffffffffffffffffffffffffff80911691821591828015610bcc575b610bc357610b74917f00000000000000000000000000000000000000000000000000000000000000009116610a69565b90610b9457048201809211610a7c5780821115610b8f575090565b905090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50505050905090565b5080821615610b44565b9050610b1b565b3d15610c18573d9067ffffffffffffffff821161086a5760405191610c0c6020601f19601f8401160184610847565b82523d6000602084013e565b606090565b91929015610c985750815115610c31575090565b3b15610c3a5790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b825190915015610cab5750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b848110610d0a57505050601f19601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201610ce756fea26469706673582212209bb0ec228614c8986002ecba26bef576f239799dfda525a946d9751377bd408f64736f6c63430008160033";
var isSuperArgs4 = (xs) => xs.length > 1;
var DVNFeeLib__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs4(args)) {
      super(...args);
    } else {
      super(_abi34, _bytecode4, args[0]);
    }
  }
  getDeployTransaction(_nativeDecimalsRate, overrides) {
    return super.getDeployTransaction(_nativeDecimalsRate, overrides || {});
  }
  deploy(_nativeDecimalsRate, overrides) {
    return super.deploy(_nativeDecimalsRate, overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi34);
  }
  static connect(address, runner) {
    return new Contract(address, _abi34, runner);
  }
};
DVNFeeLib__factory.bytecode = _bytecode4;
DVNFeeLib__factory.abi = _abi34;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/uln/dvn/MultiSig__factory.ts
var _abi35 = [
  {
    inputs: [],
    name: "OnlySigner",
    type: "error"
  },
  {
    inputs: [],
    name: "QuorumIsZero",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "signersSize",
        type: "uint64"
      },
      {
        internalType: "uint64",
        name: "quorum",
        type: "uint64"
      }
    ],
    name: "SignersSizeIsLessThanQuorum",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address"
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool"
      }
    ],
    name: "StateAlreadySet",
    type: "error"
  },
  {
    inputs: [],
    name: "UnorderedSigners",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "_quorum",
        type: "uint64"
      }
    ],
    name: "UpdateQuorum",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_signer",
        type: "address"
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_active",
        type: "bool"
      }
    ],
    name: "UpdateSigner",
    type: "event"
  },
  {
    inputs: [],
    name: "quorum",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "signerSize",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address"
      }
    ],
    name: "signers",
    outputs: [
      {
        internalType: "bool",
        name: "active",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32"
      },
      {
        internalType: "bytes",
        name: "_signatures",
        type: "bytes"
      }
    ],
    name: "verifySignatures",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      },
      {
        internalType: "enum MultiSig.Errors",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var MultiSig__factory = class {
  static createInterface() {
    return new Interface(_abi35);
  }
  static connect(address, runner) {
    return new Contract(address, _abi35, runner);
  }
};
MultiSig__factory.abi = _abi35;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/uln/interfaces/index.ts
var interfaces_exports3 = {};
__export(interfaces_exports3, {
  IDVNFeeLib__factory: () => IDVNFeeLib__factory,
  IDVN__factory: () => IDVN__factory,
  ILayerZeroDVN__factory: () => ILayerZeroDVN__factory,
  IUltraLightNode__factory: () => IUltraLightNode__factory
});

// src/typechain/factories/artifacts/contracts/messagelib/contracts/uln/interfaces/IDVN__factory.ts
var _abi36 = [
  {
    inputs: [],
    name: "NotAllowed",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyMessageLib",
    type: "error"
  },
  {
    inputs: [],
    name: "RoleRenouncingDisabled",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "multiplierBps",
        type: "uint16"
      }
    ],
    name: "SetDefaultMultiplierBps",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "uint64",
            name: "gas",
            type: "uint64"
          },
          {
            internalType: "uint16",
            name: "multiplierBps",
            type: "uint16"
          },
          {
            internalType: "uint128",
            name: "floorMarginUSD",
            type: "uint128"
          }
        ],
        indexed: false,
        internalType: "struct IDVN.DstConfigParam[]",
        name: "params",
        type: "tuple[]"
      }
    ],
    name: "SetDstConfig",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "priceFeed",
        type: "address"
      }
    ],
    name: "SetPriceFeed",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "dstEid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "uint8[]",
        name: "optionTypes",
        type: "uint8[]"
      }
    ],
    name: "SetSupportedOptionTypes",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "workerLib",
        type: "address"
      }
    ],
    name: "SetWorkerLib",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lib",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "Withdraw",
    type: "event"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "bytes",
            name: "packetHeader",
            type: "bytes"
          },
          {
            internalType: "bytes32",
            name: "payloadHash",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "confirmations",
            type: "uint64"
          },
          {
            internalType: "address",
            name: "sender",
            type: "address"
          }
        ],
        internalType: "struct ILayerZeroDVN.AssignJobParam",
        name: "_param",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "assignJob",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      }
    ],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [],
    name: "defaultMultiplierBps",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      }
    ],
    name: "dstConfig",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16"
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "uint64",
        name: "_confirmations",
        type: "uint64"
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "getSupportedOptionTypes",
    outputs: [
      {
        internalType: "uint8[]",
        name: "",
        type: "uint8[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "priceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_multiplierBps",
        type: "uint16"
      }
    ],
    name: "setDefaultMultiplierBps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address"
      }
    ],
    name: "setPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "uint8[]",
        name: "_optionTypes",
        type: "uint8[]"
      }
    ],
    name: "setSupportedOptionTypes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var IDVN__factory = class {
  static createInterface() {
    return new Interface(_abi36);
  }
  static connect(address, runner) {
    return new Contract(address, _abi36, runner);
  }
};
IDVN__factory.abi = _abi36;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/uln/interfaces/IDVNFeeLib__factory.ts
var _abi37 = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "optionType",
        type: "uint8"
      }
    ],
    name: "UnsupportedOptionType",
    type: "error"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "priceFeed",
            type: "address"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "uint64",
            name: "confirmations",
            type: "uint64"
          },
          {
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            internalType: "uint64",
            name: "quorum",
            type: "uint64"
          },
          {
            internalType: "uint16",
            name: "defaultMultiplierBps",
            type: "uint16"
          }
        ],
        internalType: "struct IDVNFeeLib.FeeParams",
        name: "_params",
        type: "tuple"
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "gas",
            type: "uint64"
          },
          {
            internalType: "uint16",
            name: "multiplierBps",
            type: "uint16"
          },
          {
            internalType: "uint128",
            name: "floorMarginUSD",
            type: "uint128"
          }
        ],
        internalType: "struct IDVN.DstConfig",
        name: "_dstConfig",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "priceFeed",
            type: "address"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "uint64",
            name: "confirmations",
            type: "uint64"
          },
          {
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            internalType: "uint64",
            name: "quorum",
            type: "uint64"
          },
          {
            internalType: "uint16",
            name: "defaultMultiplierBps",
            type: "uint16"
          }
        ],
        internalType: "struct IDVNFeeLib.FeeParams",
        name: "_params",
        type: "tuple"
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "gas",
            type: "uint64"
          },
          {
            internalType: "uint16",
            name: "multiplierBps",
            type: "uint16"
          },
          {
            internalType: "uint128",
            name: "floorMarginUSD",
            type: "uint128"
          }
        ],
        internalType: "struct IDVN.DstConfig",
        name: "_dstConfig",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "getFeeOnSend",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      }
    ],
    stateMutability: "payable",
    type: "function"
  }
];
var IDVNFeeLib__factory = class {
  static createInterface() {
    return new Interface(_abi37);
  }
  static connect(address, runner) {
    return new Contract(address, _abi37, runner);
  }
};
IDVNFeeLib__factory.abi = _abi37;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/uln/interfaces/ILayerZeroDVN__factory.ts
var _abi38 = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "bytes",
            name: "packetHeader",
            type: "bytes"
          },
          {
            internalType: "bytes32",
            name: "payloadHash",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "confirmations",
            type: "uint64"
          },
          {
            internalType: "address",
            name: "sender",
            type: "address"
          }
        ],
        internalType: "struct ILayerZeroDVN.AssignJobParam",
        name: "_param",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "assignJob",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      }
    ],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "uint64",
        name: "_confirmations",
        type: "uint64"
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var ILayerZeroDVN__factory = class {
  static createInterface() {
    return new Interface(_abi38);
  }
  static connect(address, runner) {
    return new Contract(address, _abi38, runner);
  }
};
ILayerZeroDVN__factory.abi = _abi38;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/uln/interfaces/IUltraLightNode__factory.ts
var _abi39 = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_packetHeader",
        type: "bytes"
      },
      {
        internalType: "bytes32",
        name: "_payloadHash",
        type: "bytes32"
      }
    ],
    name: "commitVerification",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_packetHeader",
        type: "bytes"
      },
      {
        internalType: "bytes32",
        name: "_payloadHash",
        type: "bytes32"
      },
      {
        internalType: "uint64",
        name: "_confirmations",
        type: "uint64"
      }
    ],
    name: "verify",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var IUltraLightNode__factory = class {
  static createInterface() {
    return new Interface(_abi39);
  }
  static connect(address, runner) {
    return new Contract(address, _abi39, runner);
  }
};
IUltraLightNode__factory.abi = _abi39;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/uln/libs/index.ts
var libs_exports = {};
__export(libs_exports, {
  DVNOptions__factory: () => DVNOptions__factory,
  UlnOptions__factory: () => UlnOptions__factory
});

// src/typechain/factories/artifacts/contracts/messagelib/contracts/uln/libs/DVNOptions__factory.ts
var _abi40 = [
  {
    inputs: [],
    name: "InvalidDVNIdx",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cursor",
        type: "uint256"
      }
    ],
    name: "InvalidDVNOptions",
    type: "error"
  }
];
var _bytecode5 = "0x60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220cc61fae21c6aeb1a820ebdedb1fbc2d00586ac449cd46bfef5b64734d674628c64736f6c63430008160033";
var isSuperArgs5 = (xs) => xs.length > 1;
var DVNOptions__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs5(args)) {
      super(...args);
    } else {
      super(_abi40, _bytecode5, args[0]);
    }
  }
  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }
  deploy(overrides) {
    return super.deploy(overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi40);
  }
  static connect(address, runner) {
    return new Contract(address, _abi40, runner);
  }
};
DVNOptions__factory.bytecode = _bytecode5;
DVNOptions__factory.abi = _abi40;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/uln/libs/UlnOptions__factory.ts
var _abi41 = [
  {
    inputs: [],
    name: "InvalidLegacyType1Option",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidLegacyType2Option",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "workerId",
        type: "uint8"
      }
    ],
    name: "InvalidWorkerId",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cursor",
        type: "uint256"
      }
    ],
    name: "InvalidWorkerOptions",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "optionType",
        type: "uint16"
      }
    ],
    name: "UnsupportedOptionType",
    type: "error"
  }
];
var _bytecode6 = "0x60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122034b3b2aafc5b642206aea4140da606158b30dc5e8da84aa8f47deefc2f0bf97b64736f6c63430008160033";
var isSuperArgs6 = (xs) => xs.length > 1;
var UlnOptions__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs6(args)) {
      super(...args);
    } else {
      super(_abi41, _bytecode6, args[0]);
    }
  }
  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }
  deploy(overrides) {
    return super.deploy(overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi41);
  }
  static connect(address, runner) {
    return new Contract(address, _abi41, runner);
  }
};
UlnOptions__factory.bytecode = _bytecode6;
UlnOptions__factory.abi = _abi41;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/uln/uln302/index.ts
var uln302_exports = {};
__export(uln302_exports, {
  ReceiveUln302__factory: () => ReceiveUln302__factory,
  SendUln302__factory: () => SendUln302__factory
});

// src/typechain/factories/artifacts/contracts/messagelib/contracts/uln/uln302/ReceiveUln302__factory.ts
var _abi42 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_endpoint",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [],
    name: "AtLeastOneDVN",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "configType",
        type: "uint32"
      }
    ],
    name: "InvalidConfigType",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidConfirmations",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidEid",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidOptionalDVNCount",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidOptionalDVNThreshold",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidPacketHeader",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidPacketVersion",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidRequiredDVNCount",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyEndpoint",
    type: "error"
  },
  {
    inputs: [],
    name: "Unsorted",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      }
    ],
    name: "UnsupportedEid",
    type: "error"
  },
  {
    inputs: [],
    name: "Verifying",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "confirmations",
                type: "uint64"
              },
              {
                internalType: "uint8",
                name: "requiredDVNCount",
                type: "uint8"
              },
              {
                internalType: "uint8",
                name: "optionalDVNCount",
                type: "uint8"
              },
              {
                internalType: "uint8",
                name: "optionalDVNThreshold",
                type: "uint8"
              },
              {
                internalType: "address[]",
                name: "requiredDVNs",
                type: "address[]"
              },
              {
                internalType: "address[]",
                name: "optionalDVNs",
                type: "address[]"
              }
            ],
            internalType: "struct UlnConfig",
            name: "config",
            type: "tuple"
          }
        ],
        indexed: false,
        internalType: "struct SetDefaultUlnConfigParam[]",
        name: "params",
        type: "tuple[]"
      }
    ],
    name: "DefaultUlnConfigsSet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "dvn",
        type: "address"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "header",
        type: "bytes"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "confirmations",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "proofHash",
        type: "bytes32"
      }
    ],
    name: "PayloadVerified",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oapp",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "confirmations",
            type: "uint64"
          },
          {
            internalType: "uint8",
            name: "requiredDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNThreshold",
            type: "uint8"
          },
          {
            internalType: "address[]",
            name: "requiredDVNs",
            type: "address[]"
          },
          {
            internalType: "address[]",
            name: "optionalDVNs",
            type: "address[]"
          }
        ],
        indexed: false,
        internalType: "struct UlnConfig",
        name: "config",
        type: "tuple"
      }
    ],
    name: "UlnConfigSet",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_packetHeader",
        type: "bytes"
      },
      {
        internalType: "bytes32",
        name: "_payloadHash",
        type: "bytes32"
      }
    ],
    name: "commitVerification",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_remoteEid",
        type: "uint32"
      }
    ],
    name: "getAppUlnConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "confirmations",
            type: "uint64"
          },
          {
            internalType: "uint8",
            name: "requiredDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNThreshold",
            type: "uint8"
          },
          {
            internalType: "address[]",
            name: "requiredDVNs",
            type: "address[]"
          },
          {
            internalType: "address[]",
            name: "optionalDVNs",
            type: "address[]"
          }
        ],
        internalType: "struct UlnConfig",
        name: "",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_configType",
        type: "uint32"
      }
    ],
    name: "getConfig",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_remoteEid",
        type: "uint32"
      }
    ],
    name: "getUlnConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "confirmations",
            type: "uint64"
          },
          {
            internalType: "uint8",
            name: "requiredDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNThreshold",
            type: "uint8"
          },
          {
            internalType: "address[]",
            name: "requiredDVNs",
            type: "address[]"
          },
          {
            internalType: "address[]",
            name: "optionalDVNs",
            type: "address[]"
          }
        ],
        internalType: "struct UlnConfig",
        name: "rtnConfig",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "headerHash",
        type: "bytes32"
      },
      {
        internalType: "bytes32",
        name: "payloadHash",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "dvn",
        type: "address"
      }
    ],
    name: "hashLookup",
    outputs: [
      {
        internalType: "uint64",
        name: "confirmations",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "isSupportedEid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "messageLibType",
    outputs: [
      {
        internalType: "enum MessageLibType",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint32",
            name: "configType",
            type: "uint32"
          },
          {
            internalType: "bytes",
            name: "config",
            type: "bytes"
          }
        ],
        internalType: "struct SetConfigParam[]",
        name: "_params",
        type: "tuple[]"
      }
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "confirmations",
                type: "uint64"
              },
              {
                internalType: "uint8",
                name: "requiredDVNCount",
                type: "uint8"
              },
              {
                internalType: "uint8",
                name: "optionalDVNCount",
                type: "uint8"
              },
              {
                internalType: "uint8",
                name: "optionalDVNThreshold",
                type: "uint8"
              },
              {
                internalType: "address[]",
                name: "requiredDVNs",
                type: "address[]"
              },
              {
                internalType: "address[]",
                name: "optionalDVNs",
                type: "address[]"
              }
            ],
            internalType: "struct UlnConfig",
            name: "config",
            type: "tuple"
          }
        ],
        internalType: "struct SetDefaultUlnConfigParam[]",
        name: "_params",
        type: "tuple[]"
      }
    ],
    name: "setDefaultUlnConfigs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_packetHeader",
        type: "bytes"
      },
      {
        internalType: "bytes32",
        name: "_payloadHash",
        type: "bytes32"
      }
    ],
    name: "verifiable",
    outputs: [
      {
        internalType: "enum VerificationState",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_packetHeader",
        type: "bytes"
      },
      {
        internalType: "bytes32",
        name: "_payloadHash",
        type: "bytes32"
      },
      {
        internalType: "uint64",
        name: "_confirmations",
        type: "uint64"
      }
    ],
    name: "verify",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint64",
        name: "major",
        type: "uint64"
      },
      {
        internalType: "uint8",
        name: "minor",
        type: "uint8"
      },
      {
        internalType: "uint8",
        name: "endpointVersion",
        type: "uint8"
      }
    ],
    stateMutability: "pure",
    type: "function"
  }
];
var _bytecode7 = "0x60c080604052346200013f5760208162002380803803809162000023828562000144565b8339810103126200013f57516001600160a01b03908181168082036200013f5760206004916040519283809263416ecebf60e01b82525afa9081156200013357600091620000e6575b50906000543360018060a01b0319821617600055604051933391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360805260a05261220190816200017f82396080518181816108d201528181610bdc01526119ae015260a051818181610b3001526112060152f35b6020813d6020116200012a575b81620001026020938362000144565b810103126200012657519063ffffffff82168203620001235750386200006c565b80fd5b5080fd5b3d9150620000f3565b6040513d6000823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200016857604052565b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b60009260e0843560e01c91826301ffc9a714610dac575081630223536e14610cae578482630894edf114610b17575081631881d94d14610afa57816320efd7221461088557816327d12cd91461084157816329460b0b146104d95750806339e3f938146104175780633c782a52146103bd57806343ea4fa91461037757806354fd4d501461034e5780636750cd4c1461031f578063715018a6146102aa5780638da5cb5b146102845780639c33abf7146101e95763f2fde38b146100d857600080fd5b346101e55760206003193601126101e5576100f1610ef5565b906100fa611c8e565b6001600160a01b03809216928315610162575050600054827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b50503461028057606060031936011261028057610204610f63565b6024356001600160a01b038116810361027b576044359063ffffffff8216820361027b5761023192611594565b9181519283916020808452825192836020860152825b84811061026557505050828201840152601f01601f19168101030190f35b8181018301518882018801528795508201610247565b600080fd5b5080fd5b5050346102805781600319360112610280576001600160a01b0360209254169051908152f35b833461031c578060031936011261031c576102c3611c8e565b60006001600160a01b0381547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50503461028057602060031936011261028057602090610345610340610f63565b6120fd565b90519015158152f35b505034610280578160031936011261028057906002826060935192600384526020840152820152f35b5050346102805780600319360112610280576103b9906103a6610398610ef5565b6103a0610f50565b90611403565b9051918291602083526020830190610fb3565b0390f35b50346101e55760606003193601126101e557604435906001600160a01b03821680920361027b57602093839135815260028552818120602435825285522090600052825267ffffffffffffffff8160002054169051908152f35b5050346102805780600319360112610280576103b99163ffffffff8261043b610ef5565b926001600160a01b0361044c610f50565b94610455611373565b50168152600160205220911660005260205280600020906104c2600282519361047d8561104d565b60ff815467ffffffffffffffff811687528181871c166020880152818160481c168688015260501c1660608601526104b7600182016113a7565b6080860152016113a7565b60a083015251918291602083526020830190610fb3565b9190503461083d57602091826003193601126108395767ffffffffffffffff92823584811161083557869491610513879236908701610f1f565b91909561051e611c8e565b875b8381106106d1575050825195828288018389525283870193808460051b8901019682968a935b868510610577578b7faaf3aaa0c11056e86ac56eb653e25b005ca1a7d4dcd21ba24647f7ab63f3b5608c8c038da180f35b9091929394959697987fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0808c8303018a528a357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1843603018112156106cd57830190813563ffffffff811680910361027b57835288820135927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41833603018412156106c95787878b94936106b8936106a987966001990185888401528b61063d82610ead565b16868401526106a061068f6106538a84016110e4565b9761067e61066d60609260ff809c16848a015286016110e4565b918a608093168389015285016110e4565b9860a09916898701528301836112da565b60c08087015261010086019161132d565b958101906112da565b9390928286030191015261132d565b9b0199019796950193929190610546565b8e80fd5b8d80fd5b806005989697939495981b8601357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18736030181121561083157860184810160ff8080610728896107228688611299565b016112cc565b1614610809578061073d8c6107228587611299565b16146107e15761074d8183611299565b358981168091036107dd5789146107b557600192916107a8916107a28c8e6107866107813661077c8789611299565b611161565b611d00565b808052878b52209261077c61079a826110d3565b933692611299565b91611d51565b0196939291959496610520565b838a517f8f6ae8f8000000000000000000000000000000000000000000000000000000008152fd5b8b80fd5b838a517f05f7ab62000000000000000000000000000000000000000000000000000000008152fd5b848b517f1b668041000000000000000000000000000000000000000000000000000000008152fd5b8980fd5b8680fd5b8480fd5b8380fd5b5050913461031c575061085c61085636610ec2565b916111ff565b905190600381101561087057602092508152f35b602183634e487b7160e01b6000525260246000fd5b505090346101e557806003193601126101e5576108a0610ef5565b9160249067ffffffffffffffff8235818111610835576108c39036908401610f1f565b94906001600160a01b039033827f00000000000000000000000000000000000000000000000000000000000000001603610ad257885b878110610904578980f35b8060051b8201357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa183360301811215610ace57820190610943826110d3565b61094c816120fd565b15610a99575060209163ffffffff818401600282610969836110d3565b1603610a5f5750610979826110d3565b9187810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156106c95701918d8335938a8511610280578681019480360386136101e55781019487828703126101e55735918b831161031c578f97610a398560019a610a348f968f90610a218591887f82118522aa536ac0e96cc5c689407ae42b89d592aa133890a01f1509842f50819f9c81610a569e01920101611161565b9889928516988981526001895220611d51565b611403565b508b5195869560609387521690850152808b850152830190610fb3565b0390a1016108f9565b898b92610a6c8a936110d3565b9251927f3018cc2b0000000000000000000000000000000000000000000000000000000084521690820152fd5b88908863ffffffff8851927f2146a07a0000000000000000000000000000000000000000000000000000000084521690820152fd5b8a80fd5b8483517f7eb966c8000000000000000000000000000000000000000000000000000000008152fd5b505050346102805781600319360112610280576020905160018152f35b80858534610caa57610b2836610ec2565b610b569591957f00000000000000000000000000000000000000000000000000000000000000008785611609565b6001600160a01b039586610b6a8286612154565b1696610bb0610b7983876116c2565b92610ba085610b88868d611403565b610b9336858c61108c565b6020815191012090611742565b610baa818861191f565b9661192e565b9463ffffffff885193610bc28561101b565b168352602083015267ffffffffffffffff809516878301527f00000000000000000000000000000000000000000000000000000000000000001690813b1561083d578360a492610c639489519a8b9687957fa825d7470000000000000000000000000000000000000000000000000000000087528b87019067ffffffffffffffff6040809263ffffffff815116855260208101516020860152015116910152565b606485015260848401525af18015610ca057610c7d578480f35b8311610c8d575052818080808480f35b836041602492634e487b7160e01b835252fd5b83513d87823e3d90fd5b5050fd5b505090346101e55760606003193601126101e557813567ffffffffffffffff9283821161083957610ce191369101610e7f565b9190602435604435948516809503610da857601f84601f19927f2cb0eed7538baeae4c6fde038c0fd0384d27de0dd55a228c65847bda6aa1ab569760a096610d2a36858961108c565b602081519101208b526002602052808b20838c52602052808b20338c52602052808b20827fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000008254161790558051988997338952608060208a01528160808a0152898901378a888589010152860152606085015201168101030190a180f35b8580fd5b93505050346101e55760206003193601126101e557357fffffffff0000000000000000000000000000000000000000000000000000000081168091036101e557602092507f0ab7be9f000000000000000000000000000000000000000000000000000000008114908115610e22575b5015158152f35b7f97f0258400000000000000000000000000000000000000000000000000000000811491508115610e55575b5038610e1b565b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501438610e4e565b9181601f8401121561027b5782359167ffffffffffffffff831161027b576020838186019501011161027b57565b359067ffffffffffffffff8216820361027b57565b604060031982011261027b576004359067ffffffffffffffff821161027b57610eed91600401610e7f565b909160243590565b600435906001600160a01b038216820361027b57565b35906001600160a01b038216820361027b57565b9181601f8401121561027b5782359167ffffffffffffffff831161027b576020808501948460051b01011161027b57565b6024359063ffffffff8216820361027b57565b6004359063ffffffff8216820361027b57565b90815180825260208080930193019160005b828110610f96575050505090565b83516001600160a01b031685529381019392810192600101610f88565b6110189167ffffffffffffffff825116815260ff602083015116602082015260ff604083015116604082015260ff606083015116606082015260a0611007608084015160c0608085015260c0840190610f76565b9201519060a0818403910152610f76565b90565b6060810190811067ffffffffffffffff82111761103757604052565b634e487b7160e01b600052604160045260246000fd5b60c0810190811067ffffffffffffffff82111761103757604052565b90601f601f19910116810190811067ffffffffffffffff82111761103757604052565b92919267ffffffffffffffff821161103757604051916110b66020601f19601f8401160184611069565b82948184528183011161027b578281602093846000960137010152565b3563ffffffff8116810361027b5790565b359060ff8216820361027b57565b81601f8201121561027b5780359160209167ffffffffffffffff8411611037578360051b906040519461112785840187611069565b8552838086019282010192831161027b578301905b82821061114a575050505090565b83809161115684610f0b565b81520191019061113c565b919060c08382031261027b576040519061117a8261104d565b819361118581610ead565b8352611193602082016110e4565b60208401526111a4604082016110e4565b60408401526111b5606082016110e4565b606084015267ffffffffffffffff91608082013583811161027b57816111dc9184016110f2565b608085015260a082013592831161027b5760a0926111fa92016110f2565b910152565b919061122c7f00000000000000000000000000000000000000000000000000000000000000008285611609565b6001600160a01b0361123e8285612154565b169261124a82826116c2565b9061125783828785611958565b1561128f5761126c6112749261128196611403565b92369161108c565b6020815191012090611b24565b61128a57600090565b600190565b5050505050600290565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff418136030182121561027b570190565b3560ff8116810361027b5790565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561027b57016020813591019167ffffffffffffffff821161027b578160051b3603831361027b57565b91908082526020809201929160005b82811061134a575050505090565b9091929382806001926001600160a01b0361136489610f0b565b1681520195019392910161133c565b604051906113808261104d565b606060a0836000815260006020820152600060408201526000838201528260808201520152565b90604051918281549182825260209260208301916000526020600020936000905b8282106113e0575050506113de92500383611069565b565b85546001600160a01b0316845260019586019588955093810193909101906113c8565b919061140d611373565b63ffffffff90911660008181527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602090815260408083206001600160a01b03909716835260018252808320938352928152908290208054939591939067ffffffffffffffff8083168061157e575083541687525b60ff9482851c8616806115535750858454861c169081611538575b50505b848260481c169081156000146114f957505050805491838360481c1691826114d2575b50505050505b6113de82611d00565b60026114de91016113a7565b60a087015285015260501c16606083015238808080806114c3565b909250848394929403611511575b50505050506114c9565b600261151d91016113a7565b60a087015285015260501c1660608301523880808080611507565b611544600186016113a7565b60808a0152880152388061149d565b90868203611563575b50506114a0565b61156f600184016113a7565b60808a0152880152388061155c565b90810361158c575b50611482565b875238611586565b9163ffffffff16600281036115d857506115b46115ca9261101892611403565b6040519283916020808401526040830190610fb3565b03601f198101835282611069565b602490604051907f3018cc2b0000000000000000000000000000000000000000000000000000000082526004820152fd5b919060518103611698578060011161027b576001833560f81c0361166e5760311161027b5763ffffffff602d911691013560e01c0361164457565b60046040517f9a61cd26000000000000000000000000000000000000000000000000000000008152fd5b60046040517f28fac066000000000000000000000000000000000000000000000000000000008152fd5b60046040517f0666bafd000000000000000000000000000000000000000000000000000000008152fd5b90600d1161027b576009013560e01c90565b80518210156116e85760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b60ff16801561172c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b634e487b7160e01b600052601160045260246000fd5b919290602083019360ff9485815116611857575b50846060850151169060005b86604087015116908781169182101561182d576117fb6001600160a01b0361178f8a9460a08b01516116d4565b51895160008981526002602090815260408083208a84528252808320959094166001600160a01b0316825293909352912080547fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000811690915567ffffffffffffffff9081169116111590565b611809575b60010116611762565b9261181491506116fe565b9186831615611824578690611800565b50505050915050565b60046040517f692c93cb000000000000000000000000000000000000000000000000000000008152fd5b92939160005b8685511687821690811015611900576001600160a01b036118856118f19260808801516116d4565b51865160008681526002602090815260408083208a84528252808320959094166001600160a01b0316825293909352912080547fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000811690915567ffffffffffffffff9081169116111590565b1561182d57600101861661185d565b50509193925084604085015116156119185738611756565b5050915050565b90602d1161027b57600d013590565b9060091161027b576001013560c01c90565b9081602091031261027b5751801515810361027b5790565b919261196e90611968818661191f565b9461192e565b91604093845161197d8161101b565b63ffffffff80931681526020938482019283528682019567ffffffffffffffff80911687526001600160a01b0390817f000000000000000000000000000000000000000000000000000000000000000016918951937fc9a54a99000000000000000000000000000000000000000000000000000000008552611a26600486018767ffffffffffffffff6040809263ffffffff815116855260208101516020860152015116910152565b16928360648201528781608481865afa908115611b1957600091611afc575b5015611aee57869560849451169451975116885197889586947fe361b59c00000000000000000000000000000000000000000000000000000000865260048601526024850152604484015260648301525afa928315611ae45750600092611ab7575b5050611ab257600190565b600090565b611ad69250803d10611add575b611ace8183611069565b810190611940565b3880611aa7565b503d611ac4565b513d6000823e3d90fd5b505050505050505050600090565b611b139150883d8a11611add57611ace8183611069565b38611a45565b8a513d6000823e3d90fd5b91909260208084019360ff9485815116611bea575b50846060820151169160005b604087818501511688831690811015611bdb57908892918a60005260028552816000208960005285526001600160a01b03611b88836000209260a08901516116d4565b5116600052845267ffffffffffffffff80916000205416908551161115611bb3575b60010116611b45565b93611bbe91506116fe565b9286841615611bce578690611baa565b5050505092505050600190565b50505050505092505050600090565b94959092939160005b8787511688821690811015611c68578360005260028352604090816000208660005284526001600160a01b03611c31836000209260808a01516116d4565b5116600052835267ffffffffffffffff809160002054169086511611611c5b576001018716611bf3565b5050505050915050600090565b5050919392909594508460408201511615611c835738611b39565b505092505050600190565b6001600160a01b03600054163303611ca257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60ff602082015116159081611d41575b50611d1757565b60046040517f7e36c284000000000000000000000000000000000000000000000000000000008152fd5b60ff915060600151161538611d10565b916020918282019260ff938481511685811480156120f5575b156120c35750608084015151612099575b60409586850195808751168181148015612091575b15611fe8575060a086015151611fbf57606086015116611f96575b63ffffffff60009416845282528583209567ffffffffffffffff9569ff00000000000000000068ff000000000000000088885116938a549551901b16915160481b16917fffffffffffffffffffffffffffffffffffffffffff00000000000000000000006aff00000000000000000000606089015160501b1694161717171785556001946001810190608085015191825190878211611f82576801000000000000000093848311611f6e5785908254848455808510611f44575b500190865284862089875b848110611f29575050505050600260a09101940151908151958611611f15578511611f015781908454868655808710611ed7575b5001928252808220915b848110611ebd57505050505050565b83516001600160a01b031683820155928101928501611eae565b858552878784872092830192015b828110611ef3575050611ea4565b868155859450899101611ee5565b602483634e487b7160e01b81526041600452fd5b602484634e487b7160e01b81526041600452fd5b876001600160a01b0385511694019381840155018a90611e70565b8389528b85848b2092830192015b828110611f60575050611e65565b8a81558994508d9101611f52565b602487634e487b7160e01b81526041600452fd5b602486634e487b7160e01b81526041600452fd5b600487517f81da67ee000000000000000000000000000000000000000000000000000000008152fd5b600488517f05f7ab62000000000000000000000000000000000000000000000000000000008152fd5b9060a0870191808351511490811591612086575b5061205d57806060880151168015918215612050575b5050612027576120229051612163565b611dab565b600488517f81da67ee000000000000000000000000000000000000000000000000000000008152fd5b8951161090503880612012565b600489517f05f7ab62000000000000000000000000000000000000000000000000000000008152fd5b607f91501138611ffc565b508015611d90565b60046040517f1b668041000000000000000000000000000000000000000000000000000000008152fd5b60808501908082515114908115916120ea575b50612099576120e59051612163565b611d7b565b607f915011386120d6565b508015611d6a565b63ffffffff1660009081527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602052604090819020549081901c60ff161580159190612147575090565b60ff915060501c16151590565b9060511161027b576031013590565b60009190825b81518410156121c5576001600160a01b038061218586856116d4565b5116911681111561219b57600190930192612169565b60046040517fa228a30b000000000000000000000000000000000000000000000000000000008152fd5b5050905056fea2646970667358221220c6995a71f7066fe88be0d5a2420fb01ac04a25eb6bebc9aa72004d30b4fdcf7f64736f6c63430008160033";
var isSuperArgs7 = (xs) => xs.length > 1;
var ReceiveUln302__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs7(args)) {
      super(...args);
    } else {
      super(_abi42, _bytecode7, args[0]);
    }
  }
  getDeployTransaction(_endpoint, overrides) {
    return super.getDeployTransaction(_endpoint, overrides || {});
  }
  deploy(_endpoint, overrides) {
    return super.deploy(_endpoint, overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi42);
  }
  static connect(address, runner) {
    return new Contract(address, _abi42, runner);
  }
};
ReceiveUln302__factory.bytecode = _bytecode7;
ReceiveUln302__factory.abi = _abi42;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/uln/uln302/SendUln302__factory.ts
var _abi43 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_endpoint",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_treasuryGasLimit",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_treasuryGasForFeeCap",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [],
    name: "AtLeastOneDVN",
    type: "error"
  },
  {
    inputs: [],
    name: "CannotWithdrawAltToken",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256"
      }
    ],
    name: "InvalidAmount",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "configType",
        type: "uint32"
      }
    ],
    name: "InvalidConfigType",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidConfirmations",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidDVNIdx",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cursor",
        type: "uint256"
      }
    ],
    name: "InvalidDVNOptions",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidExecutor",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidLegacyType1Option",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidLegacyType2Option",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "max",
        type: "uint256"
      }
    ],
    name: "InvalidMessageSize",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidOptionalDVNCount",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidOptionalDVNThreshold",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidRequiredDVNCount",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "workerId",
        type: "uint8"
      }
    ],
    name: "InvalidWorkerId",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cursor",
        type: "uint256"
      }
    ],
    name: "InvalidWorkerOptions",
    type: "error"
  },
  {
    inputs: [],
    name: "NotTreasury",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyEndpoint",
    type: "error"
  },
  {
    inputs: [],
    name: "ToAddressIsZero",
    type: "error"
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256"
      }
    ],
    name: "TransferNativeFailed",
    type: "error"
  },
  {
    inputs: [],
    name: "Unsorted",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      }
    ],
    name: "UnsupportedEid",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "optionType",
        type: "uint16"
      }
    ],
    name: "UnsupportedOptionType",
    type: "error"
  },
  {
    inputs: [],
    name: "ZeroMessageSize",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "requiredDVNs",
        type: "address[]"
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "optionalDVNs",
        type: "address[]"
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "fees",
        type: "uint256[]"
      }
    ],
    name: "DVNFeePaid",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "maxMessageSize",
                type: "uint32"
              },
              {
                internalType: "address",
                name: "executor",
                type: "address"
              }
            ],
            internalType: "struct ExecutorConfig",
            name: "config",
            type: "tuple"
          }
        ],
        indexed: false,
        internalType: "struct SetDefaultExecutorConfigParam[]",
        name: "params",
        type: "tuple[]"
      }
    ],
    name: "DefaultExecutorConfigsSet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "confirmations",
                type: "uint64"
              },
              {
                internalType: "uint8",
                name: "requiredDVNCount",
                type: "uint8"
              },
              {
                internalType: "uint8",
                name: "optionalDVNCount",
                type: "uint8"
              },
              {
                internalType: "uint8",
                name: "optionalDVNThreshold",
                type: "uint8"
              },
              {
                internalType: "address[]",
                name: "requiredDVNs",
                type: "address[]"
              },
              {
                internalType: "address[]",
                name: "optionalDVNs",
                type: "address[]"
              }
            ],
            internalType: "struct UlnConfig",
            name: "config",
            type: "tuple"
          }
        ],
        indexed: false,
        internalType: "struct SetDefaultUlnConfigParam[]",
        name: "params",
        type: "tuple[]"
      }
    ],
    name: "DefaultUlnConfigsSet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oapp",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "maxMessageSize",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "executor",
            type: "address"
          }
        ],
        indexed: false,
        internalType: "struct ExecutorConfig",
        name: "config",
        type: "tuple"
      }
    ],
    name: "ExecutorConfigSet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "executor",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      }
    ],
    name: "ExecutorFeePaid",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lzToken",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "LzTokenFeeWithdrawn",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "worker",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "NativeFeeWithdrawn",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "treasury",
        type: "address"
      }
    ],
    name: "TreasurySet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oapp",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "confirmations",
            type: "uint64"
          },
          {
            internalType: "uint8",
            name: "requiredDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNThreshold",
            type: "uint8"
          },
          {
            internalType: "address[]",
            name: "requiredDVNs",
            type: "address[]"
          },
          {
            internalType: "address[]",
            name: "optionalDVNs",
            type: "address[]"
          }
        ],
        indexed: false,
        internalType: "struct UlnConfig",
        name: "config",
        type: "tuple"
      }
    ],
    name: "UlnConfigSet",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oapp",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      }
    ],
    name: "executorConfigs",
    outputs: [
      {
        internalType: "uint32",
        name: "maxMessageSize",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "executor",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "worker",
        type: "address"
      }
    ],
    name: "fees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_remoteEid",
        type: "uint32"
      }
    ],
    name: "getAppUlnConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "confirmations",
            type: "uint64"
          },
          {
            internalType: "uint8",
            name: "requiredDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNThreshold",
            type: "uint8"
          },
          {
            internalType: "address[]",
            name: "requiredDVNs",
            type: "address[]"
          },
          {
            internalType: "address[]",
            name: "optionalDVNs",
            type: "address[]"
          }
        ],
        internalType: "struct UlnConfig",
        name: "",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_configType",
        type: "uint32"
      }
    ],
    name: "getConfig",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_remoteEid",
        type: "uint32"
      }
    ],
    name: "getExecutorConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "maxMessageSize",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "executor",
            type: "address"
          }
        ],
        internalType: "struct ExecutorConfig",
        name: "rtnConfig",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_remoteEid",
        type: "uint32"
      }
    ],
    name: "getUlnConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "confirmations",
            type: "uint64"
          },
          {
            internalType: "uint8",
            name: "requiredDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNThreshold",
            type: "uint8"
          },
          {
            internalType: "address[]",
            name: "requiredDVNs",
            type: "address[]"
          },
          {
            internalType: "address[]",
            name: "optionalDVNs",
            type: "address[]"
          }
        ],
        internalType: "struct UlnConfig",
        name: "rtnConfig",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "isSupportedEid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "messageLibType",
    outputs: [
      {
        internalType: "enum MessageLibType",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          },
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "receiver",
            type: "bytes32"
          },
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32"
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes"
          }
        ],
        internalType: "struct Packet",
        name: "_packet",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      },
      {
        internalType: "bool",
        name: "_payInLzToken",
        type: "bool"
      }
    ],
    name: "quote",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nativeFee",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "lzTokenFee",
            type: "uint256"
          }
        ],
        internalType: "struct MessagingFee",
        name: "",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          },
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "receiver",
            type: "bytes32"
          },
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32"
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes"
          }
        ],
        internalType: "struct Packet",
        name: "_packet",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      },
      {
        internalType: "bool",
        name: "_payInLzToken",
        type: "bool"
      }
    ],
    name: "send",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nativeFee",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "lzTokenFee",
            type: "uint256"
          }
        ],
        internalType: "struct MessagingFee",
        name: "",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint32",
            name: "configType",
            type: "uint32"
          },
          {
            internalType: "bytes",
            name: "config",
            type: "bytes"
          }
        ],
        internalType: "struct SetConfigParam[]",
        name: "_params",
        type: "tuple[]"
      }
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "maxMessageSize",
                type: "uint32"
              },
              {
                internalType: "address",
                name: "executor",
                type: "address"
              }
            ],
            internalType: "struct ExecutorConfig",
            name: "config",
            type: "tuple"
          }
        ],
        internalType: "struct SetDefaultExecutorConfigParam[]",
        name: "_params",
        type: "tuple[]"
      }
    ],
    name: "setDefaultExecutorConfigs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "confirmations",
                type: "uint64"
              },
              {
                internalType: "uint8",
                name: "requiredDVNCount",
                type: "uint8"
              },
              {
                internalType: "uint8",
                name: "optionalDVNCount",
                type: "uint8"
              },
              {
                internalType: "uint8",
                name: "optionalDVNThreshold",
                type: "uint8"
              },
              {
                internalType: "address[]",
                name: "requiredDVNs",
                type: "address[]"
              },
              {
                internalType: "address[]",
                name: "optionalDVNs",
                type: "address[]"
              }
            ],
            internalType: "struct UlnConfig",
            name: "config",
            type: "tuple"
          }
        ],
        internalType: "struct SetDefaultUlnConfigParam[]",
        name: "_params",
        type: "tuple[]"
      }
    ],
    name: "setDefaultUlnConfigs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address"
      }
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint64",
        name: "major",
        type: "uint64"
      },
      {
        internalType: "uint8",
        name: "minor",
        type: "uint8"
      },
      {
        internalType: "uint8",
        name: "endpointVersion",
        type: "uint8"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lzToken",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawLzTokenFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    stateMutability: "payable",
    type: "receive"
  }
];
var _bytecode8 = "0x61010080604052346200016757606081620046e180380380916200002482856200016c565b833981010312620001675780516001600160a01b039182821691828103620001675760046020604081850151940151946040519283809263416ecebf60e01b82525afa9081156200015b576000916200010e575b509060805260a0526000543360018060a01b0319821617600055604051933391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360c05260e05261453a9081620001a782396080518181816103970152818161053b01528181610b060152611649015260a05181505060c051818181612a800152612f94015260e05181612ea10152f35b6020813d60201162000152575b816200012a602093836200016c565b810103126200014e57519063ffffffff821682036200014b57503862000078565b80fd5b5080fd5b3d91506200011b565b6040513d6000823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200019057604052565b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806301ffc9a71461017b578063188183f4146101765780631881d94d14610171578063200175f71461016c57806320efd7221461016757806329460b0b1461016257806339e3f9381461015d5780634389e58f1461015857806343ea4fa9146101535780634d9632001461014e57806354fd4d501461014957806361d027b3146101445780636750cd4c1461013f578063715018a61461013a5780638da5cb5b146101355780639c33abf714610130578063c14c43491461012b578063d80e9bd914610126578063f0f4426014610121578063f2fde38b1461011c578063faaebd21146101175763fd9be5220361000e576115cc565b61158e565b61149a565b611416565b6110ad565b610f33565b610ede565b610eb7565b610e42565b610e11565b610dea565b610dc0565b610d65565b610d22565b610ae0565b610920565b610696565b6104ee565b61030d565b6102f1565b6102b1565b3461024d57602060031936011261024d576004357fffffffff00000000000000000000000000000000000000000000000000000000811680910361024d57807f97f025840000000000000000000000000000000000000000000000000000000060209214908115610223575b81156101f9575b506040519015158152f35b7f01ffc9a700000000000000000000000000000000000000000000000000000000915014386101ee565b7fb6e9ace300000000000000000000000000000000000000000000000000000000811491506101e7565b600080fd5b6001600160a01b0381160361024d57565b359061026e82610252565b565b63ffffffff81160361024d57565b359061026e82610270565b600319604091011261024d576004356102a181610252565b906024356102ae81610270565b90565b3461024d5760406102ca6102c436610289565b90611868565b6102ef825180926001600160a01b036020809263ffffffff8151168552015116910152565bf35b3461024d57600060031936011261024d57602060405160008152f35b3461024d57606060031936011261024d5760043561032a81610252565b60243561033681610252565b6044359161035b61034f6002546001600160a01b031690565b6001600160a01b031690565b3303610493576040517fe1758bd80000000000000000000000000000000000000000000000000000000081526001600160a01b036020826004817f000000000000000000000000000000000000000000000000000000000000000085165afa91821561048e5760009261045d575b508083169116146104335761042e836104047fe081464b7278501267de69fa85b7b9560b0ae05d5fbfaab9b1986c70356e2efe95858561231f565b604051938493846040919493929460608201956001600160a01b0380921683521660208201520152565b0390a1005b60046040517f08d198d3000000000000000000000000000000000000000000000000000000008152fd5b61048091925060203d602011610487575b61047881836117d2565b810190611921565b90386103c9565b503d61046e565b611936565b60046040517fb90cdbb1000000000000000000000000000000000000000000000000000000008152fd5b9181601f8401121561024d5782359167ffffffffffffffff831161024d576020808501948460051b01011161024d57565b3461024d5760408060031936011261024d576004803561050d81610252565b60243567ffffffffffffffff811161024d5761052d9036906004016104bd565b929092336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000160361066c5760005b81811061056c57005b610577818387611971565b610588610583826119b6565b612444565b6020810160016105a361059a836119b6565b63ffffffff1690565b036105de5750906105d882866105d26105ca6105c06001976119b6565b938c8101906119c0565b810190611b83565b91612508565b01610563565b600263ffffffff6105ee836119b6565b160361061f57509061061a828661061461060c6105c06001976119b6565b810190611b5d565b9161248c565b6105d8565b8461066861062d8a936119b6565b92517f3018cc2b00000000000000000000000000000000000000000000000000000000815263ffffffff909316918301918252829160200190565b0390fd5b60046040517f7eb966c8000000000000000000000000000000000000000000000000000000008152fd5b3461024d5760208060031936011261024d57600467ffffffffffffffff813581811161024d576106ca9036906004016104bd565b9290916106d5612618565b60005b848110610710576040517faaf3aaa0c11056e86ac56eb653e25b005ca1a7d4dcd21ba24647f7ab63f3b560908061042e888883611cea565b61071b818686611bbd565b8681019060ff8061073f6107398b6107338787611bfd565b01611c30565b60ff1690565b1461084457604090610758610739836107338787611bfd565b1461081c578461078061077361076e8686611bfd565b611c3a565b67ffffffffffffffff1690565b146107f4575081816107a86107a361079e600197966107ee96611bfd565b611c44565b612670565b6000805260016020526107e861079e7fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49936107e2846119b6565b93611bfd565b91612823565b016106d8565b8590517f8f6ae8f8000000000000000000000000000000000000000000000000000000008152fd5b8590517f05f7ab62000000000000000000000000000000000000000000000000000000008152fd5b856040517f1b668041000000000000000000000000000000000000000000000000000000008152fd5b90815180825260208080930193019160005b82811061088d575050505090565b83516001600160a01b03168552938101939281019260010161087f565b6102ae9167ffffffffffffffff825116815260ff602083015116602082015260ff604083015116604082015260ff606083015116606082015260a06108fe608084015160c0608085015260c084019061086d565b9201519060a081840391015261086d565b9060206102ae9281815201906108aa565b3461024d576109e861096a6001600160a01b0361093c36610289565b9190610946611e8f565b5016600052600160205260406000209063ffffffff16600052602052604060002090565b6109d760026040519261097c8461175d565b6109c060ff825467ffffffffffffffff81168752818160401c1660208801526109b0828260481c16604089019060ff169052565b60501c16606086019060ff169052565b6109cc60018201611ec3565b608085015201611ec3565b60a08201526040519182918261090f565b0390f35b8015150361024d57565b6044359061026e826109ec565b906003199060608284011261024d5760043567ffffffffffffffff9283821161024d5760e090828603011261024d57600401926024359083821161024d578060238301121561024d57816004013593841161024d576024848301011161024d5760240191906102ae6109f6565b60005b838110610a835750506000910152565b8181015183820152602001610a73565b90601f19601f602093610ab181518092818752878088019101610a70565b0116010190565b80610ad36060926102ae959460208091805184520151910152565b8160408201520190610a93565b3461024d57610aee36610a03565b9091610af861184f565b506001600160a01b039233847f0000000000000000000000000000000000000000000000000000000000000000160361066c57610b34916130d4565b906040850191823595610b4687610252565b6060810192833597610b5789610270565b610b618982611868565b90610b6f60c08501856119c0565b9a9050610b8363ffffffff8451168c612c87565b610bd660209a8b809501511694610b9983610270565b610ba284610252565b6040519c8d9485947f717e8a4200000000000000000000000000000000000000000000000000000000865260048601612b49565b03816000855af197881561048e57600098610cad575b5092610c63610c55610c4f610c5d9895610c6f98957f61ed099e74a97a1d7f8bb0952a88ca8b7b8ebd00c126ea04671f92a81213318a8d610c699a8e82610c8d575b50604080516001600160a01b039290921682526020820192909252a1612d3b565b9a611f69565b968793611f1d565b916119b6565b906129d8565b92611f69565b91610c786117f5565b9283528201526109e860405192839283610ab8565b60049082600052526040600020610ca5838254611f69565b90558e610c2e565b610c6994919850610c55610c4f610c5d9895610c6f98957f61ed099e74a97a1d7f8bb0952a88ca8b7b8ebd00c126ea04671f92a81213318a8c610d08610c6397823d8411610d1b575b610d0081836117d2565b810190612b3a565b9e979a5050509598509598505050610bec565b503d610cf6565b3461024d576109e8610d3c610d3636610289565b90611f76565b6040519182916020835260208301906108aa565b9063ffffffff16600052602052604060002090565b3461024d576040610da7610d7836610289565b6001600160a01b039291928093166000526003602052836000209063ffffffff16600052602052604060002090565b549082519163ffffffff8116835260201c166020820152f35b3461024d57600060031936011261024d576060604051600381526000602082015260026040820152f35b3461024d57600060031936011261024d5760206001600160a01b0360025416604051908152f35b3461024d57602060031936011261024d576020610e38600435610e3381610270565b612ae5565b6040519015158152f35b3461024d57600080600319360112610eb457610e5c612618565b806001600160a01b0381547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b3461024d57600060031936011261024d5760206001600160a01b0360005416604051908152f35b3461024d57606060031936011261024d576109e8610f1f600435610f0181610270565b602435610f0d81610252565b60443591610f1a83610270565b612136565b604051918291602083526020830190610a93565b3461024d5760208060031936011261024d5760049060043567ffffffffffffffff9182821161024d573660238301121561024d57816004013592831161024d576024820191602436916060860201011161024d57610f8f612618565b60005b838110610fca576040517f2b001e1c6683bf79cc52891bd7215b204c787d18134fc7f3d21b4f32a49e47de908061042e8787836122a0565b610fd58185856121f6565b828101906040610fe961034f828401611f1d565b1561108557610ffa61059a846119b6565b1561105d575060008052600360205260019291611057916110529061103e7f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff610c5d565b63ffffffff16600052602052604060002090565b612206565b01610f92565b8790517f8e2f797b000000000000000000000000000000000000000000000000000000008152fd5b8790517f710c9497000000000000000000000000000000000000000000000000000000008152fd5b3461024d576110f86110be36610a03565b93906110c861184f565b506110d66040850135610252565b6110e36060850135610270565b6110f060c08501856119c0565b9390506130d4565b61110d60608594939401356040860135611f76565b9080511560001461140257506111356040516111288161179a565b6000815295939495613ac9565b93909560009461115b61114c602086015160ff1690565b604086015160ff165b90613771565b946000955b60ff811660ff881610156112f157602086015160ff1660ff811660ff8916106000146112cc57506111a861119b60ff89166080890151612c0b565b516001600160a01b031690565b945b6111b2612dd2565b9960005b85518110156112b8578c60ff8b166111db6107396111d4858b612c0b565b5160ff1690565b146111e957506001016111b6565b602092969c50611260949a9b9397989161120291612c0b565b51905b886001600160a01b036112208c5167ffffffffffffffff1690565b604051978895869485937f30bb3aac0000000000000000000000000000000000000000000000000000000085526060604083013592013560048601613c89565b0392165afa90811561048e5761128660ff93926001928594600092611297575b50611f69565b990116969050979197939293611160565b6112b191925060203d602011610d1b57610d0081836117d2565b9038611280565b50939960209061126093999a929697611205565b61119b6112eb916112e561073960a08b0151928c6126c1565b90612c0b565b946111aa565b61137f84868a60208d8761133f61034f61034f8561131760608b013560408c0135611868565b61133161132b61059a835163ffffffff1690565b87612c87565b01516001600160a01b031690565b906040518098819482937f709eb66400000000000000000000000000000000000000000000000000000000845260408b013560608c013560048601612b49565b03915afa91821561048e576113a66113b793610c69936109e8976000926113e15750611f69565b846040606083970135910135612efd565b906113c06117f5565b82815260209081019182526040805193845291519083015290918291820190565b6113fb91925060203d602011610d1b57610d0081836117d2565b9088611280565b602080611135920151015195939495613ac9565b3461024d57602060031936011261024d577f3c864541ef71378c6229510ed90f376565ee42d9c5e0904a984a9e863e6db44f60206001600160a01b0360043561145e81610252565b611466612618565b16807fffffffffffffffffffffffff00000000000000000000000000000000000000006002541617600255604051908152a1005b3461024d57602060031936011261024d576004356114b781610252565b6114bf612618565b6001600160a01b038091168015611524576000918254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b608460405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b3461024d57602060031936011261024d576001600160a01b036004356115b381610252565b1660005260046020526020604060002054604051908152f35b3461024d5760408060031936011261024d57600435906115eb82610252565b6024356000923384526004602052828420548083116116f5578290338652600460205203838520558251927fe1758bd80000000000000000000000000000000000000000000000000000000084526020846004816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa90811561048e576116aa84846116d0947f820b7fd51bf79c54350bab98400651b3314ff6e79b33528821871d94a6669883988a916116d6575b50612b7b565b513381526001600160a01b03909216602083015260408201929092529081906060820190565b0390a180f35b6116ef915060203d6020116104875761047881836117d2565b386116a4565b83517f7c83fcf0000000000000000000000000000000000000000000000000000000008152600481018490526024810191909152604490fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60c0810190811067ffffffffffffffff82111761177957604052565b61172e565b6040810190811067ffffffffffffffff82111761177957604052565b6020810190811067ffffffffffffffff82111761177957604052565b6080810190811067ffffffffffffffff82111761177957604052565b90601f601f19910116810190811067ffffffffffffffff82111761177957604052565b6040519061026e8261177e565b6040519061026e8261175d565b6040519060e0820182811067ffffffffffffffff82111761177957604052565b6040519060a0820182811067ffffffffffffffff82111761177957604052565b6040519061185c8261177e565b60006020838281520152565b6118e19092919261187761184f565b63ffffffff851660009081527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff60205260408120919590929091906001600160a01b039485938480931686526003602052604086209063ffffffff16600052602052604060002090565b5463ffffffff8082168015611917575b16885260201c169250821561190b5750505b166020830152565b5460201c169050611903565b50808454166118f1565b9081602091031261024d57516102ae81610252565b6040513d6000823e3d90fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b91908110156119b15760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18136030182121561024d570190565b611942565b356102ae81610270565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561024d570180359067ffffffffffffffff821161024d5760200191813603831361024d57565b67ffffffffffffffff81160361024d57565b359061026e82611a11565b60ff81160361024d57565b359061026e82611a2e565b67ffffffffffffffff81116117795760051b60200190565b9080601f8301121561024d576020908235611a7681611a44565b93611a8460405195866117d2565b81855260208086019260051b82010192831161024d57602001905b828210611aad575050505090565b8380918335611abb81610252565b815201910190611a9f565b91909160c08184031261024d57611adb611802565b92611ae582611a23565b8452611af360208301611a39565b6020850152611b0460408301611a39565b6040850152611b1560608301611a39565b606085015267ffffffffffffffff608083013581811161024d5782611b3b918501611a5c565b608086015260a083013590811161024d57611b569201611a5c565b60a0830152565b9060208282031261024d57813567ffffffffffffffff811161024d576102ae9201611ac6565b9081604091031261024d57602060405191611b9d8361177e565b8035611ba881610270565b83520135611bb581610252565b602082015290565b91908110156119b15760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18136030182121561024d570190565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff418136030182121561024d570190565b356102ae81611a2e565b356102ae81611a11565b6102ae903690611ac6565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561024d57016020813591019167ffffffffffffffff821161024d578160051b3603831361024d57565b91908082526020809201929160005b828110611cbf575050505090565b9091929382806001926001600160a01b038835611cdb81610252565b16815201950193929101611cb1565b60208082528181018490526040600585901b8301810194919060009080850190865b858410611d1e57505050505050505090565b90919293949596977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08089830301855289357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18436030181121561024d5783019063ffffffff8235611d8f81610270565b16835287820135927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff418336030184121561024d578560e08a9493611e7d93611e6e879660019901858884015267ffffffffffffffff8135611def81611a11565b1686840152611e65611e54611e3a8a84013598611e0b8a611a2e565b60ff60609a168a88015284013598611e228a611a2e565b611e3360809a8b89019060ff169052565b8401611a39565b97611e4c60a0998a88019060ff169052565b830183611c4f565b60c080870152610100860191611ca2565b95810190611c4f565b93909282860301910152611ca2565b9a019401940192969594939190611d0c565b60405190611e9c8261175d565b606060a0836000815260006020820152600060408201526000838201528260808201520152565b90604051918281549182825260209260208301916000526020600020936000905b828210611efa5750505061026e925003836117d2565b85546001600160a01b031684526001958601958895509381019390910190611ee4565b356102ae81610252565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b90601f8201809211611f6457565b611f27565b91908201809211611f6457565b919091611fd3611f84611e8f565b60008052600160205293610d50611fb9827fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4983565b936001600160a01b03166000526001602052604060002090565b80549067ffffffffffffffff808316908161211757505061200d611fff845467ffffffffffffffff1690565b67ffffffffffffffff168652565b60ff91828160401c1680156000146120f35750835460401c60ff168381166120ce575b505b828160481c1691821560001461209d575050508154818160481c169283612062575b505050505b61026e82612670565b6120949361207560026120849301611ec3565b60a088015260ff166040870152565b60501c16606084019060ff169052565b38808080612054565b909193508284036120b2575b50505050612059565b6120c59361207560026120849301611ec3565b388080806120a9565b6120ed906120de60018701611ec3565b608089015260ff166020880152565b38612030565b838103612101575b50612032565b612111906120de60018501611ec3565b386120fb565b8103612124575b5061200d565b67ffffffffffffffff1685523861211e565b9163ffffffff811660018103612196575050612158612188926102ae92611868565b60405192839160208301815163ffffffff1681526020918201516001600160a01b03169181019190915260400190565b03601f1981018352826117d2565b6002036121bd57506121ae612188926102ae92611f76565b6040519283916020830161090f565b6040517f3018cc2b00000000000000000000000000000000000000000000000000000000815263ffffffff919091166004820152602490fd5b91908110156119b1576060020190565b602061026e9261224b813561221a81610270565b849063ffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000825416179055565b01359061225782610252565b907fffffffffffffffff0000000000000000000000000000000000000000ffffffff77ffffffffffffffffffffffffffffffffffffffff0000000083549260201b169116179055565b6020808252808201849052604091820193916000915b8383106122c557505050505090565b909192939460019086356122d881610270565b63ffffffff8091168252838801356122ef81610270565b16838201526001600160a01b038488013561230981610252565b16818501526060908101960194930191906122b6565b91906001600160a01b03918282161561241a57600080612393936123a16123ec9661026e98169460405196879160208301947fa9059cbb00000000000000000000000000000000000000000000000000000000865260248401602090939291936001600160a01b0360408201951681520152565b03601f1981018752866117d2565b604051946123ae8661177e565b602086527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65646020870152519082855af16123e6612fb9565b916143e5565b8051908115918215612400575b5050612ffe565b6124139250602080918301019101612fe9565b38806123f9565b60046040517f32fa6a1d000000000000000000000000000000000000000000000000000000008152fd5b61244d81612ae5565b156124555750565b60249063ffffffff604051917f2146a07a000000000000000000000000000000000000000000000000000000008352166004820152fd5b906125037f82118522aa536ac0e96cc5c689407ae42b89d592aa133890a01f1509842f5081936124de846001600160a01b038516948560005260016020526124d984836040600020612823565b611f76565b5063ffffffff60405194859485521660208401526060604084015260608301906108aa565b0390a1565b6126157f779cb2dd9d2bb1be1737d05435d744facbfb84a2a4912e21379d39beddcdc805936080936001600160a01b03809116938460005260036020526125e66125668260406000209063ffffffff16600052602052604060002090565b845181547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff918216178255936020860151167fffffffffffffffff0000000000000000000000000000000000000000ffffffff77ffffffffffffffffffffffffffffffffffffffff0000000083549260201b169116179055565b60405194855216602084015260408301906001600160a01b036020809263ffffffff8151168552015116910152565ba1565b6001600160a01b0360005416330361262c57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60ff6020820151161590816126b1575b5061268757565b60046040517f7e36c284000000000000000000000000000000000000000000000000000000008152fd5b60ff915060600151161538612680565b9060ff8091169116039060ff8211611f6457565b81519167ffffffffffffffff83116117795768010000000000000000831161177957815483835580841061274d575b50612719602080920192600052602060002090565b9060005b84811061272b575050505050565b6001908261274086516001600160a01b031690565b950194818501550161271d565b60008360005284602060002092830192015b82811061276d575050612704565b81815560010161275f565b815181546020840151604080860151606087015160489190911b69ff000000000000000000169290911b68ff00000000000000001667ffffffffffffffff9094167fffffffffffffffffffffffffffffffffffffffffff000000000000000000000090931692909217929092179190911760509190911b6aff000000000000000000001617815561026e9160029060a09061281a6080820151600186016126d5565b015191016126d5565b91909160ff80612837602085015160ff1690565b1681811480156129d0575b1561299e5750608083015151612974575b6040830181612863825160ff1690565b1690828214801561296c575b1561290357505060a0830151516128d957606083015160ff16166128af5761026e926128aa919063ffffffff16600052602052604060002090565b612778565b60046040517f81da67ee000000000000000000000000000000000000000000000000000000008152fd5b60046040517f05f7ab62000000000000000000000000000000000000000000000000000000008152fd5b9092949160a0850193808551511490811591612961575b506128d957606085015160ff16168015918215612949575b50506128af5761026e93610d506128aa9351612c1f565b519091506129599060ff16610739565b103880612932565b607f9150113861291a565b50811561286f565b60046040517f1b668041000000000000000000000000000000000000000000000000000000008152fd5b60808401908082515114908115916129c5575b50612974576129c09051612c1f565b612853565b607f915011386129b1565b508015612842565b90929391936000946000946001600160a01b039384600254169081612a00575b505050505050565b6040517fd51c54860000000000000000000000000000000000000000000000000000000060208201526001600160a01b03909116602482015263ffffffff9092166044830152606482018390528315156084830152939650939450612aad9391929091612aa591612a7e8260a481015b03601f1981018452836117d2565b7f000000000000000000000000000000000000000000000000000000000000000090612e16565b929091612e68565b9190809381612ac0575b808080806129f8565b60025416600052600460205260406000208054918201809211611f6457553880612ab7565b63ffffffff1660009081527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49602052604090205460ff8160401c161590811591612b2d575090565b60ff915060501c16151590565b9081602091031261024d575190565b90926001600160a01b0360809363ffffffff6102ae979616845216602083015260408201528160608201520190610a93565b6001600160a01b0390808216612bf2575081161561241a57600080808085855af1612ba4612fb9565b5015612bae575050565b6040517f2c024f920000000000000000000000000000000000000000000000000000000081526001600160a01b039190911660048201526024810191909152604490fd5b61026e9392915061231f565b8051156119b15760200190565b80518210156119b15760209160051b010190565b60009190825b8151841015612c81576001600160a01b0380612c418685612c0b565b51169116811115612c5757600190930192612c25565b60046040517fa228a30b000000000000000000000000000000000000000000000000000000008152fd5b50509050565b818111612c92575050565b6040517ff001cc6500000000000000000000000000000000000000000000000000000000815260048101919091526024810191909152604490fd5b67ffffffffffffffff811161177957601f01601f191660200190565b929192612cf582612ccd565b91612d0360405193846117d2565b82948184528183011161024d578281602093846000960137010152565b9080601f8301121561024d578160206102ae93359101612ce9565b9060e08236031261024d57612d4e61180f565b612d5783611a23565b8152612d656020840161027e565b6020820152612d7660408401610263565b6040820152612d876060840161027e565b60608201526080830135608082015260a083013560a082015260c083013567ffffffffffffffff811161024d57612dce93612dc491369101612d20565b60c08201526133e0565b9091565b60405190612ddf8261179a565b60008252565b604051612df18161179a565b60008152906000368137565b60405190612e0a8261177e565b60208083523683820137565b929190833b15612e5757600091829182612e2e612dfd565b9660208451940192f13d60208111612e4f575b8084526000602085013e9190565b506020612e41565b50509050612e63612de5565b600091565b600094939192859290158015612ef2575b612ee45780602080612e9093518301019101612b3a565b9215612e9b57505090565b929350917f000000000000000000000000000000000000000000000000000000000000000080821115612edc5750905b81811115612ed7575091565b905091565b905090612ecb565b505050509050600090600090565b506020815110612e79565b929093916000946000946001600160a01b03600254169081612f20575050505050565b6040517fd42442210000000000000000000000000000000000000000000000000000000060208201526001600160a01b03909116602482015263ffffffff9092166044830152606482018390528315156084830152939550612dce945091929091612aa591612f928260a48101612a70565b7f00000000000000000000000000000000000000000000000000000000000000009061351e565b3d15612fe4573d90612fca82612ccd565b91612fd860405193846117d2565b82523d6000602084013e565b606090565b9081602091031261024d57516102ae816109ec565b1561300557565b608460405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b60405161307b8161179a565b6000815290565b604090604051916130928361177e565b60018352829160009160005b6020808210156130cb578251602092916130b78261177e565b86825260608183015282890101520161309e565b50505091925050565b60609291839160028083106132f9576130ff6130f96130f38585613555565b906135d8565b60f01c90565b9260029260039461ffff906003828216146000146132e3575092946002936000965b8487106131de575050508184036131ac5760028211613185575b50505050505b82511561317b57613150613082565b926131596117f5565b6002815290602082015261316c84612bfe565b5261317683612bfe565b509190565b91506102ae61306f565b916131a0969795949391613198936135c0565b939092613fac565b9190388080808061313b565b6040517f0df85b3100000000000000000000000000000000000000000000000000000000815260048101859052602490fd5b909195600190818101986132066132006131fa8c858b8b6135c0565b9061361c565b60f81c90565b9060ff8083169081156132b1578216908161327f57505050985b6132346130f96130f38b8501848b8b6135c0565b908582161561324c5750830184160101959190613121565b6040517f0df85b310000000000000000000000000000000000000000000000000000000081526004810191909152602490fd5b9b92919b0361328f575b50613220565b9799613198836132a5959f949d939c8a8a6135c0565b9a909880969838613289565b6040517fe3faa65500000000000000000000000000000000000000000000000000000000815260006004820152602490fd5b935050925092506132f49350613d00565b613141565b6040517f0df85b3100000000000000000000000000000000000000000000000000000000815260006004820152602490fd5b9061333e60209282815194859201610a70565b0190565b90815180825260208080930193019160005b828110613362575050505090565b83516001600160a01b031685529381019392810192600101613354565b906133956133a591606084526060840190613342565b6020938382036020850152613342565b9060408183039101526020808451928381520193019160005b8281106133cc575050505090565b8351855293810193928101926001016133be565b90917f07ea52d82345d6e838192107d8fd7123d9c2ec8e916cd0aad13fd2b60db246446121886134e66134ec61341586613660565b6134d361342188613722565b98895160208b0120986134cd6134526040613443606085015163ffffffff1690565b9301516001600160a01b031690565b6134bd61345f8483611f76565b9c858e9651156000146135075750613488613478612dd2565b965b5167ffffffffffffffff1690565b906134a061349461182f565b63ffffffff9097168752565b60208601899052604086015267ffffffffffffffff166060850152565b6001600160a01b03166080830152565b89613822565b949098604051948593602085019061332b565b9061332b565b9361250360a06080830151920151926040519384938461337f565b602061351561348892612bfe565b5101519661347a565b929190833b15612e57576000918291613535612dfd565b9560208351930191fa3d60208111612e4f578084526000602085013e9190565b9060021161024d5790600290565b9060221161024d5760020190602090565b9060421161024d5760220190602090565b909291928360421161024d57831161024d57604201917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbe0190565b9093929384831161024d57841161024d578101920390565b7fffff000000000000000000000000000000000000000000000000000000000000903581811693926002811061360d57505050565b60020360031b82901b16169150565b7fff00000000000000000000000000000000000000000000000000000000000000903581811693926001811061365157505050565b60010360031b82901b16169150565b80519060208101516001600160a01b036040830151169160806060820151910151927fffffffffffffffff000000000000000000000000000000000000000000000000604051957f0100000000000000000000000000000000000000000000000000000000000000602088015260c01b1660218601527fffffffff00000000000000000000000000000000000000000000000000000000809360e01b166029860152602d85015260e01b16604d8301526051820152605181526102ae816117b6565b6102ae604060c060a0840151930151928151938491602083015261374f8151809260208686019101610a70565b81010360208101845201826117d2565b60ff60019116019060ff8211611f6457565b9060ff8091169116019060ff8211611f6457565b9061378f82611a44565b61379c60405191826117d2565b828152601f196137ac8294611a44565b0190602036910137565b916102ae926040815263ffffffff83511660408201526001600160a01b0360806137ef602086015160a0606086015260e0850190610a93565b9460408101518285015267ffffffffffffffff60608201511660a085015201511660c08201526020818403910152610a93565b929091613830600091613ac9565b919060209460ff61385561384860208a015160ff1690565b60408a015160ff16611155565b169161386083613785565b946000965b8460ff89161015613a255760208a015160ff168a60ff821660ff8b1610600014613a0657505061389f61119b60ff8a1660808d0151612c0b565b945b6138a9612dd2565b9a60005b84518110156139f45760ff8b166138ca6107396111d48489612c0b565b146138d7576001016138ad565b8597929a93949c506138ee8c916139249397612c0b565b515b604051809381927f95d376d70000000000000000000000000000000000000000000000000000000083528a600484016137b6565b038160006001600160a01b0387165af190811561048e576000916139d7575b5061395160ff84168a612c0b565b528761396060ff841682612c0b565b51613979575b5050600160ff9101169693919890613865565b82976001926139b96139b16139966139ce9560ff80991690612c0b565b51926001600160a01b03166000526004602052604060002090565b918254611f69565b90556139c7848a168b612c0b565b5190611f69565b96915087613966565b6139ee91508b3d8d11610d1b57610d0081836117d2565b38613943565b509395909891929a8a613924916138f0565b613a1f916112e561073960a061119b940151928d6126c1565b946138a1565b96505050505093509150565b604051613a3d8161177e565b600181528060005b602080821015613a6057906060602092828501015201613a45565b50505090565b90613a7082611a44565b613a7d60405191826117d2565b828152601f19613a8d8294611a44565b019060005b828110613a9e57505050565b806060602080938501015201613a92565b60405190613abc8261177e565b6001825260203681840137565b90815115613c815760ff9081613ade84614060565b16916001808414613c3f5780613af385613785565b9481613afe82613a66565b9760008087935b613ba0575b9181613b1c92613b24959403916142a5565b90888a614331565b6000915b613b33575b50505050565b8584831682811015613b99578493613b9182613b89613b82613b5a6111d48a978d99612c0b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0160ff1690565b918c612c0b565b9060ff169052565b011691613b28565b5050613b2d565b93949091928351851015613c3557613bba828601856141af565b94600391613bca83830187614193565b908d8d8c8316808e03613bf0575050505061ffff90965b16010190949392919085613b05565b8d85949b951603613c08575b50505061ffff90613be1565b8792979161ffff949a613c2a92613c248c868a039788916142a5565b92614331565b019496908d8d613bfc565b9291909493613b0a565b50509050613c4b613a31565b82613c5582612bfe565b52613c5f81612bfe565b50613c7d613c74613c6e613aaf565b9461413f565b613b8985612bfe565b9190565b606091508190565b906102ae949367ffffffffffffffff60809463ffffffff6001600160a01b03941685521660208401521660408201528160608201520190610a93565b359060208110613cd3575090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9060200360031b1b1690565b61ffff811660018103613dec5750509060228103613dc257613d39613d34613d2e6102ae9361218895613563565b90613cc5565b61447d565b604051928391602083017fffffffffffffffffffffffffffffffff000000000000000000000000000000006014927f01000000000000000000000000000000000000000000000000000000000000008084527e110000000000000000000000000000000000000000000000000000000000006001850152600384015260801b1660048201520190565b60046040517f9bebe0e7000000000000000000000000000000000000000000000000000000008152fd5b600203613f67575060428211801590613f5d575b613f33578161218882613e1e613d34613d2e6042976102ae97613563565b90613e3d613d2e8580613e37613d34613d2e8388613574565b94613585565b6040519687956020030160031b1c91602085019190604893917f01000000000000000000000000000000000000000000000000000000000000008085527e1100000000000000000000000000000000000000000000000000000000000060018601528060038601527fffffffffffffffffffffffffffffffff00000000000000000000000000000000809360801b16600486015260148501527e3100000000000000000000000000000000000000000000000000000000000060158501527f0200000000000000000000000000000000000000000000000000000000000000601785015260801b16601883015260288201520190565b60046040517f2b2e8c38000000000000000000000000000000000000000000000000000000008152fd5b5060628211613e00565b6040517f51458e6f00000000000000000000000000000000000000000000000000000000815261ffff919091166004820152602490fd5b908092918237016000815290565b909493929160ff811660018103613ff25750508051613fd15750613c7d913691612ce9565b612188613c7d92613fec94604051958694602086019061332b565b91613f9e565b91959160020361402a5750805161400f57506102ae913691612ce9565b6121886102ae92613fec94604051958694602086019061332b565b6040517fe3faa65500000000000000000000000000000000000000000000000000000000815260ff919091166004820152602490fd5b60009182805b83518110156141305760019061407e828201866141af565b9060039261ffff848301931692600284106140fd576140a29060ff9182918a614193565b168181146140d35782901b91828a16156140c1575b5050500101614066565b909192989501169317953880806140b7565b60046040517fa8384fc1000000000000000000000000000000000000000000000000000000008152fd5b6040517f9af41d330000000000000000000000000000000000000000000000000000000081526004810191909152602490fd5b91929093505181036140fd5750565b600481511061414f576004015190565b606460405162461bcd60e51b815260206004820152601360248201527f746f55696e74385f6f75744f66426f756e6473000000000000000000000000006044820152fd5b9081516001820190818311611f64571061414f57016001015190565b9081516002820190818311611f6457106141cb57016002015190565b606460405162461bcd60e51b815260206004820152601460248201527f746f55696e7431365f6f75744f66426f756e64730000000000000000000000006044820152fd5b1561421657565b606460405162461bcd60e51b815260206004820152600e60248201527f736c6963655f6f766572666c6f770000000000000000000000000000000000006044820152fd5b1561426157565b606460405162461bcd60e51b815260206004820152601160248201527f736c6963655f6f75744f66426f756e64730000000000000000000000000000006044820152fd5b916142ba816142b381611f56565b101561420f565b6142d083516142c98385611f69565b111561425a565b806142e957505050604051600081526020810160405290565b60405192601f821692831560051b80858701019484860193010101905b80841061431e5750508252601f01601f191660405290565b9092835181526020809101930190614306565b909193929360ff808216146140d3576143499061375f565b9360009260ff8616905b80518510156143dc5761436c6107396111d48784612c0b565b8281036143b5575050506143b29394506143a26134e6916121886143908686612c0b565b5191604051948593602085019061332b565b6143ac8383612c0b565b52612c0b565b50565b94909194156143c8576001019390614353565b93506143b29495613b89856143a293612c0b565b50505050509050565b9192901561444657508151156143f9575090565b3b156144025790565b606460405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b8251909150156144595750805190602001fd5b6106689060405191829162461bcd60e51b8352602060048401526024830190610a93565b6fffffffffffffffffffffffffffffffff9081811161449a571690565b608460405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203160448201527f32382062697473000000000000000000000000000000000000000000000000006064820152fdfea2646970667358221220b5b9dd899cef0c2ed63b351324b6bf4477ba80e7542ed6e16e5f5a68b7958cf864736f6c63430008160033";
var isSuperArgs8 = (xs) => xs.length > 1;
var SendUln302__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs8(args)) {
      super(...args);
    } else {
      super(_abi43, _bytecode8, args[0]);
    }
  }
  getDeployTransaction(_endpoint, _treasuryGasLimit, _treasuryGasForFeeCap, overrides) {
    return super.getDeployTransaction(
      _endpoint,
      _treasuryGasLimit,
      _treasuryGasForFeeCap,
      overrides || {}
    );
  }
  deploy(_endpoint, _treasuryGasLimit, _treasuryGasForFeeCap, overrides) {
    return super.deploy(
      _endpoint,
      _treasuryGasLimit,
      _treasuryGasForFeeCap,
      overrides || {}
    );
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi43);
  }
  static connect(address, runner) {
    return new Contract(address, _abi43, runner);
  }
};
SendUln302__factory.bytecode = _bytecode8;
SendUln302__factory.abi = _abi43;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/uln/ReceiveUlnBase__factory.ts
var _abi44 = [
  {
    inputs: [],
    name: "AtLeastOneDVN",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidConfirmations",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidEid",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidOptionalDVNCount",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidOptionalDVNThreshold",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidPacketHeader",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidPacketVersion",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidRequiredDVNCount",
    type: "error"
  },
  {
    inputs: [],
    name: "Unsorted",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      }
    ],
    name: "UnsupportedEid",
    type: "error"
  },
  {
    inputs: [],
    name: "Verifying",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "confirmations",
                type: "uint64"
              },
              {
                internalType: "uint8",
                name: "requiredDVNCount",
                type: "uint8"
              },
              {
                internalType: "uint8",
                name: "optionalDVNCount",
                type: "uint8"
              },
              {
                internalType: "uint8",
                name: "optionalDVNThreshold",
                type: "uint8"
              },
              {
                internalType: "address[]",
                name: "requiredDVNs",
                type: "address[]"
              },
              {
                internalType: "address[]",
                name: "optionalDVNs",
                type: "address[]"
              }
            ],
            internalType: "struct UlnConfig",
            name: "config",
            type: "tuple"
          }
        ],
        indexed: false,
        internalType: "struct SetDefaultUlnConfigParam[]",
        name: "params",
        type: "tuple[]"
      }
    ],
    name: "DefaultUlnConfigsSet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "dvn",
        type: "address"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "header",
        type: "bytes"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "confirmations",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "proofHash",
        type: "bytes32"
      }
    ],
    name: "PayloadVerified",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oapp",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "confirmations",
            type: "uint64"
          },
          {
            internalType: "uint8",
            name: "requiredDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNThreshold",
            type: "uint8"
          },
          {
            internalType: "address[]",
            name: "requiredDVNs",
            type: "address[]"
          },
          {
            internalType: "address[]",
            name: "optionalDVNs",
            type: "address[]"
          }
        ],
        indexed: false,
        internalType: "struct UlnConfig",
        name: "config",
        type: "tuple"
      }
    ],
    name: "UlnConfigSet",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_remoteEid",
        type: "uint32"
      }
    ],
    name: "getAppUlnConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "confirmations",
            type: "uint64"
          },
          {
            internalType: "uint8",
            name: "requiredDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNThreshold",
            type: "uint8"
          },
          {
            internalType: "address[]",
            name: "requiredDVNs",
            type: "address[]"
          },
          {
            internalType: "address[]",
            name: "optionalDVNs",
            type: "address[]"
          }
        ],
        internalType: "struct UlnConfig",
        name: "",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_remoteEid",
        type: "uint32"
      }
    ],
    name: "getUlnConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "confirmations",
            type: "uint64"
          },
          {
            internalType: "uint8",
            name: "requiredDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNThreshold",
            type: "uint8"
          },
          {
            internalType: "address[]",
            name: "requiredDVNs",
            type: "address[]"
          },
          {
            internalType: "address[]",
            name: "optionalDVNs",
            type: "address[]"
          }
        ],
        internalType: "struct UlnConfig",
        name: "rtnConfig",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "headerHash",
        type: "bytes32"
      },
      {
        internalType: "bytes32",
        name: "payloadHash",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "dvn",
        type: "address"
      }
    ],
    name: "hashLookup",
    outputs: [
      {
        internalType: "uint64",
        name: "confirmations",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "confirmations",
                type: "uint64"
              },
              {
                internalType: "uint8",
                name: "requiredDVNCount",
                type: "uint8"
              },
              {
                internalType: "uint8",
                name: "optionalDVNCount",
                type: "uint8"
              },
              {
                internalType: "uint8",
                name: "optionalDVNThreshold",
                type: "uint8"
              },
              {
                internalType: "address[]",
                name: "requiredDVNs",
                type: "address[]"
              },
              {
                internalType: "address[]",
                name: "optionalDVNs",
                type: "address[]"
              }
            ],
            internalType: "struct UlnConfig",
            name: "config",
            type: "tuple"
          }
        ],
        internalType: "struct SetDefaultUlnConfigParam[]",
        name: "_params",
        type: "tuple[]"
      }
    ],
    name: "setDefaultUlnConfigs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var ReceiveUlnBase__factory = class {
  static createInterface() {
    return new Interface(_abi44);
  }
  static connect(address, runner) {
    return new Contract(address, _abi44, runner);
  }
};
ReceiveUlnBase__factory.abi = _abi44;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/uln/SendUlnBase__factory.ts
var _abi45 = [
  {
    inputs: [],
    name: "AtLeastOneDVN",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidConfirmations",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidOptionalDVNCount",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidOptionalDVNThreshold",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidRequiredDVNCount",
    type: "error"
  },
  {
    inputs: [],
    name: "Unsorted",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      }
    ],
    name: "UnsupportedEid",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "requiredDVNs",
        type: "address[]"
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "optionalDVNs",
        type: "address[]"
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "fees",
        type: "uint256[]"
      }
    ],
    name: "DVNFeePaid",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "confirmations",
                type: "uint64"
              },
              {
                internalType: "uint8",
                name: "requiredDVNCount",
                type: "uint8"
              },
              {
                internalType: "uint8",
                name: "optionalDVNCount",
                type: "uint8"
              },
              {
                internalType: "uint8",
                name: "optionalDVNThreshold",
                type: "uint8"
              },
              {
                internalType: "address[]",
                name: "requiredDVNs",
                type: "address[]"
              },
              {
                internalType: "address[]",
                name: "optionalDVNs",
                type: "address[]"
              }
            ],
            internalType: "struct UlnConfig",
            name: "config",
            type: "tuple"
          }
        ],
        indexed: false,
        internalType: "struct SetDefaultUlnConfigParam[]",
        name: "params",
        type: "tuple[]"
      }
    ],
    name: "DefaultUlnConfigsSet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oapp",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "confirmations",
            type: "uint64"
          },
          {
            internalType: "uint8",
            name: "requiredDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNThreshold",
            type: "uint8"
          },
          {
            internalType: "address[]",
            name: "requiredDVNs",
            type: "address[]"
          },
          {
            internalType: "address[]",
            name: "optionalDVNs",
            type: "address[]"
          }
        ],
        indexed: false,
        internalType: "struct UlnConfig",
        name: "config",
        type: "tuple"
      }
    ],
    name: "UlnConfigSet",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_remoteEid",
        type: "uint32"
      }
    ],
    name: "getAppUlnConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "confirmations",
            type: "uint64"
          },
          {
            internalType: "uint8",
            name: "requiredDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNThreshold",
            type: "uint8"
          },
          {
            internalType: "address[]",
            name: "requiredDVNs",
            type: "address[]"
          },
          {
            internalType: "address[]",
            name: "optionalDVNs",
            type: "address[]"
          }
        ],
        internalType: "struct UlnConfig",
        name: "",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_remoteEid",
        type: "uint32"
      }
    ],
    name: "getUlnConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "confirmations",
            type: "uint64"
          },
          {
            internalType: "uint8",
            name: "requiredDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNThreshold",
            type: "uint8"
          },
          {
            internalType: "address[]",
            name: "requiredDVNs",
            type: "address[]"
          },
          {
            internalType: "address[]",
            name: "optionalDVNs",
            type: "address[]"
          }
        ],
        internalType: "struct UlnConfig",
        name: "rtnConfig",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "confirmations",
                type: "uint64"
              },
              {
                internalType: "uint8",
                name: "requiredDVNCount",
                type: "uint8"
              },
              {
                internalType: "uint8",
                name: "optionalDVNCount",
                type: "uint8"
              },
              {
                internalType: "uint8",
                name: "optionalDVNThreshold",
                type: "uint8"
              },
              {
                internalType: "address[]",
                name: "requiredDVNs",
                type: "address[]"
              },
              {
                internalType: "address[]",
                name: "optionalDVNs",
                type: "address[]"
              }
            ],
            internalType: "struct UlnConfig",
            name: "config",
            type: "tuple"
          }
        ],
        internalType: "struct SetDefaultUlnConfigParam[]",
        name: "_params",
        type: "tuple[]"
      }
    ],
    name: "setDefaultUlnConfigs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var SendUlnBase__factory = class {
  static createInterface() {
    return new Interface(_abi45);
  }
  static connect(address, runner) {
    return new Contract(address, _abi45, runner);
  }
};
SendUlnBase__factory.abi = _abi45;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/uln/UlnBase__factory.ts
var _abi46 = [
  {
    inputs: [],
    name: "AtLeastOneDVN",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidConfirmations",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidOptionalDVNCount",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidOptionalDVNThreshold",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidRequiredDVNCount",
    type: "error"
  },
  {
    inputs: [],
    name: "Unsorted",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      }
    ],
    name: "UnsupportedEid",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "confirmations",
                type: "uint64"
              },
              {
                internalType: "uint8",
                name: "requiredDVNCount",
                type: "uint8"
              },
              {
                internalType: "uint8",
                name: "optionalDVNCount",
                type: "uint8"
              },
              {
                internalType: "uint8",
                name: "optionalDVNThreshold",
                type: "uint8"
              },
              {
                internalType: "address[]",
                name: "requiredDVNs",
                type: "address[]"
              },
              {
                internalType: "address[]",
                name: "optionalDVNs",
                type: "address[]"
              }
            ],
            internalType: "struct UlnConfig",
            name: "config",
            type: "tuple"
          }
        ],
        indexed: false,
        internalType: "struct SetDefaultUlnConfigParam[]",
        name: "params",
        type: "tuple[]"
      }
    ],
    name: "DefaultUlnConfigsSet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oapp",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "confirmations",
            type: "uint64"
          },
          {
            internalType: "uint8",
            name: "requiredDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNThreshold",
            type: "uint8"
          },
          {
            internalType: "address[]",
            name: "requiredDVNs",
            type: "address[]"
          },
          {
            internalType: "address[]",
            name: "optionalDVNs",
            type: "address[]"
          }
        ],
        indexed: false,
        internalType: "struct UlnConfig",
        name: "config",
        type: "tuple"
      }
    ],
    name: "UlnConfigSet",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_remoteEid",
        type: "uint32"
      }
    ],
    name: "getAppUlnConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "confirmations",
            type: "uint64"
          },
          {
            internalType: "uint8",
            name: "requiredDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNThreshold",
            type: "uint8"
          },
          {
            internalType: "address[]",
            name: "requiredDVNs",
            type: "address[]"
          },
          {
            internalType: "address[]",
            name: "optionalDVNs",
            type: "address[]"
          }
        ],
        internalType: "struct UlnConfig",
        name: "",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_remoteEid",
        type: "uint32"
      }
    ],
    name: "getUlnConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "confirmations",
            type: "uint64"
          },
          {
            internalType: "uint8",
            name: "requiredDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNCount",
            type: "uint8"
          },
          {
            internalType: "uint8",
            name: "optionalDVNThreshold",
            type: "uint8"
          },
          {
            internalType: "address[]",
            name: "requiredDVNs",
            type: "address[]"
          },
          {
            internalType: "address[]",
            name: "optionalDVNs",
            type: "address[]"
          }
        ],
        internalType: "struct UlnConfig",
        name: "rtnConfig",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "confirmations",
                type: "uint64"
              },
              {
                internalType: "uint8",
                name: "requiredDVNCount",
                type: "uint8"
              },
              {
                internalType: "uint8",
                name: "optionalDVNCount",
                type: "uint8"
              },
              {
                internalType: "uint8",
                name: "optionalDVNThreshold",
                type: "uint8"
              },
              {
                internalType: "address[]",
                name: "requiredDVNs",
                type: "address[]"
              },
              {
                internalType: "address[]",
                name: "optionalDVNs",
                type: "address[]"
              }
            ],
            internalType: "struct UlnConfig",
            name: "config",
            type: "tuple"
          }
        ],
        internalType: "struct SetDefaultUlnConfigParam[]",
        name: "_params",
        type: "tuple[]"
      }
    ],
    name: "setDefaultUlnConfigs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var UlnBase__factory = class {
  static createInterface() {
    return new Interface(_abi46);
  }
  static connect(address, runner) {
    return new Contract(address, _abi46, runner);
  }
};
UlnBase__factory.abi = _abi46;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/upgradeable/index.ts
var upgradeable_exports = {};
__export(upgradeable_exports, {
  WorkerUpgradeable__factory: () => WorkerUpgradeable__factory,
  proxy: () => proxy_exports3
});

// src/typechain/factories/artifacts/contracts/messagelib/contracts/upgradeable/proxy/index.ts
var proxy_exports3 = {};
__export(proxy_exports3, {
  ProxyAdmin__factory: () => ProxyAdmin__factory,
  TransparentUpgradeableProxy__factory: () => TransparentUpgradeableProxy__factory
});

// src/typechain/factories/artifacts/contracts/messagelib/contracts/upgradeable/proxy/ProxyAdmin__factory.ts
var _abi47 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [],
    name: "AdminCallFailed",
    type: "error"
  },
  {
    inputs: [],
    name: "ImplementationCallFailed",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address"
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address"
      }
    ],
    name: "changeProxyAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address"
      }
    ],
    name: "getProxyAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address"
      }
    ],
    name: "getProxyImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address"
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address"
      }
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address"
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      }
    ],
    name: "upgradeAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  }
];
var _bytecode9 = "0x60803461007057601f6108e538819003918201601f19168301916001600160401b038311848410176100755780849260209460405283398101031261007057516001600160a01b0381168103610070576100619061005c3361008b565b61008b565b60405161081290816100d38239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe608060408181526004918236101561001657600080fd5b600090813560e01c908163204e1c7a1461058e57508063715018a6146105105780637eff275e1461046f5780638da5cb5b1461043c5780639623609d1461030057806399a88ec41461024d578063f2fde38b1461012d5763f3b7dead1461007c57600080fd5b3461012a57602060031936011261012a5773ffffffffffffffffffffffffffffffffffffffff908084836100ae610634565b168551907ff851a4400000000000000000000000000000000000000000000000000000000082525afa926100e0610701565b931561010357506100fb836020808096518301019101610731565b169051908152f35b82517f1545a425000000000000000000000000000000000000000000000000000000008152fd5b80fd5b50913461024957602060031936011261024957610148610634565b9061015161075d565b73ffffffffffffffffffffffffffffffffffffffff8092169283156101c6575050600054827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b50918291346102fc57806003193601126102fc57610269610634565b61027161065c565b9061027a61075d565b73ffffffffffffffffffffffffffffffffffffffff809116803b156102f857859283602492865197889586947f3659cfe600000000000000000000000000000000000000000000000000000000865216908401525af19081156102ef57506102df5750f35b6102e89061067f565b61012a5780f35b513d84823e3d90fd5b8580fd5b5050fd5b5082606060031936011261043857610316610634565b9261031f61065c565b9160443567ffffffffffffffff8111610434573660238201121561043457808201359161034b836106e5565b92610358855194856106c2565b808452602092366024838301011161043057818892602460209301838801378501015261038361075d565b73ffffffffffffffffffffffffffffffffffffffff80971696873b1561042c578451957f4f1ef2860000000000000000000000000000000000000000000000000000000087521690850152826024850152815191826044860152855b8381106104185750505082849581606481601f19601f878b85819a860101520116810103019134905af19081156102ef57506102df5750f35b8181018301518682016064015282016103df565b8680fd5b8780fd5b8480fd5b5080fd5b50903461043857816003193601126104385773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b509190346102495780600319360112610249578261048b610634565b61049361065c565b61049b61075d565b73ffffffffffffffffffffffffffffffffffffffff80921690813b1561050c5783602492865197889586947f8f28397000000000000000000000000000000000000000000000000000000000865216908401525af19081156102ef5750610500575080f35b6105099061067f565b80f35b8380fd5b503461012a578060031936011261012a5761052961075d565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b9190503461012a57602060031936011261012a57808473ffffffffffffffffffffffffffffffffffffffff93846105c3610634565b167f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa926105f2610701565b931561060d57506100fb836020808096518301019101610731565b82517f6bce18d7000000000000000000000000000000000000000000000000000000008152fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361065757565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361065757565b67ffffffffffffffff811161069357604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f601f19910116810190811067ffffffffffffffff82111761069357604052565b67ffffffffffffffff811161069357601f01601f191660200190565b3d1561072c573d90610712826106e5565b9161072060405193846106c2565b82523d6000602084013e565b606090565b90816020910312610657575173ffffffffffffffffffffffffffffffffffffffff811681036106575790565b73ffffffffffffffffffffffffffffffffffffffff60005416330361077e57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea2646970667358221220a047ee1bac9b49365e032a3359d42630c12dc8cf5d5f7e25c7c8c941261a2ab664736f6c63430008160033";
var isSuperArgs9 = (xs) => xs.length > 1;
var ProxyAdmin__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs9(args)) {
      super(...args);
    } else {
      super(_abi47, _bytecode9, args[0]);
    }
  }
  getDeployTransaction(initialOwner, overrides) {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  deploy(initialOwner, overrides) {
    return super.deploy(initialOwner, overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi47);
  }
  static connect(address, runner) {
    return new Contract(address, _abi47, runner);
  }
};
ProxyAdmin__factory.bytecode = _bytecode9;
ProxyAdmin__factory.abi = _abi47;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/upgradeable/proxy/TransparentUpgradeableProxy__factory.ts
var _abi48 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address"
      },
      {
        internalType: "address",
        name: "admin_",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes"
      }
    ],
    stateMutability: "payable",
    type: "constructor"
  },
  {
    inputs: [],
    name: "AdminAccessDenied",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address"
      }
    ],
    name: "AdminChanged",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address"
      }
    ],
    name: "BeaconUpgraded",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address"
      }
    ],
    name: "Upgraded",
    type: "event"
  },
  {
    stateMutability: "payable",
    type: "fallback"
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "admin_",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address"
      }
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "implementation_",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address"
      }
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      }
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    stateMutability: "payable",
    type: "receive"
  }
];
var _bytecode10 = "0x60406080815262000d618038038062000018816200030b565b9283398101906060818303126200030657620000348162000347565b916020926200004584840162000347565b8584015190936001600160401b0391908282116200030657019280601f850112156200030657835193620000836200007d866200035c565b6200030b565b948086528786019288828401011162000306578288620000a4930162000378565b823b15620002ac577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b03199081166001600160a01b0386811691821790935590959194600093909290917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8580a2805115801590620002a4575b620001f5575b50505050507fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103937f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f86865493815196818616885216958684820152a18315620001a35750161790555161090a9081620004578239f35b60849086519062461bcd60e51b82526004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b895194606086019081118682101762000290578a52602785527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c89860152660819985a5b195960ca1b8a860152516200027a9493929183918291845af4903d1562000286573d6200026a6200007d826200035c565b90815280938a3d92013e6200039d565b5038808080806200012d565b606092506200039d565b634e487b7160e01b85526041600452602485fd5b508362000127565b865162461bcd60e51b815260048101879052602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200033157604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200030657565b6001600160401b0381116200033157601f01601f191660200190565b60005b8381106200038c5750506000910152565b81810151838201526020016200037b565b91929015620004025750815115620003b3575090565b3b15620003bd5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015620004165750805190602001fd5b6044604051809262461bcd60e51b82526020600483015262000448815180928160248601526020868601910162000378565b601f01601f19168101030190fdfe60806040526004361015610019575b36610485575b610485565b6000803560e01c9081633659cfe61461006c575080634f1ef286146100675780635c60da1b146100625780638f2839701461005d5763f851a4400361000e5761038c565b610246565b6101c5565b610109565b346100de5760206003193601126100de576100856100e1565b73ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610354163314600014610014576100db906100d261041e565b90838252610530565b80f35b80fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361010457565b600080fd5b60406003193601126101045761011d6100e1565b60243567ffffffffffffffff9182821161010457366023830112156101045781600401359283116101045736602484840101116101045773ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103541633146000146100145760006020848060246101b16101ac6101c399610469565b610443565b96828852018387013784010152610670565b005b346101045760006003193601126101045773ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610354163314600014610014577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5460405191168152602090f35b346101045760206003193601126101045761025f6100e1565b73ffffffffffffffffffffffffffffffffffffffff907fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610391808354163314600014610014577f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604084549281519481851686521693846020820152a18115610308577fffffffffffffffffffffffff000000000000000000000000000000000000000016179055005b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b346101045760006003193601126101045773ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61039080825416331460001461001457905460405191168152602090f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051906020820182811067ffffffffffffffff82111761043e57604052565b6103ef565b90601f19601f604051930116820182811067ffffffffffffffff82111761043e57604052565b67ffffffffffffffff811161043e57601f01601f191660200190565b73ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610354163314610506577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15610502573d90f35b3d90fd5b60046040517ff0d4b23e000000000000000000000000000000000000000000000000000000008152fd5b803b156105ec5773ffffffffffffffffffffffffffffffffffffffff81167f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906105e4575b6105cf575050565b6105e1916105db610716565b91610786565b50565b5060006105c7565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b803b156105ec5773ffffffffffffffffffffffffffffffffffffffff81167f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a281511580159061070e576105cf575050565b5060016105c7565b604051906060820182811067ffffffffffffffff82111761043e57604052602782527f206661696c6564000000000000000000000000000000000000000000000000006040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b6000806107bb9493602081519101845af43d156107be573d916107ab6101ac84610469565b9283523d6000602085013e61082b565b90565b60609161082b565b156107cd57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b9192901561084b575081511561083f575090565b6107bb903b15156107c6565b82519091501561085e5750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b8481106108bd57505050601f19601f836000604480968601015201168101030190fd5b81810183015186820160440152859350820161089a56fea26469706673582212204369c7a6b6981d47c0bf707682324593438d6c9aa21b384f6e20a51134b1d1fd64736f6c63430008160033";
var isSuperArgs10 = (xs) => xs.length > 1;
var TransparentUpgradeableProxy__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs10(args)) {
      super(...args);
    } else {
      super(_abi48, _bytecode10, args[0]);
    }
  }
  getDeployTransaction(_logic, admin_, _data3, overrides) {
    return super.getDeployTransaction(_logic, admin_, _data3, overrides || {});
  }
  deploy(_logic, admin_, _data3, overrides) {
    return super.deploy(_logic, admin_, _data3, overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi48);
  }
  static connect(address, runner) {
    return new Contract(
      address,
      _abi48,
      runner
    );
  }
};
TransparentUpgradeableProxy__factory.bytecode = _bytecode10;
TransparentUpgradeableProxy__factory.abi = _abi48;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/upgradeable/WorkerUpgradeable__factory.ts
var _abi49 = [
  {
    inputs: [],
    name: "NotAllowed",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyMessageLib",
    type: "error"
  },
  {
    inputs: [],
    name: "RoleRenouncingDisabled",
    type: "error"
  },
  {
    inputs: [],
    name: "ToAddressIsZero",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256"
      }
    ],
    name: "TransferNativeFailed",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8"
      }
    ],
    name: "Initialized",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "Paused",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32"
      }
    ],
    name: "RoleAdminChanged",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address"
      }
    ],
    name: "RoleGranted",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address"
      }
    ],
    name: "RoleRevoked",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "multiplierBps",
        type: "uint16"
      }
    ],
    name: "SetDefaultMultiplierBps",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "priceFeed",
        type: "address"
      }
    ],
    name: "SetPriceFeed",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "dstEid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "uint8[]",
        name: "optionTypes",
        type: "uint8[]"
      }
    ],
    name: "SetSupportedOptionTypes",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "workerLib",
        type: "address"
      }
    ],
    name: "SetWorkerLib",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "Unpaused",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lib",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "Withdraw",
    type: "event"
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "allowlistSize",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "defaultMultiplierBps",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      }
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "getSupportedOptionTypes",
    outputs: [
      {
        internalType: "uint8[]",
        name: "",
        type: "uint8[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      }
    ],
    name: "hasAcl",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "priceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_multiplierBps",
        type: "uint16"
      }
    ],
    name: "setDefaultMultiplierBps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_paused",
        type: "bool"
      }
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address"
      }
    ],
    name: "setPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "uint8[]",
        name: "_optionTypes",
        type: "uint8[]"
      }
    ],
    name: "setSupportedOptionTypes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_workerFeeLib",
        type: "address"
      }
    ],
    name: "setWorkerFeeLib",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "workerFeeLib",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var WorkerUpgradeable__factory = class {
  static createInterface() {
    return new Interface(_abi49);
  }
  static connect(address, runner) {
    return new Contract(address, _abi49, runner);
  }
};
WorkerUpgradeable__factory.abi = _abi49;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/Executor__factory.ts
var _abi50 = [
  {
    inputs: [],
    name: "NotAllowed",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyMessageLib",
    type: "error"
  },
  {
    inputs: [],
    name: "RoleRenouncingDisabled",
    type: "error"
  },
  {
    inputs: [],
    name: "ToAddressIsZero",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256"
      }
    ],
    name: "TransferNativeFailed",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "uint64",
            name: "baseGas",
            type: "uint64"
          },
          {
            internalType: "uint16",
            name: "multiplierBps",
            type: "uint16"
          },
          {
            internalType: "uint128",
            name: "floorMarginUSD",
            type: "uint128"
          },
          {
            internalType: "uint128",
            name: "nativeDropCap",
            type: "uint128"
          }
        ],
        indexed: false,
        internalType: "struct IExecutor.DstConfigParam[]",
        name: "params",
        type: "tuple[]"
      }
    ],
    name: "DstConfigSet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8"
      }
    ],
    name: "Initialized",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        indexed: false,
        internalType: "struct Origin",
        name: "origin",
        type: "tuple"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "dstEid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "oapp",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "NativeDropFailed",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        indexed: false,
        internalType: "struct Origin",
        name: "origin",
        type: "tuple"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "dstEid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "oapp",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "NativeDropSucceeded",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "Paused",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32"
      }
    ],
    name: "RoleAdminChanged",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address"
      }
    ],
    name: "RoleGranted",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address"
      }
    ],
    name: "RoleRevoked",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "multiplierBps",
        type: "uint16"
      }
    ],
    name: "SetDefaultMultiplierBps",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "priceFeed",
        type: "address"
      }
    ],
    name: "SetPriceFeed",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "dstEid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "uint8[]",
        name: "optionTypes",
        type: "uint8[]"
      }
    ],
    name: "SetSupportedOptionTypes",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "workerLib",
        type: "address"
      }
    ],
    name: "SetWorkerLib",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "Unpaused",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lib",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "Withdraw",
    type: "event"
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "allowlistSize",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_calldataSize",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "assignJob",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      }
    ],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [],
    name: "defaultMultiplierBps",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "dstEid",
        type: "uint32"
      }
    ],
    name: "dstConfig",
    outputs: [
      {
        internalType: "uint64",
        name: "baseGas",
        type: "uint64"
      },
      {
        internalType: "uint16",
        name: "multiplierBps",
        type: "uint16"
      },
      {
        internalType: "uint128",
        name: "floorMarginUSD",
        type: "uint128"
      },
      {
        internalType: "uint128",
        name: "nativeDropCap",
        type: "uint128"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "endpoint",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_calldataSize",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      }
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "getSupportedOptionTypes",
    outputs: [
      {
        internalType: "uint8[]",
        name: "",
        type: "uint8[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      }
    ],
    name: "hasAcl",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_endpoint",
        type: "address"
      },
      {
        internalType: "address[]",
        name: "_messageLibs",
        type: "address[]"
      },
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address"
      },
      {
        internalType: "address",
        name: "_roleAdmin",
        type: "address"
      },
      {
        internalType: "address[]",
        name: "_admins",
        type: "address[]"
      }
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "localEid",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        internalType: "struct Origin",
        name: "_origin",
        type: "tuple"
      },
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256"
          }
        ],
        internalType: "struct IExecutor.NativeDropParams",
        name: "_nativeDropParams",
        type: "tuple"
      }
    ],
    name: "nativeDrop",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256"
          }
        ],
        internalType: "struct IExecutor.NativeDropParams",
        name: "_nativeDropParams",
        type: "tuple"
      },
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address"
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "srcEid",
                type: "uint32"
              },
              {
                internalType: "bytes32",
                name: "sender",
                type: "bytes32"
              },
              {
                internalType: "uint64",
                name: "nonce",
                type: "uint64"
              }
            ],
            internalType: "struct Origin",
            name: "origin",
            type: "tuple"
          },
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32"
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes"
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes"
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256"
          }
        ],
        internalType: "struct IExecutor.ExecutionParams",
        name: "_executionParams",
        type: "tuple"
      }
    ],
    name: "nativeDropAndExecute302",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "priceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_multiplierBps",
        type: "uint16"
      }
    ],
    name: "setDefaultMultiplierBps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "uint64",
            name: "baseGas",
            type: "uint64"
          },
          {
            internalType: "uint16",
            name: "multiplierBps",
            type: "uint16"
          },
          {
            internalType: "uint128",
            name: "floorMarginUSD",
            type: "uint128"
          },
          {
            internalType: "uint128",
            name: "nativeDropCap",
            type: "uint128"
          }
        ],
        internalType: "struct IExecutor.DstConfigParam[]",
        name: "_params",
        type: "tuple[]"
      }
    ],
    name: "setDstConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_paused",
        type: "bool"
      }
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address"
      }
    ],
    name: "setPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "uint8[]",
        name: "_optionTypes",
        type: "uint8[]"
      }
    ],
    name: "setSupportedOptionTypes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_workerFeeLib",
        type: "address"
      }
    ],
    name: "setWorkerFeeLib",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "workerFeeLib",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var _bytecode11 = "0x608080604052346100165761331c908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b60009260e08435811c918262bf2e801461272b5750816301e33667146124d057816301ffc9a71461242f5781631095b6d7146122c557816316c38b3c146120a4578163248a9ca31461207957816326e67a3714611a515781632de1137614611a215781632f2ff15d1461189157816336568abe1461184e5781635c975abb146118295781635e280f11146117ff57816368974a93146116ea578163709eb664146115f1578163717e8a42146112a0578163724e78da1461121c57816372607537146111f2578163741bef1a146111c957816391d14854146111825781639e9449651461110a578163a217fddf146110ee578163acdbcca514610e17578163c2175d281461083a578163c358de0a14610795578163c416aa511461076c578163c7b2370b146106e8578163cd88b90314610543578163d168faec1461032157508063d2ae2104146102f15763d547741f1461016e57600080fd5b346102ed57816003193601126102ed57803591610189612763565b91838552602090606582526101a360018488200154612dc3565b7f74845de37cfabd357633214b47fa91ccd19b05b7c5a08ac22c187f811fb62bca8514806102c6575b610246575b50838552606581526001600160a01b0382862093169283600052815260ff8260002054166101fd578480f35b8385526065815281852090836000525260002060ff19815416905533917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b8480a4388080808480f35b60c9549067ffffffffffffffff8260a01c169081156102b357507bffffffffffffffff00000000000000000000000000000000000000006000197fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff920160a01b1691161760c955386101d1565b876011602492634e487b7160e01b835252fd5b50848652606582528286206001600160a01b038516600052825260ff8360002054166101cc565b8280fd5b50503461031d578160031936011261031d5760209067ffffffffffffffff60c95460a01c169051908152f35b5080fd5b84915083600319918236016080811261053b5760601361053f5760643567ffffffffffffffff811161053b578086019061010085823603011261053757610366612bc6565b61036e612ee1565b6024810161013063ffffffff815460a01c169661038a85612b2a565b978a356001600160a01b03998a821682036105325760243592826000808080888098604435f16103b8612f36565b506104f8577f80f845dbaecd024dbeb255af88f2c72c926234fa09f36adcba5d7383b73d3832936103ef918d519485948b86612fdc565b0390a15b3403913483116104e5579961042b898b9c54169261041088612b2a565b9761041e60a4890182612b3e565b93909160c48a0190612b3e565b919093863b156104e1578e9b8d519e8f9c8d9b8c997f0c0c389e000000000000000000000000000000000000000000000000000000008b528a0161046e91612b8f565b16606488015260848b0135608488015260a487015260e486019061049192612a33565b918483030160c48501526104a492612a33565b039360e40135f19081156104d857506104c1575b50600160fd5580f35b6104ca90612844565b6104d55780826104b8565b80fd5b513d84823e3d90fd5b8e80fd5b60248a60118d634e487b7160e01b835252fd5b7f5c63dca53e1b3ae83df72c0d3979318a89fe6c81f96d4675487795d96cfef3ab9361052a918d519485948b86612fdc565b0390a16103f3565b600080fd5b8580fd5b8480fd5b8380fd5b505090346102ed57806003193601126102ed5761055e6127ae565b60243567ffffffffffffffff9182821161053757366023830112156105375781850135928311610537573660248460051b840101116105375763ffffffff906105a5612bc6565b16855260209260cb84528520936801000000000000000083116106d557508354828555808310610680575b50602401928452818420908060051c92855b84811061064d5750601f19821680830392036105fc578580f35b93908594865b8281106106185750505050015538808080808580f35b90919295826106426001928461062d8b612b1c565b919060ff809160031b9316831b921b19161790565b970193929101610602565b86875b8381106106645750848201556001016105e2565b9690836106776001928a61062d86612b1c565b92019701610650565b848652838620601f80850160051c8201920160051c0190601f8416806106bb575b505b8181106106b057506105d0565b8681556001016106a3565b6000199081830191825491880360031b1c169055386106a1565b856041602492634e487b7160e01b835252fd5b5050503461031d57602060031936011261031d5760207f1399be28223800f8669b3ba5f8721d9fc16fc4e8d0bbf98378791c8c5a3015e0916001600160a01b0361073061274d565b610738612bc6565b1690817fffffffffffffffffffffffff000000000000000000000000000000000000000060c954161760c95551908152a180f35b5050503461031d578160031936011261031d576020906001600160a01b0360c954169051908152f35b929190503461053f57602060031936011261053f57359061ffff821690818303610532577f7af0ac740036ffb1c97b03697859d729e80a44ae5030543d64971c313565ab4d937fffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff7dffff00000000000000000000000000000000000000000000000000000000602095610826612bc6565b60c954931b1691161760c95551908152a180f35b8285853461031d5760a060031936011261031d5761085661274d565b9267ffffffffffffffff9060243582811161053b576108789036908301612913565b94604435906001600160a01b0390818316809303610532576064359482861680960361053257608435908111610b48576108b59036908601612913565b97827fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103818154168015600014610e095750555b875460ff91828260081c161597888099610dfd575b8015610de7575b15610d7e57918a9b9189936109758660019e8f9560ff1998878a8316178355610d50575b505460081c1661093781613068565b61094081613068565b8460fd5561094d81613068565b61095681613068565b61095f81613068565b61096881613068565b8660975416609755613068565b7d2ee0000000000000000000000000000000000000000000000000000000007fffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff60c954161760c9557fffffffffffffffffffffffff0000000000000000000000000000000000000000988960ca54161760ca5580610ce3575b5090939291908c855b610c1a575b5050838c905b610b5e575b505050505016610130928184549384161784556020865180927f416ecebf00000000000000000000000000000000000000000000000000000000825281855afa908115610b54578891610af9575b5077ffffffff00000000000000000000000000000000000000007fffffffffffffffff0000000000000000000000000000000000000000000000009160a01b16921617179055610aa3578280f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498916020917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff855416855551908152a181808280f35b90506020813d602011610b4c575b81610b14602093836128a6565b81010312610b48575163ffffffff81168103610b485777ffffffff0000000000000000000000000000000000000000610a55565b8780fd5b3d9150610b07565b86513d8a823e3d90fd5b8151811015610c15578087610b74879385612af2565b51167fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177590816000528d606590602091808352816000208460005283528982600020541615610bc9575b50505050500184610a02565b8460005282526000209082600052528d600020848782541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d600080a48e80808e81610bbd565b610a07565b81959293949551811015610cd957808c89610c36869486612af2565b51167f724aface199fe5bed93ae8508474576a9adf3dc443b2c451842a2242919f19de91826000526065602090808252826000208460005282528b83600020541615610c8d575b50505050500182959493926109f7565b84600052815281600020908360005252600020848982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d600080a48f808e8180610c7d565b94939291946109fc565b6000805260656020528b60002081600052602052858c60002054166109ee576000805260656020528b600020816000526020528b6000208386825416179055339060007f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a48d6109ee565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661010117815538610928565b60848860208c519162461bcd60e51b8352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b1580156109045750600184841614610904565b506001848416106108fd565b9150503303156108e8578780fd5b505082346104d5576020918260031936011261031d5780359267ffffffffffffffff928385116104d557366023860112156104d5578483013595602495610e5d886128c9565b90610e6a835192836128a6565b8882528482019081602460a0809c02830101913683116110ea57602401905b82821061107657505050610e9b612bc6565b835b8251811015610fc75787610eb18285612af2565b5181888201511661ffff87830151166fffffffffffffffffffffffffffffffff9260609084828201511691608094868684015116978c519687019087821090821117610fb1578c5285528c85019384528a850192835284019586525163ffffffff168a5261012f8b528c898b20935116835492518a1b69ffff000000000000000016915160501b79ffffffffffffffffffffffffffffffff0000000000000000000016927fffffffffffff000000000000000000000000000000000000000000000000000016171717815560010191511681547fffffffffffffffffffffffffffffffff0000000000000000000000000000000016179055600101610e9d565b50508f60418f634e487b7160e01b600052526000fd5b50908690858a948051958287019383885251809452818701959488925b85841061101557897f3fd3f9275410b39824c12e5dfcf63fb332698a5eee3b09895aaaaa9e403bd4818a8a038ba180f35b8651805163ffffffff168952808601518316898701528082015161ffff16898301526060808201516fffffffffffffffffffffffffffffffff908116918b019190915260809182015116908901529682019695840195600190930192610fe4565b8b823603126110ea5785519061108b8261286e565b611094836127c1565b82526110a18984016128e1565b89830152868301359061ffff8216820361053257828a928f948a015260606110ca8187016128f6565b9082015260806110db8187016128f6565b90820152815201910190610e89565b8680fd5b5050503461031d578160031936011261031d5751908152602090f35b5050503461031d57602060031936011261031d5760018160809363ffffffff6111316127ae565b16815261012f60205220918254926fffffffffffffffffffffffffffffffff9283910154169181519367ffffffffffffffff8116855261ffff81841c16602086015260501c16908301526060820152f35b5050346102ed57816003193601126102ed576001600160a01b03826020946111a8612763565b9335815260658652209116600052825260ff81600020541690519015158152f35b5050503461031d578160031936011261031d576020906001600160a01b0360ca54169051908152f35b5050503461031d578160031936011261031d5760209063ffffffff6101305460a01c169051908152f35b5050503461031d57602060031936011261031d5760207ff724a45d041687842411f2b977ef22ab8f43c8f1104f4592b42a00f9b34a643d916001600160a01b0361126461274d565b61126c612bc6565b1690817fffffffffffffffffffffffff000000000000000000000000000000000000000060ca54161760ca5551908152a180f35b8484846112ac366127d2565b937f724aface199fe5bed93ae8508474576a9adf3dc443b2c451842a2242919f19de959195988960005260209960658b5288600020336000528b5260ff8960002054161561140c57506112fe85612983565b156113e45792899594928661ffff8b9463ffffffff976001600160a01b03958d878060ca54169a60c9549c8d9684519d8e6113388161286e565b521680988d015216908a015260608901521c166080860152835261012f8752611391898420968a51998a98899788957ff43bcfc50000000000000000000000000000000000000000000000000000000087528601612a54565b0393165af19283156113d957926113aa575b5051908152f35b9091508281813d83116113d2575b6113c281836128a6565b81010312610532575190836113a3565b503d6113b8565b8251903d90823e3d90fd5b8288517f3d693ada000000000000000000000000000000000000000000000000000000008152fd5b838b8a9261141933613139565b8451906114258261288a565b604282528382019260603685378251156115dc57603084538251600190600110156115c757607860218501536041905b80821161154d57505061150b576115079386936114f3936114e46048946114af9a519a857f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008d9788015282519283916037890191016130d9565b8401917f206973206d697373696e6720726f6c65200000000000000000000000000000006037840152518093868401906130d9565b010360288101875201856128a6565b5192839262461bcd60e51b845283016130fc565b0390fd5b50505080606493519262461bcd60e51b845283015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f811660108110156115b2577f3031323334353637383961626364656600000000000000000000000000000000901a6115898487613128565b53871c91801561159d576000190190611455565b601188634e487b7160e01b6000525260246000fd5b603289634e487b7160e01b6000525260246000fd5b603287634e487b7160e01b6000525260246000fd5b603286634e487b7160e01b6000525260246000fd5b84848492346102ed57611603366127d2565b9491909261161081612983565b156116c25761161d613018565b6001600160a01b039889918260ca54169360c9549586918b51966116408861286e565b875260209d63ffffffff8f9b1694858c8a0152168c88015260608701521c61ffff166080850152895261012f8652878920928851978896879586947f371c3a8e0000000000000000000000000000000000000000000000000000000086528501936116aa94612a54565b0392165afa9283156113d957926113aa575051908152f35b8887517f3d693ada000000000000000000000000000000000000000000000000000000008152fd5b505050600319360161010081126102ed5760601361031d5760643563ffffffff8116810361053257608435906001600160a01b0380831683036105325760607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5c36011261053b57611759612bc6565b611761612ee1565b60a43590811681036105325760c435936000808080888660e435f1611784612f36565b506117c657936117ba917f80f845dbaecd024dbeb255af88f2c72c926234fa09f36adcba5d7383b73d3832955194859485612f76565b0390a15b600160fd5580f35b936117f7917f5c63dca53e1b3ae83df72c0d3979318a89fe6c81f96d4675487795d96cfef3ab955194859485612f76565b0390a16117be565b5050503461031d578160031936011261031d576020906001600160a01b0361013054169051908152f35b5050503461031d578160031936011261031d5760209060ff6097541690519015158152f35b505091346104d557816003193601126104d5575061186a612763565b50517fcebd140e000000000000000000000000000000000000000000000000000000008152fd5b5050346102ed57816003193601126102ed578035916118ae612763565b91838552602090606582526118c860018488200154612dc3565b7f74845de37cfabd357633214b47fa91ccd19b05b7c5a08ac22c187f811fb62bca8514806119f7575b611974575b5083600052606581526001600160a01b038260002093169283600052815260ff82600020541615611925578480f35b836000526065815281600020908360005252600020600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d600080a4388080808480f35b60c9549067ffffffffffffffff90818360a01c169182146119e257507bffffffffffffffff000000000000000000000000000000000000000060017fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff920160a01b1691161760c955386118f6565b601190634e487b7160e01b6000525260246000fd5b508460005260658252826000206001600160a01b038516600052825260ff836000205416156118f1565b5050503461031d57602060031936011261031d57602090611a48611a4361274d565b612983565b90519015158152f35b8484913461031d576020806003193601126102ed5780919263ffffffff611a766127ae565b16815260cb825284812093855190819485918188549485815201908198865282862094865b81601f820110611ee85784611bbe975493838310611ed3575b838310611ebb575b838310611ea3575b838310611e8b575b838310611e74575b838310611e5c575b838310611e44575b838310611e2c575b8d848410611e14575b50838310611dfc575b838310611de4575b838310611dcc575b838310611db4575b838310611d9c575b838310611d84575b838310611d6c575b838310611d54575b838310611d3c575b838310611d24575b838310611d0c575b838310611cf4575b838310611cdc575b838310611cc4575b838310611cac575b838310611c94575b838310611c7c575b838310611c64575b838310611c4c575b838310611c36575b50828210611c20575b828210611c0a575b5010611bfc575b50905096959492939603826128a6565b83519485948186019282875251809352850193925b828110611be257505050500390f35b835160ff1685528695509381019392810192600101611bd3565b60f81c815201849089611bae565b6001919460ff8560f01c16815201930184611ba7565b6001919460ff8560e81c16815201930184611b9f565b9460ff85600194971c168152019301848d611b96565b91948160019160ff8760d81c16815201950191611b8e565b91948160019160ff8760d01c16815201950191611b86565b91948160019160ff8760c81c16815201950191611b7e565b91948160019160ff8760c01c16815201950191611b76565b91948160019160ff8760b81c16815201950191611b6e565b91948160019160ff8760b01c16815201950191611b66565b91948160019160ff8760a81c16815201950191611b5e565b91948160019160ff8760a01c16815201950191611b56565b91948160019160ff8760981c16815201950191611b4e565b91948160019160ff8760901c16815201950191611b46565b91948160019160ff8760881c16815201950191611b3e565b91948160019160ff8760801c16815201950191611b36565b91948160019160ff8760781c16815201950191611b2e565b91948160019160ff8760701c16815201950191611b26565b91948160019160ff8760681c16815201950191611b1e565b91948160019160ff8760601c16815201950191611b16565b91948160019160ff8760581c16815201950191611b0e565b91948160019160ff8760501c16815201950191611b06565b91948160019160ff8760481c16815201950191611afe565b600191939660ff8785931c168152019501918d611af5565b91948160019160ff8760381c16815201950191611aec565b91948160019160ff8760301c16815201950191611ae4565b91948160019160ff8760281c16815201950191611adc565b91948160019160ff87831c16815201950191611ad4565b91948160019160ff8760181c16815201950191611acc565b91948160019160ff8760101c16815201950191611ac4565b91948160019160ff8760081c16815201950191611abc565b91948160019160ff8716815201950191611ab4565b9260019194929550610400908c88548091818a60ff82819594828096168952828260081c168c8a0152828260101c16818a015282828d82828d606090838360181c168282015283836080961c1685820152838360a099828260281c168b85015260c09d8e848460301c1690860152838360381c16908501521c16610100820152838360481c16610120820152838360501c16610140820152610160848460581c169101521c166101808d0152828260681c166101a08d0152828260701c166101c08d0152828260781c166101e08d01521c166102008a0152828260881c166102208a0152828260901c166102408a0152828260981c166102608a01521c16610280870152828260a81c166102a0870152828260b01c166102c0870152828260b81c166102e08701521c16610300840152808260c81c16610320840152808260d01c16610340840152808260d81c1661036084015280828a1c16610380840152808260e81c166103a08401528160f01c166103c083015260f81c6103e082015201950191019286928894959295611a9b565b5050346102ed5760206003193601126102ed5781602093600192358152606585522001549051908152f35b8285853461031d57602090816003193601126102ed578335801515810361053f5760008052606583528160002033600052835260ff826000205416156121ab571561212a577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258929350612115613018565b600160ff19609754161760975551338152a180f35b6097549360ff85161561216a575060ff197f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa93941660975551338152a180f35b82606492519162461bcd60e51b8352820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152fd5b5083826121b733613139565b83516000916121c58261288a565b604282528382019260603685378251156122b2576030845382516001906001101561229f57607860218501536041905b80821161224f57505061150b576115079386936114f3936114e46048946114af9a519a857f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008d9788015282519283916037890191016130d9565b9091600f811660108110156115b2577f3031323334353637383961626364656600000000000000000000000000000000901a61228b8487613128565b53871c91801561159d5760001901906121f5565b602482603289634e487b7160e01b835252fd5b80603287634e487b7160e01b6024945252fd5b505090346102ed576122d636612779565b9291906122e1612bc6565b7f724aface199fe5bed93ae8508474576a9adf3dc443b2c451842a2242919f19de86526065602052828620946001600160a01b038093169586885260205260ff8488205416156124085786863b156104d55784517ffd9be5220000000000000000000000000000000000000000000000000000000081526001600160a01b0384169281019283526020830187905291829081906040010381838a5af180156123fe576123c0575b5082519485521660208401528201527f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb90606090a180f35b917f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb959391966123f260609694612844565b96919395509193612388565b84513d89823e3d90fd5b83517f42cbfad1000000000000000000000000000000000000000000000000000000008152fd5b5050346102ed5760206003193601126102ed5735907fffffffff0000000000000000000000000000000000000000000000000000000082168092036102ed57602092507f7965db0b0000000000000000000000000000000000000000000000000000000082149182156124a6575b50519015158152f35b7f01ffc9a7000000000000000000000000000000000000000000000000000000001491503861249d565b5050346102ed576124e036612779565b916124ec949194612bc6565b6001600160a01b039081168061258c5750841615612564578480808085885af1612514612f36565b5015612521575050505080f35b517f2c024f920000000000000000000000000000000000000000000000000000000081526001600160a01b03909316918301918252602082015281906040010390fd5b9050517f32fa6a1d000000000000000000000000000000000000000000000000000000008152fd5b90859293949516156127035782517fa9059cbb0000000000000000000000000000000000000000000000000000000060208083019182526001600160a01b0394909416602483015260448083019690965294815291936125ed6064846128a6565b83519284840184811067ffffffffffffffff8211176126f05785528584527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564868501525161264d9392918891829182855af1612647612f36565b91613256565b80518381159182156126d0575b50509050156126695750505080f35b60849350519162461bcd60e51b8352820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b838092935001031261053b57820151801515810361053b5780833861265a565b60248960418a634e487b7160e01b835252fd5b8483517f32fa6a1d000000000000000000000000000000000000000000000000000000008152fd5b85346104d557806003193601126104d5575061ffff60209260c954901c168152f35b600435906001600160a01b038216820361053257565b602435906001600160a01b038216820361053257565b6003196060910112610532576001600160a01b0390600435828116810361053257916024359081168103610532579060443590565b6004359063ffffffff8216820361053257565b359063ffffffff8216820361053257565b60806003198201126105325760043563ffffffff8116810361053257916024356001600160a01b038116810361053257916044359160643567ffffffffffffffff9283821161053257806023830112156105325781600401359384116105325760248483010111610532576024019190565b67ffffffffffffffff811161285857604052565b634e487b7160e01b600052604160045260246000fd5b60a0810190811067ffffffffffffffff82111761285857604052565b6080810190811067ffffffffffffffff82111761285857604052565b90601f601f19910116810190811067ffffffffffffffff82111761285857604052565b67ffffffffffffffff81116128585760051b60200190565b359067ffffffffffffffff8216820361053257565b35906fffffffffffffffffffffffffffffffff8216820361053257565b9080601f8301121561053257602090823561292d816128c9565b9361293b60405195866128a6565b81855260208086019260051b82010192831161053257602001905b828210612964575050505090565b81356001600160a01b0381168103610532578152908301908301612956565b6001600160a01b031660008181527f0f6a9529577ef7bf1cbc8fccda1cc3c881f755c7e92e34c7c4deac1fa3c1c791602052604081205490919060ff16156129c9575090565b67ffffffffffffffff60c95460a01c16159081156129f1575b50156129ee5750600190565b90565b90507f74845de37cfabd357633214b47fa91ccd19b05b7c5a08ac22c187f811fb62bca825260656020526040822090825260205260ff604082205416386129e2565b601f8260209493601f19938186528686013760008582860101520116010190565b6129ee949260016080610140946001600160a01b0380825116865263ffffffff602083015116602087015260408201511660408601526060810151606086015201519161ffff809316608085015280549267ffffffffffffffff841660a08601528360401c1660c08501526fffffffffffffffffffffffffffffffff809360501c1660e0850152015416610100820152816101208201520191612a33565b8051821015612b065760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b3560ff811681036105325790565b356001600160a01b03811681036105325790565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610532570180359067ffffffffffffffff82116105325760200191813603831361053257565b67ffffffffffffffff612bc06040809363ffffffff612bad826127c1565b16865260208101356020870152016128e1565b16910152565b3360009081527f2c01dc0041dfb6d4238a91e5a638996136aed16f837d5beb45610732cf9bf4b060209081526040808320549092907fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217759060ff1615612c2b5750505050565b612c3433613139565b845191612c408361288a565b60428352848301936060368637835115612daf576030855383519060019160011015612daf5790607860218601536041915b818311612d3457505050612cf2576114af938593612cdc93612ccd604894611507995198857f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008b9788015282519283916037890191016130d9565b010360288101855201836128a6565b5191829162461bcd60e51b8352600483016130fc565b60648486519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f81166010811015612d9b577f3031323334353637383961626364656600000000000000000000000000000000901a612d718588613128565b5360041c928015612d8757600019019190612c72565b602482634e487b7160e01b81526011600452fd5b602483634e487b7160e01b81526032600452fd5b80634e487b7160e01b602492526032600452fd5b600081815260209060658252604092838220338352835260ff848320541615612dec5750505050565b612df533613139565b845191612e018361288a565b60428352848301936060368637835115612daf576030855383519060019160011015612daf5790607860218601536041915b818311612e8e57505050612cf2576114af938593612cdc93612ccd604894611507995198857f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008b9788015282519283916037890191016130d9565b909192600f81166010811015612d9b577f3031323334353637383961626364656600000000000000000000000000000000901a612ecb8588613128565b5360041c928015612d8757600019019190612e33565b600260fd5414612ef257600260fd55565b606460405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b3d15612f71573d9067ffffffffffffffff82116128585760405191612f656020601f19601f84011601846128a6565b82523d6000602084013e565b606090565b90919493929460e082019560043563ffffffff9081811680910361053257845260243560208501526044359467ffffffffffffffff86168096036105325760c09560408601521660608401526001600160a01b0380921660808401521660a08201520152565b919363ffffffff60c09492979695612ff88560e081019a612b8f565b1660608401526001600160a01b0380921660808401521660a08201520152565b60ff6097541661302457565b606460405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152fd5b1561306f57565b608460405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fd5b60005b8381106130ec5750506000910152565b81810151838201526020016130dc565b601f19601f6040936020845261312181518092816020880152602088880191016130d9565b0116010190565b908151811015612b06570160200190565b604051906060820182811067ffffffffffffffff82111761285857604052602a8252602082016040368237825115612b065760309053815160019060011015612b0657607860218401536029905b8082116131db5750506131975790565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f81166010811015613241577f3031323334353637383961626364656600000000000000000000000000000000901a6132178486613128565b5360041c91801561322c576000190190613187565b60246000634e487b7160e01b81526011600452fd5b60246000634e487b7160e01b81526032600452fd5b919290156132b7575081511561326a575090565b3b156132735790565b606460405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b8251909150156132ca5750805190602001fd5b6115079060405191829162461bcd60e51b8352600483016130fc56fea26469706673582212205325d3aab047a60be3e7b034829590f991ccf721ef8f48dcb3c06f71f40fb66a64736f6c63430008160033";
var isSuperArgs11 = (xs) => xs.length > 1;
var Executor__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs11(args)) {
      super(...args);
    } else {
      super(_abi50, _bytecode11, args[0]);
    }
  }
  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }
  deploy(overrides) {
    return super.deploy(overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi50);
  }
  static connect(address, runner) {
    return new Contract(address, _abi50, runner);
  }
};
Executor__factory.bytecode = _bytecode11;
Executor__factory.abi = _abi50;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/ExecutorFeeLib__factory.ts
var _abi51 = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nativeDecimalsRate",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cursor",
        type: "uint256"
      }
    ],
    name: "InvalidExecutorOptions",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidLzComposeOption",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidLzReceiveOption",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidNativeDropOption",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "cap",
        type: "uint256"
      }
    ],
    name: "NativeDropAmountExceedsCap",
    type: "error"
  },
  {
    inputs: [],
    name: "NoOptions",
    type: "error"
  },
  {
    inputs: [],
    name: "ToAddressIsZero",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256"
      }
    ],
    name: "TransferNativeFailed",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "optionType",
        type: "uint8"
      }
    ],
    name: "UnsupportedOptionType",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "priceFeed",
            type: "address"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "calldataSize",
            type: "uint256"
          },
          {
            internalType: "uint16",
            name: "defaultMultiplierBps",
            type: "uint16"
          }
        ],
        internalType: "struct IExecutorFeeLib.FeeParams",
        name: "_params",
        type: "tuple"
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "baseGas",
            type: "uint64"
          },
          {
            internalType: "uint16",
            name: "multiplierBps",
            type: "uint16"
          },
          {
            internalType: "uint128",
            name: "floorMarginUSD",
            type: "uint128"
          },
          {
            internalType: "uint128",
            name: "nativeDropCap",
            type: "uint128"
          }
        ],
        internalType: "struct IExecutor.DstConfig",
        name: "_dstConfig",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "priceFeed",
            type: "address"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "calldataSize",
            type: "uint256"
          },
          {
            internalType: "uint16",
            name: "defaultMultiplierBps",
            type: "uint16"
          }
        ],
        internalType: "struct IExecutorFeeLib.FeeParams",
        name: "_params",
        type: "tuple"
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "baseGas",
            type: "uint64"
          },
          {
            internalType: "uint16",
            name: "multiplierBps",
            type: "uint16"
          },
          {
            internalType: "uint128",
            name: "floorMarginUSD",
            type: "uint128"
          },
          {
            internalType: "uint128",
            name: "nativeDropCap",
            type: "uint128"
          }
        ],
        internalType: "struct IExecutor.DstConfig",
        name: "_dstConfig",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "getFeeOnSend",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      }
    ],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    stateMutability: "payable",
    type: "receive"
  }
];
var _bytecode12 = "0x60a0346100a057601f61123f38819003918201601f19168301916001600160401b038311848410176100a5578084926020946040528339810103126100a0575160008054336001600160a01b0319821681178355604051939290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a360805261118390816100bc823960805181610f2a0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60406080815260049081361015610020575b5050361561001e57600080fd5b005b600091823560e01c806301e33667146104c1578063371c3a8e146103af578063715018a61461032e5780638da5cb5b146102f7578063f2fde38b146101db5763f43bcfc51461006f5750610011565b610078366107da565b92909391608060208301936100c163ffffffff9661753088885116109867ffffffffffffffff865116996fffffffffffffffffffffffffffffffff9a8b60608901511691610a65565b95909673ffffffffffffffffffffffffffffffffffffffff8651169151168a6060870151936101338c51998a96879586947fc1723a1d000000000000000000000000000000000000000000000000000000008652850160409194939263ffffffff606083019616825260208201520152565b03925af19081156101d1579261018c95949288926101869560209a9085948693610193575b509061017d929161ffff946080868f8401511691019a8d878d51169301511692610eda565b95511692610f84565b90610990565b9051908152f35b9150935061017d94506101be915060803d6080116101ca575b6101b681836107a1565b810190610959565b90959194909291610158565b503d6101ac565b86513d89823e3d90fd5b50346102f35760206003193601126102f3576101f5610779565b906101fe6109b3565b73ffffffffffffffffffffffffffffffffffffffff8092169283156102705750508254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b50503461032a578160031936011261032a5773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b5080fd5b83346103ac57806003193601126103ac576103476109b3565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50346102f3576103be366107da565b929093916080602083019361040763ffffffff9661753088885116109867ffffffffffffffff865116996fffffffffffffffffffffffffffffffff9a8b60608901511691610a65565b95909673ffffffffffffffffffffffffffffffffffffffff8651169151166060860151926104788b51988995869485947f88a4124c000000000000000000000000000000000000000000000000000000008652850160409194939263ffffffff606083019616825260208201520152565b03915afa9081156101d1579261018c95949288926101869560209a908594869361019357509061017d929161ffff946080868f8401511691019a8d878d51169301511692610eda565b50346102f35760606003193601126102f3576104db610779565b6024359273ffffffffffffffffffffffffffffffffffffffff80851690818603610775576044359361050b6109b3565b16806105ac575015610584578480808085885af1610527610fe2565b5015610534575050505080f35b517f2c024f9200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909316918301918252602082015281906040010390fd5b9050517f32fa6a1d000000000000000000000000000000000000000000000000000000008152fd5b9094919293941561074d5782517fa9059cbb00000000000000000000000000000000000000000000000000000000602080830191825273ffffffffffffffffffffffffffffffffffffffff94909416602483015260448083019690965294815291936106196064846107a1565b83519284840184811067ffffffffffffffff82111761073a5785528584527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656486850152516106799392918891829182855af1610673610fe2565b91611049565b8051838115918215610716575b50509050156106955750505080f35b6084935051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b838092935001031261073657820151801515810361073657808338610686565b8480fd5b60248960418a634e487b7160e01b835252fd5b8483517f32fa6a1d000000000000000000000000000000000000000000000000000000008152fd5b8680fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361079c57565b600080fd5b90601f601f19910116810190811067ffffffffffffffff8211176107c457604052565b634e487b7160e01b600052604160045260246000fd5b6003198101610140811261079c5760a01361079c5760408051909267ffffffffffffffff9160a08101838111828210176107c457855273ffffffffffffffffffffffffffffffffffffffff600435818116810361079c57825260243563ffffffff8116810361079c576020830152604435908116810361079c5781860152606435606082015261ffff90608435828116810361079c5760808201529460807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5c86011261079c5780519160808301838110868211176107c457825260a435858116810361079c57835260c435908116810361079c57602083015260e4356fffffffffffffffffffffffffffffffff91828216820361079c5783015261010435908116810361079c57606082015292610124359083821161079c578060238301121561079c57816004013593841161079c576024848301011161079c576024019190565b51906fffffffffffffffffffffffffffffffff8216820361079c57565b919082608091031261079c578151916109746020820161093c565b9161098d60606109866040850161093c565b930161093c565b90565b9190820180921161099d57565b634e487b7160e01b600052601160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff6000541633036109d457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b8181029291811591840414171561099d57565b8115610a4f570490565b634e487b7160e01b600052601260045260246000fd5b909493916000916000938015610eb05784959291959167ffffffffffffffff8699169686945b838510610b22575050508103610af15750906fffffffffffffffffffffffffffffffff610ab9921690610990565b93610ac2575090565b606682029180830460661490151715610add57506064900490565b80634e487b7160e01b602492526011600452fd5b602490604051907fb61964ac0000000000000000000000000000000000000000000000000000000082526004820152fd5b9091976001969460039586820186610b3e828c86018389611022565b919035927fffff00000000000000000000000000000000000000000000000000000000000080851694600294858110610e9d575b5050501015610e895785840189013560f81c9360049260f01c81018a019190610ba090839085018b8a611022565b9c90929a818714600014610cb157505050601090818c141580610ca6575b610c7d57610bcc8c8261103a565b9b6020808203610c725711610c6e57013560801c925b8680610c53575b610c2357505090610c12610c1a93926fffffffffffffffffffffffffffffffff80931690610990565b981690610990565b975b9190610a8b565b60249250604051917f3d6c5c70000000000000000000000000000000000000000000000000000000008352820152fd5b506fffffffffffffffffffffffffffffffff84161515610be9565b8c80fd5b505050508a92610be2565b826040517fd03c9969000000000000000000000000000000000000000000000000000000008152fd5b5060208c1415610bbe565b969e96828793949d969e959714600014610d8d5750505050603098898203610d645781610cdd9161103a565b9811610d60576fffffffffffffffffffffffffffffffff80809916911601878111610d4d5780978084169116818111610d1857505050610c1c565b60449350604051927f6eb7f2d20000000000000000000000000000000000000000000000000000000084528301526024820152fd5b60248a601184634e487b7160e01b835252fd5b8980fd5b836040517fde48d299000000000000000000000000000000000000000000000000000000008152fd5b969e96829d949693959c9d14600014610e6d575087610c2357506012908185141580610e62575b610e3a5750838311610e1257838111610e12576080936022808203610e165711610e1257610e0c949392916fffffffffffffffffffffffffffffffff610e01928d0135851c5b1690610990565b990135901c90610990565b97610c1c565b8b80fd5b50505090610e01610e0c9493926fffffffffffffffffffffffffffffffff8d610dfa565b6040517f071673fe000000000000000000000000000000000000000000000000000000008152fd5b506022851415610db4565b959d9f50925092509850818114600014610c2357505099610c1c565b60248c634e487b7160e01b81526032600452fd5b85038d1b82901b16169350388080610b72565b60046040517f148c679d000000000000000000000000000000000000000000000000000000008152fd5b9293929161271091610efa9161ffff91828116610f7d57505b1683610a32565b04926fffffffffffffffffffffffffffffffff80931680158015610f73575b610f6c57610f50610f5592610f5a957f00000000000000000000000000000000000000000000000000000000000000009116610a32565b610a45565b610990565b9080821115610f67575090565b905090565b5050505090565b5083821615610f19565b9050610ef3565b9392919060009480610f97575b50505050565b612710949550610fd7939261ffff92610fc7610fcf936fffffffffffffffffffffffffffffffff80931690610a32565b911690610a45565b911690610a32565b049038808080610f91565b3d1561101d573d9067ffffffffffffffff82116107c457604051916110116020601f19601f84011601846107a1565b82523d6000602084013e565b606090565b9093929384831161079c57841161079c578101920390565b9060101161079c573560801c90565b919290156110c4575081511561105d575090565b3b156110665790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b8251909150156110d75750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b84811061113657505050601f19601f836000604480968601015201168101030190fd5b81810183015186820160440152859350820161111356fea26469706673582212203a202ca4c6c41a0e161b5f87d07669e0d6e19f8be0b66c7f61878a2a8041058764736f6c63430008160033";
var isSuperArgs12 = (xs) => xs.length > 1;
var ExecutorFeeLib__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs12(args)) {
      super(...args);
    } else {
      super(_abi51, _bytecode12, args[0]);
    }
  }
  getDeployTransaction(_nativeDecimalsRate, overrides) {
    return super.getDeployTransaction(_nativeDecimalsRate, overrides || {});
  }
  deploy(_nativeDecimalsRate, overrides) {
    return super.deploy(_nativeDecimalsRate, overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi51);
  }
  static connect(address, runner) {
    return new Contract(address, _abi51, runner);
  }
};
ExecutorFeeLib__factory.bytecode = _bytecode12;
ExecutorFeeLib__factory.abi = _abi51;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/MessageLibBase__factory.ts
var _abi52 = [
  {
    inputs: [],
    name: "OnlyEndpoint",
    type: "error"
  }
];
var MessageLibBase__factory = class {
  static createInterface() {
    return new Interface(_abi52);
  }
  static connect(address, runner) {
    return new Contract(address, _abi52, runner);
  }
};
MessageLibBase__factory.abi = _abi52;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/PriceFeed__factory.ts
var _abi53 = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "provided",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "required",
        type: "uint256"
      }
    ],
    name: "InsufficientFee",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyPriceUpdater",
    type: "error"
  },
  {
    inputs: [],
    name: "ToAddressIsZero",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256"
      }
    ],
    name: "TransferNativeFailed",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "l2Eid",
        type: "uint32"
      }
    ],
    name: "UnknownL2Eid",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8"
      }
    ],
    name: "Initialized",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    inputs: [],
    name: "ARBITRUM_COMPRESSION_PERCENT",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "arbitrumPriceExt",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "gasPerL2Tx",
            type: "uint64"
          },
          {
            internalType: "uint32",
            name: "gasPerL1CallDataByte",
            type: "uint32"
          }
        ],
        internalType: "struct ILayerZeroPriceFeed.ArbitrumPriceExt",
        name: "",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "endpoint",
    outputs: [
      {
        internalType: "contract ILayerZeroEndpointV2",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_dstEid",
        type: "uint16"
      },
      {
        internalType: "uint256",
        name: "_callDataSize",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_gas",
        type: "uint256"
      }
    ],
    name: "estimateFeeByChain",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      },
      {
        internalType: "uint128",
        name: "priceRatio",
        type: "uint128"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "uint256",
        name: "_callDataSize",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_gas",
        type: "uint256"
      }
    ],
    name: "estimateFeeByEid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128"
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128"
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "uint256",
        name: "_callDataSize",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_gas",
        type: "uint256"
      }
    ],
    name: "estimateFeeOnSend",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128"
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128"
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128"
      }
    ],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      }
    ],
    name: "getPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "priceRatio",
            type: "uint128"
          },
          {
            internalType: "uint64",
            name: "gasPriceInUnit",
            type: "uint64"
          },
          {
            internalType: "uint32",
            name: "gasPerByte",
            type: "uint32"
          }
        ],
        internalType: "struct ILayerZeroPriceFeed.Price",
        name: "price",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_dstEid",
        type: "uint16"
      }
    ],
    name: "getPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "priceRatio",
            type: "uint128"
          },
          {
            internalType: "uint64",
            name: "gasPriceInUnit",
            type: "uint64"
          },
          {
            internalType: "uint32",
            name: "gasPerByte",
            type: "uint32"
          }
        ],
        internalType: "struct ILayerZeroPriceFeed.Price",
        name: "price",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "getPriceRatioDenominator",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_priceUpdater",
        type: "address"
      }
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "nativeTokenPriceUSD",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "updater",
        type: "address"
      }
    ],
    name: "priceUpdater",
    outputs: [
      {
        internalType: "bool",
        name: "active",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_compressionPercent",
        type: "uint128"
      }
    ],
    name: "setArbitrumCompressionPercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_endpoint",
        type: "address"
      }
    ],
    name: "setEndpoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_nativeTokenPriceUSD",
        type: "uint128"
      }
    ],
    name: "setNativeTokenPriceUSD",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "priceRatio",
                type: "uint128"
              },
              {
                internalType: "uint64",
                name: "gasPriceInUnit",
                type: "uint64"
              },
              {
                internalType: "uint32",
                name: "gasPerByte",
                type: "uint32"
              }
            ],
            internalType: "struct ILayerZeroPriceFeed.Price",
            name: "price",
            type: "tuple"
          }
        ],
        internalType: "struct ILayerZeroPriceFeed.UpdatePrice[]",
        name: "_price",
        type: "tuple[]"
      }
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "priceRatio",
                type: "uint128"
              },
              {
                internalType: "uint64",
                name: "gasPriceInUnit",
                type: "uint64"
              },
              {
                internalType: "uint32",
                name: "gasPerByte",
                type: "uint32"
              }
            ],
            internalType: "struct ILayerZeroPriceFeed.Price",
            name: "price",
            type: "tuple"
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "gasPerL2Tx",
                type: "uint64"
              },
              {
                internalType: "uint32",
                name: "gasPerL1CallDataByte",
                type: "uint32"
              }
            ],
            internalType: "struct ILayerZeroPriceFeed.ArbitrumPriceExt",
            name: "extend",
            type: "tuple"
          }
        ],
        internalType: "struct ILayerZeroPriceFeed.UpdatePriceExt",
        name: "_update",
        type: "tuple"
      }
    ],
    name: "setPriceForArbitrum",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_denominator",
        type: "uint128"
      }
    ],
    name: "setPriceRatioDenominator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address"
      },
      {
        internalType: "bool",
        name: "_active",
        type: "bool"
      }
    ],
    name: "setPriceUpdater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var _bytecode13 = "0x60808060405234610016576116bb908161001c8239f35b600080fdfe608060408181526004908136101561001657600080fd5b600092833560e01c90816311f2c34314610ef0575080632f7cb0b414610e8b5780633161b7f614610d1c57806336a5beba14610cc257806352a7251014610c425780635d6d7ccb14610b8d5780635e280f1114610b58578063715018a614610ad85780637bc3c9ab14610a8c5780637dc438a41461092a57806388a4124c146109135780638ca2fb08146108ca5780638da5cb5b1461089557806392807f5814610864578063c1723a1d14610817578063c1840327146107e6578063c4d66de814610560578063cd68b79b1461053e578063d350ad25146104de578063da26663a14610495578063dbbb41551461042e578063e0ad121a1461036a578063f2fde38b1461029a5763fd9be5221461012c57600080fd5b34610296578060031936011261029657610144610f55565b60243591610150611094565b73ffffffffffffffffffffffffffffffffffffffff821691821561026e578580808681945af13d156102695767ffffffffffffffff3d81811161023d57835191601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011683019081118382101761021157845281528660203d92013e5b156101de578480f35b6044945051927f2c024f920000000000000000000000000000000000000000000000000000000084528301526024820152fd5b60248960418a7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6024886041897f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6101d5565b8482517f32fa6a1d000000000000000000000000000000000000000000000000000000008152fd5b8280fd5b509034610296576020600319360112610296576102b5610f55565b916102be611094565b73ffffffffffffffffffffffffffffffffffffffff8316156102e757836102e4846111e1565b80f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b83823461042a57602060031936011261042a57806104269261ffff61038d610f78565b610395611077565b501681526067602052209063ffffffff6103ad610fd8565b92546fffffffffffffffffffffffffffffffff8116845267ffffffffffffffff8160801c16602085015260c01c16818301525191829182919091604063ffffffff8160608401956fffffffffffffffffffffffffffffffff815116855267ffffffffffffffff6020820151166020860152015116910152565b0390f35b5080fd5b83346104925760206003193601126104925773ffffffffffffffffffffffffffffffffffffffff61045d610f55565b610465611094565b167fffffffffffffffffffffffff0000000000000000000000000000000000000000606a541617606a5580f35b80fd5b50903461029657602060031936011261029657359063ffffffff918281168091036104da576104269382916104c8611077565b508152606760205220916103ad610fd8565b8380fd5b8334610492576020600319360112610492576fffffffffffffffffffffffffffffffff610509610f36565b610511611094565b167fffffffffffffffffffffffffffffffff00000000000000000000000000000000606554161760655580f35b83823461042a578160031936011261042a5760209060695460801c9051908152f35b5090346102965760206003193601126102965761057b610f55565b73ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61038181541680156000146107d85750555b84549160ff8360081c1615938480956107cb575b80156107b4575b1561073157507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0092846001858316178855610703575b5061062d60ff875460081c166106288161158e565b61158e565b610636336111e1565b168452606660205260018385209182541617905568056bc75e2d631000007fffffffffffffffffffffffffffffffff000000000000000000000000000000006065541617606555702f000000000000000000000000000000006fffffffffffffffffffffffffffffffff60695416176069556106b0575080f35b60207f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff84541684555160018152a180f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661010117865538610613565b60849060208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b1580156105dd5750600160ff8516146105dd565b50600160ff8516106105d6565b9150503303156105c2578480fd5b83823461042a578160031936011261042a576020906fffffffffffffffffffffffffffffffff606554169051908152f35b6104268261082d61082736610f0a565b916114da565b93519283526fffffffffffffffffffffffffffffffff91821660208401528116604083015290911660608201529081906080820190565b83823461042a578160031936011261042a576020906fffffffffffffffffffffffffffffffff606954169051908152f35b83823461042a578160031936011261042a5760209073ffffffffffffffffffffffffffffffffffffffff603354169051908152f35b83823461042a57602060031936011261042a5760ff8160209373ffffffffffffffffffffffffffffffffffffffff610900610f55565b1681526066855220541690519015158152f35b83823461042a576104269061082d61082736610f0a565b5090346102965760c06003193601126102965773ffffffffffffffffffffffffffffffffffffffff603354163303610a52575b3563ffffffff80821682036104da5760607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc3601126104da5761099e610fd8565b916024356fffffffffffffffffffffffffffffffff81168103610a4e57835267ffffffffffffffff926044358481168103610a4a576020820152606435918383168303610a4a576109f29286830152611113565b6084359182168092036104da5760a43590811681036104da576bffffffff00000000000000007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000091606854941b169216171760685580f35b8680fd5b8580fd5b338352606660205260ff828420541661095d5790517fa5138d71000000000000000000000000000000000000000000000000000000008152fd5b50823461049257606060031936011261049257506fffffffffffffffffffffffffffffffff610ac9610abc610f78565b6044359060243590610ff8565b83519182529091166020820152f35b8334610492578060031936011261049257610af1611094565b8073ffffffffffffffffffffffffffffffffffffffff6033547fffffffffffffffffffffffff00000000000000000000000000000000000000008116603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b83823461042a578160031936011261042a5760209073ffffffffffffffffffffffffffffffffffffffff606a54169051908152f35b50903461029657602060031936011261029657610ba8610f36565b9173ffffffffffffffffffffffffffffffffffffffff603354163303610c09575b836fffffffffffffffffffffffffffffffff84167fffffffffffffffffffffffffffffffff00000000000000000000000000000000606954161760695580f35b338452606660205260ff8185205416610bc957517fa5138d71000000000000000000000000000000000000000000000000000000008152fd5b83823461042a578060031936011261042a57610c5c610f55565b90602435918215158093036104da5773ffffffffffffffffffffffffffffffffffffffff90610c89611094565b168352606660205282209060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00835416911617905580f35b5082346104925780600319360112610492576020610cde610f89565b8281520152610ceb610f89565b602060685467ffffffffffffffff81169283815263ffffffff9283910191851c168152835192835251166020820152f35b50346102965760209160206003193601126104da5780359167ffffffffffffffff90818411610a4e5736602385011215610a4e578383013593828511610a4a576024936007903660248860071b85010111610e875773ffffffffffffffffffffffffffffffffffffffff603354163303610e4d575b50875b868110610d9f578880f35b80821b830190868201359163ffffffff908184168403610e455760607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc8236030112610e4557610ded610fd8565b9060448101356fffffffffffffffffffffffffffffffff81168103610e495782526064810135908982168203610e49576084918d84015201359182168203610e4557600193610e3f9288830152611113565b01610d94565b8b80fd5b8d80fd5b338952606660205260ff848a205416610d915783517fa5138d71000000000000000000000000000000000000000000000000000000008152fd5b8880fd5b833461049257602060031936011261049257610ea5610f36565b610ead611094565b6fffffffffffffffffffffffffffffffff7fffffffffffffffffffffffffffffffff000000000000000000000000000000006069549260801b1691161760695580f35b84903461042a57602091610f0336610f0a565b5050508152f35b6003196060910112610f315760043563ffffffff81168103610f3157906024359060443590565b600080fd5b600435906fffffffffffffffffffffffffffffffff82168203610f3157565b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610f3157565b6004359061ffff82168203610f3157565b604051906040820182811067ffffffffffffffff821117610fa957604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051906060820182811067ffffffffffffffff821117610fa957604052565b61ffff169190606e8314801561106c575b8015611061575b156110225761101e9261145c565b9091565b606f83148015611056575b801561104b575b156110425761101e9261134f565b61101e926112d6565b50614ea48314611034565b50612794831461102d565b50614eaf8314611010565b5061279f8314611009565b61107f610fd8565b90600082526000602083015260006040830152565b73ffffffffffffffffffffffffffffffffffffffff6033541633036110b557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b906fffffffffffffffffffffffffffffffff918282511692604067ffffffffffffffff6020850151169363ffffffff91829101511692611151610fd8565b958652602086019485526040860193845216600052606760205260406000209351167fffffffff000000000000000000000000000000000000000000000000000000007bffffffff00000000000000000000000000000000000000000000000077ffffffffffffffff000000000000000000000000000000008654955160801b16935160c01b1693161717179055565b6033549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b8181029291811591840414171561126157565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9190820180921161126157565b81156112a7570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b929161130d6113219161130861134b9463ffffffff8098166000526067602052604060002054978860c01c169061124e565b611290565b67ffffffffffffffff8560801c169061124e565b926113406fffffffffffffffffffffffffffffffff809216809561124e565b90606554169061129d565b9190565b92919063ffffffff918261136286611619565b169060009182526067602052604082205492611383858560c01c168261124e565b92610c74840180941161142f578567ffffffffffffffff94858760801c166113aa9161124e565b9816815260676020526040902054948560c01c166113c79161124e565b906113d191611290565b908360801c166113e09161124e565b936fffffffffffffffffffffffffffffffff8092166113fe9161124e565b908060655416918261140f9161129d565b9216938461141c9161124e565b906114269161129d565b61134b91611290565b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526011600452fd5b929161134b916114ce6113219263ffffffff809716600052606760205261130860406000206113086114bb606461149860695460801c8961124e565b04966114ad606854988d8a60401c169061124e565b93549b8c60c01c169061124e565b9367ffffffffffffffff80971690611290565b908560801c169061124e565b919061753063ffffffff80941606928316606e81148015611583575b8015611578575b1561152e575061150c9261145c565b90915b6fffffffffffffffffffffffffffffffff908160655416916069541690565b606f811490811561156c575b8115611560575b5015611557576115509261134f565b909161150f565b611550926112d6565b614ea491501438611541565b6127948114915061153a565b50614eaf81146114fd565b5061279f81146114f6565b1561159557565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fd5b61753063ffffffff9182160616606f81036116345750606590565b6127948103611644575061278990565b614ea4811461167e57602490604051907f8d2da5800000000000000000000000000000000000000000000000000000000082526004820152fd5b50614e999056fea2646970667358221220149918f88452a236038b305de77e1d057c5232e6b2b775e9a851ea27b53f58d264736f6c63430008160033";
var isSuperArgs13 = (xs) => xs.length > 1;
var PriceFeed__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs13(args)) {
      super(...args);
    } else {
      super(_abi53, _bytecode13, args[0]);
    }
  }
  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }
  deploy(overrides) {
    return super.deploy(overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi53);
  }
  static connect(address, runner) {
    return new Contract(address, _abi53, runner);
  }
};
PriceFeed__factory.bytecode = _bytecode13;
PriceFeed__factory.abi = _abi53;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/ReceiveLibBaseE2__factory.ts
var _abi54 = [
  {
    inputs: [],
    name: "OnlyEndpoint",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_configType",
        type: "uint32"
      }
    ],
    name: "getConfig",
    outputs: [
      {
        internalType: "bytes",
        name: "config",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "isSupportedEid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "messageLibType",
    outputs: [
      {
        internalType: "enum MessageLibType",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint32",
            name: "configType",
            type: "uint32"
          },
          {
            internalType: "bytes",
            name: "config",
            type: "bytes"
          }
        ],
        internalType: "struct SetConfigParam[]",
        name: "_config",
        type: "tuple[]"
      }
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint64",
        name: "major",
        type: "uint64"
      },
      {
        internalType: "uint8",
        name: "minor",
        type: "uint8"
      },
      {
        internalType: "uint8",
        name: "endpointVersion",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var ReceiveLibBaseE2__factory = class {
  static createInterface() {
    return new Interface(_abi54);
  }
  static connect(address, runner) {
    return new Contract(address, _abi54, runner);
  }
};
ReceiveLibBaseE2__factory.abi = _abi54;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/SendLibBase__factory.ts
var _abi55 = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256"
      }
    ],
    name: "InvalidAmount",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidExecutor",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "max",
        type: "uint256"
      }
    ],
    name: "InvalidMessageSize",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyEndpoint",
    type: "error"
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error"
  },
  {
    inputs: [],
    name: "ZeroMessageSize",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "maxMessageSize",
                type: "uint32"
              },
              {
                internalType: "address",
                name: "executor",
                type: "address"
              }
            ],
            internalType: "struct ExecutorConfig",
            name: "config",
            type: "tuple"
          }
        ],
        indexed: false,
        internalType: "struct SetDefaultExecutorConfigParam[]",
        name: "params",
        type: "tuple[]"
      }
    ],
    name: "DefaultExecutorConfigsSet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oapp",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "maxMessageSize",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "executor",
            type: "address"
          }
        ],
        indexed: false,
        internalType: "struct ExecutorConfig",
        name: "config",
        type: "tuple"
      }
    ],
    name: "ExecutorConfigSet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "executor",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      }
    ],
    name: "ExecutorFeePaid",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "treasury",
        type: "address"
      }
    ],
    name: "TreasurySet",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oapp",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      }
    ],
    name: "executorConfigs",
    outputs: [
      {
        internalType: "uint32",
        name: "maxMessageSize",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "executor",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "worker",
        type: "address"
      }
    ],
    name: "fees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_remoteEid",
        type: "uint32"
      }
    ],
    name: "getExecutorConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "maxMessageSize",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "executor",
            type: "address"
          }
        ],
        internalType: "struct ExecutorConfig",
        name: "rtnConfig",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "maxMessageSize",
                type: "uint32"
              },
              {
                internalType: "address",
                name: "executor",
                type: "address"
              }
            ],
            internalType: "struct ExecutorConfig",
            name: "config",
            type: "tuple"
          }
        ],
        internalType: "struct SetDefaultExecutorConfigParam[]",
        name: "_params",
        type: "tuple[]"
      }
    ],
    name: "setDefaultExecutorConfigs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var SendLibBase__factory = class {
  static createInterface() {
    return new Interface(_abi55);
  }
  static connect(address, runner) {
    return new Contract(address, _abi55, runner);
  }
};
SendLibBase__factory.abi = _abi55;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/SendLibBaseE2__factory.ts
var _abi56 = [
  {
    inputs: [],
    name: "CannotWithdrawAltToken",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256"
      }
    ],
    name: "InvalidAmount",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidExecutor",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "max",
        type: "uint256"
      }
    ],
    name: "InvalidMessageSize",
    type: "error"
  },
  {
    inputs: [],
    name: "NotTreasury",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyEndpoint",
    type: "error"
  },
  {
    inputs: [],
    name: "ToAddressIsZero",
    type: "error"
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256"
      }
    ],
    name: "TransferNativeFailed",
    type: "error"
  },
  {
    inputs: [],
    name: "ZeroMessageSize",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "maxMessageSize",
                type: "uint32"
              },
              {
                internalType: "address",
                name: "executor",
                type: "address"
              }
            ],
            internalType: "struct ExecutorConfig",
            name: "config",
            type: "tuple"
          }
        ],
        indexed: false,
        internalType: "struct SetDefaultExecutorConfigParam[]",
        name: "params",
        type: "tuple[]"
      }
    ],
    name: "DefaultExecutorConfigsSet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oapp",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "maxMessageSize",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "executor",
            type: "address"
          }
        ],
        indexed: false,
        internalType: "struct ExecutorConfig",
        name: "config",
        type: "tuple"
      }
    ],
    name: "ExecutorConfigSet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "executor",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      }
    ],
    name: "ExecutorFeePaid",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lzToken",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "LzTokenFeeWithdrawn",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "worker",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "NativeFeeWithdrawn",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "treasury",
        type: "address"
      }
    ],
    name: "TreasurySet",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oapp",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      }
    ],
    name: "executorConfigs",
    outputs: [
      {
        internalType: "uint32",
        name: "maxMessageSize",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "executor",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "worker",
        type: "address"
      }
    ],
    name: "fees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_configType",
        type: "uint32"
      }
    ],
    name: "getConfig",
    outputs: [
      {
        internalType: "bytes",
        name: "config",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_remoteEid",
        type: "uint32"
      }
    ],
    name: "getExecutorConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "maxMessageSize",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "executor",
            type: "address"
          }
        ],
        internalType: "struct ExecutorConfig",
        name: "rtnConfig",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "isSupportedEid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "messageLibType",
    outputs: [
      {
        internalType: "enum MessageLibType",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          },
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "receiver",
            type: "bytes32"
          },
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32"
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes"
          }
        ],
        internalType: "struct Packet",
        name: "_packet",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      },
      {
        internalType: "bool",
        name: "_payInLzToken",
        type: "bool"
      }
    ],
    name: "quote",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nativeFee",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "lzTokenFee",
            type: "uint256"
          }
        ],
        internalType: "struct MessagingFee",
        name: "",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          },
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "receiver",
            type: "bytes32"
          },
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32"
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes"
          }
        ],
        internalType: "struct Packet",
        name: "_packet",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      },
      {
        internalType: "bool",
        name: "_payInLzToken",
        type: "bool"
      }
    ],
    name: "send",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nativeFee",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "lzTokenFee",
            type: "uint256"
          }
        ],
        internalType: "struct MessagingFee",
        name: "",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint32",
            name: "configType",
            type: "uint32"
          },
          {
            internalType: "bytes",
            name: "config",
            type: "bytes"
          }
        ],
        internalType: "struct SetConfigParam[]",
        name: "_config",
        type: "tuple[]"
      }
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "maxMessageSize",
                type: "uint32"
              },
              {
                internalType: "address",
                name: "executor",
                type: "address"
              }
            ],
            internalType: "struct ExecutorConfig",
            name: "config",
            type: "tuple"
          }
        ],
        internalType: "struct SetDefaultExecutorConfigParam[]",
        name: "_params",
        type: "tuple[]"
      }
    ],
    name: "setDefaultExecutorConfigs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address"
      }
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint64",
        name: "major",
        type: "uint64"
      },
      {
        internalType: "uint8",
        name: "minor",
        type: "uint8"
      },
      {
        internalType: "uint8",
        name: "endpointVersion",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lzToken",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawLzTokenFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    stateMutability: "payable",
    type: "receive"
  }
];
var SendLibBaseE2__factory = class {
  static createInterface() {
    return new Interface(_abi56);
  }
  static connect(address, runner) {
    return new Contract(address, _abi56, runner);
  }
};
SendLibBaseE2__factory.abi = _abi56;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/Treasury__factory.ts
var _abi57 = [
  {
    inputs: [],
    name: "LzTokenNotEnabled",
    type: "error"
  },
  {
    inputs: [],
    name: "ToAddressIsZero",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256"
      }
    ],
    name: "TransferNativeFailed",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      },
      {
        internalType: "uint256",
        name: "_totalFee",
        type: "uint256"
      },
      {
        internalType: "bool",
        name: "_payInLzToken",
        type: "bool"
      }
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "lzTokenEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "lzTokenFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "nativeBP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      },
      {
        internalType: "uint256",
        name: "_totalFee",
        type: "uint256"
      },
      {
        internalType: "bool",
        name: "_payInLzToken",
        type: "bool"
      }
    ],
    name: "payFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_lzTokenEnabled",
        type: "bool"
      }
    ],
    name: "setLzTokenEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lzTokenFee",
        type: "uint256"
      }
    ],
    name: "setLzTokenFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nativeBP",
        type: "uint256"
      }
    ],
    name: "setNativeFeeBP",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_messageLib",
        type: "address"
      },
      {
        internalType: "address",
        name: "_lzToken",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawLzToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_messageLib",
        type: "address"
      },
      {
        internalType: "address payable",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawNativeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var _bytecode14 = "0x6080806040523461005b5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3610b8d90816100618239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816301d9c2cb146107e45750806301e336671461051c57806301f1f6e8146104c65780633972d46c146104a4578063715018a6146104265780637e8a06991461036d5780638da5cb5b1461033a5780638ee643a61461031857806390953238146102f957806396a141a0146102da57838163bf6e75361461021657508063d4244221146101fc578063d51c5486146101dd5763f2fde38b146100bf57600080fd5b346101d95760206003193601126101d9576100d8610805565b906100e1610907565b73ffffffffffffffffffffffffffffffffffffffff809216928315610156575050600054827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b6020836101f56101ec36610850565b92509050610986565b9051908152f35b505034610212576020906101f56101ec36610850565b5080fd5b929050346102d65760606003193601126102d657610232610805565b916024359273ffffffffffffffffffffffffffffffffffffffff908185168095036102d25761025f610907565b1692833b156102ce576044859283855196879485937ffd9be522000000000000000000000000000000000000000000000000000000008552840152833560248401525af19081156102c557506102b25750f35b6102bb906108a1565b6102c25780f35b80fd5b513d84823e3d90fd5b8480fd5b8580fd5b5050fd5b5050346102125781600319360112610212576020906001549051908152f35b5050346102125781600319360112610212576020906002549051908152f35b83823461021257602060031936011261021257610333610907565b3560025580f35b50503461021257816003193601126102125773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b5090346101d95760806003193601126101d95782610389610805565b61039161082d565b6044359073ffffffffffffffffffffffffffffffffffffffff928383168093036102ce5783906103bf610907565b1691823b156102ce576064928591875198899687957f200175f700000000000000000000000000000000000000000000000000000000875216908501526024840152833560448401525af19081156102c5575061041a575080f35b610423906108a1565b80f35b83346102c257806003193601126102c25761043f610907565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b838234610212576020600319360112610212576104bf610907565b3560015580f35b8382346102125760206003193601126102125735801515809103610212576104ec610907565b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006003541691161760035580f35b50346101d95760606003193601126101d957610536610805565b61053e61082d565b926044359161054b610907565b73ffffffffffffffffffffffffffffffffffffffff9081168061060557508416156105dd578480808085885af1610580610a13565b501561058d575050505080f35b517f2c024f9200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909316918301918252602082015281906040010390fd5b9050517f32fa6a1d000000000000000000000000000000000000000000000000000000008152fd5b90859293949516156107bc5782517fa9059cbb00000000000000000000000000000000000000000000000000000000602080830191825273ffffffffffffffffffffffffffffffffffffffff94909416602483015260448083019690965294815291936106736064846108e4565b83519284840184811067ffffffffffffffff8211176107905785528584527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656486850152516106d39392918891829182855af16106cd610a13565b91610a53565b8051838115918215610770575b50509050156106ef5750505080f35b6084935051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b83809293500103126102ce5782015180151581036102ce578083386106e0565b60248960418a7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8483517f32fa6a1d000000000000000000000000000000000000000000000000000000008152fd5b84903461021257816003193601126102125760209060ff6003541615158152f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361082857565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361082857565b60031960809101126108285760043573ffffffffffffffffffffffffffffffffffffffff81168103610828579060243563ffffffff8116810361082857906044359060643580151581036108285790565b67ffffffffffffffff81116108b557604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f601f19910116810190811067ffffffffffffffff8211176108b557604052565b73ffffffffffffffffffffffffffffffffffffffff60005416330361092857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90156109c8575060ff600354161561099e5760025490565b60046040517fd22af88c000000000000000000000000000000000000000000000000000000008152fd5b600154908181029181830414901517156109e457612710900490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b3d15610a4e573d9067ffffffffffffffff82116108b55760405191610a426020601f19601f84011601846108e4565b82523d6000602084013e565b606090565b91929015610ace5750815115610a67575090565b3b15610a705790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b825190915015610ae15750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b848110610b4057505050601f19601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201610b1d56fea26469706673582212204afe361918ad3382a564e24caaf3d1fd83a28403b68bc61d971e5a6f11941f7e64736f6c63430008160033";
var isSuperArgs14 = (xs) => xs.length > 1;
var Treasury__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs14(args)) {
      super(...args);
    } else {
      super(_abi57, _bytecode14, args[0]);
    }
  }
  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }
  deploy(overrides) {
    return super.deploy(overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi57);
  }
  static connect(address, runner) {
    return new Contract(address, _abi57, runner);
  }
};
Treasury__factory.bytecode = _bytecode14;
Treasury__factory.abi = _abi57;

// src/typechain/factories/artifacts/contracts/messagelib/contracts/Worker__factory.ts
var _abi58 = [
  {
    inputs: [],
    name: "NotAllowed",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyMessageLib",
    type: "error"
  },
  {
    inputs: [],
    name: "RoleRenouncingDisabled",
    type: "error"
  },
  {
    inputs: [],
    name: "ToAddressIsZero",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256"
      }
    ],
    name: "TransferNativeFailed",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "Paused",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32"
      }
    ],
    name: "RoleAdminChanged",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address"
      }
    ],
    name: "RoleGranted",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address"
      }
    ],
    name: "RoleRevoked",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "multiplierBps",
        type: "uint16"
      }
    ],
    name: "SetDefaultMultiplierBps",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "priceFeed",
        type: "address"
      }
    ],
    name: "SetPriceFeed",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "dstEid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "uint8[]",
        name: "optionTypes",
        type: "uint8[]"
      }
    ],
    name: "SetSupportedOptionTypes",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "workerLib",
        type: "address"
      }
    ],
    name: "SetWorkerLib",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "Unpaused",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "lib",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "Withdraw",
    type: "event"
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "allowlistSize",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "defaultMultiplierBps",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      }
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "getSupportedOptionTypes",
    outputs: [
      {
        internalType: "uint8[]",
        name: "",
        type: "uint8[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      }
    ],
    name: "hasAcl",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "priceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32"
      },
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_multiplierBps",
        type: "uint16"
      }
    ],
    name: "setDefaultMultiplierBps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_paused",
        type: "bool"
      }
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address"
      }
    ],
    name: "setPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "uint8[]",
        name: "_optionTypes",
        type: "uint8[]"
      }
    ],
    name: "setSupportedOptionTypes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_workerFeeLib",
        type: "address"
      }
    ],
    name: "setWorkerFeeLib",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "workerFeeLib",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var Worker__factory = class {
  static createInterface() {
    return new Interface(_abi58);
  }
  static connect(address, runner) {
    return new Contract(address, _abi58, runner);
  }
};
Worker__factory.abi = _abi58;

// src/typechain/factories/artifacts/contracts/oapp/index.ts
var oapp_exports = {};
__export(oapp_exports, {
  contracts: () => contracts_exports3
});

// src/typechain/factories/artifacts/contracts/oapp/contracts/index.ts
var contracts_exports3 = {};
__export(contracts_exports3, {
  EnforcedOptions__factory: () => EnforcedOptions__factory,
  OApp__factory: () => OApp__factory,
  examples: () => examples_exports,
  interfaces: () => interfaces_exports4,
  libs: () => libs_exports2,
  standards: () => standards_exports
});

// src/typechain/factories/artifacts/contracts/oapp/contracts/examples/index.ts
var examples_exports = {};
__export(examples_exports, {
  OmniCounterPreCrime__factory: () => OmniCounterPreCrime__factory,
  OmniCounter__factory: () => OmniCounter__factory
});

// src/typechain/factories/artifacts/contracts/oapp/contracts/examples/OmniCounter__factory.ts
var _abi59 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_endpoint",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address"
      }
    ],
    name: "EndpointOnly",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidEndpointCall",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidOptions",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "addr",
        type: "bytes32"
      }
    ],
    name: "InvalidPeer",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidPeerState",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      }
    ],
    name: "NoPeerSet",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "result",
        type: "bytes"
      }
    ],
    name: "SimulationResult",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint16",
            name: "msgType",
            type: "uint16"
          },
          {
            internalType: "bytes",
            name: "options",
            type: "bytes"
          }
        ],
        indexed: false,
        internalType: "struct EnforcedOptionParam[]",
        name: "_enforcedOptions",
        type: "tuple[]"
      }
    ],
    name: "SetEnforcedOption",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "remoteEid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "peer",
        type: "bytes32"
      }
    ],
    name: "SetPeer",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "precrime",
        type: "address"
      }
    ],
    name: "SetPreCrime",
    type: "event"
  },
  {
    stateMutability: "payable",
    type: "fallback"
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint32",
                name: "srcEid",
                type: "uint32"
              },
              {
                internalType: "bytes32",
                name: "sender",
                type: "bytes32"
              },
              {
                internalType: "uint64",
                name: "nonce",
                type: "uint64"
              }
            ],
            internalType: "struct Origin",
            name: "origin",
            type: "tuple"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address"
          },
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32"
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes"
          }
        ],
        internalType: "struct InboundPacket[]",
        name: "_packets",
        type: "tuple[]"
      }
    ],
    name: "_simulateLzReceive",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "_eids",
        type: "uint32[]"
      },
      {
        internalType: "uint8[]",
        name: "_types",
        type: "uint8[]"
      },
      {
        internalType: "bytes[]",
        name: "_options",
        type: "bytes[]"
      }
    ],
    name: "batchIncrement",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "uint8",
        name: "_type",
        type: "uint8"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "brokenIncrement",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes"
      }
    ],
    name: "callEndpoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "uint16",
        name: "_msgType",
        type: "uint16"
      },
      {
        internalType: "bytes",
        name: "_extraOptions",
        type: "bytes"
      }
    ],
    name: "combineOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "options",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "composedCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "eid",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "endpoint",
    outputs: [
      {
        internalType: "contract ILayerZeroEndpointV2",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        internalType: "uint16",
        name: "msgType",
        type: "uint16"
      }
    ],
    name: "enforcedOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "getTestArgs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "srcEid",
        type: "uint32"
      }
    ],
    name: "inboundCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "uint8",
        name: "_type",
        type: "uint8"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "increment",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_peer",
        type: "bytes32"
      }
    ],
    name: "isPeer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      },
      {
        internalType: "address",
        name: "",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    name: "lzCompose",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        internalType: "struct Origin",
        name: "_origin",
        type: "tuple"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      },
      {
        internalType: "address",
        name: "_executor",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_extraData",
        type: "bytes"
      }
    ],
    name: "lzReceive",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint32",
                name: "srcEid",
                type: "uint32"
              },
              {
                internalType: "bytes32",
                name: "sender",
                type: "bytes32"
              },
              {
                internalType: "uint64",
                name: "nonce",
                type: "uint64"
              }
            ],
            internalType: "struct Origin",
            name: "origin",
            type: "tuple"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address"
          },
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32"
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes"
          }
        ],
        internalType: "struct InboundPacket[]",
        name: "_packets",
        type: "tuple[]"
      }
    ],
    name: "lzReceiveAndRevert",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_srcEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32"
      }
    ],
    name: "nextNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "oapp",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "dstEid",
        type: "uint32"
      }
    ],
    name: "outboundCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    name: "peers",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "precrime",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "uint8",
        name: "_type",
        type: "uint8"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "nativeFee",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "lzTokenFee",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "safeGetPeer",
    outputs: [
      {
        internalType: "bytes32",
        name: "peer",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address"
      }
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint16",
            name: "msgType",
            type: "uint16"
          },
          {
            internalType: "bytes",
            name: "options",
            type: "bytes"
          }
        ],
        internalType: "struct EnforcedOptionParam[]",
        name: "_enforcedOptions",
        type: "tuple[]"
      }
    ],
    name: "setEnforcedOptions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_orderedNonce",
        type: "bool"
      }
    ],
    name: "setOrderedNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_peer",
        type: "bytes32"
      }
    ],
    name: "setPeer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_precrime",
        type: "address"
      }
    ],
    name: "setPreCrime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_srcEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32"
      },
      {
        internalType: "uint64",
        name: "_nonce",
        type: "uint64"
      }
    ],
    name: "skipInboundNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    stateMutability: "payable",
    type: "receive"
  }
];
var _bytecode15 = "0x60a080604052346200018c576020816200355f803803809162000023828562000191565b8339810103126200018c57516001600160a01b0390818116908190036200018c57600060208154600460018060a01b0319953387841617855560405195869384923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08880a36080819052600680549889163317905563416ecebf60e01b82525afa9182156200017f5781926200012e575b50506001600160c01b03199091163363ffffffff60a01b19161760a09190911b63ffffffff60a01b16176006556040516133939081620001cc823960805181818161041f01528181610d0701528181610e35015281816114f0015281816116ce015281816118b801528181612ba00152612f320152f35b9091506020813d60201162000176575b816200014d6020938362000191565b810103126200017257519063ffffffff821682036200016f57503880620000b7565b80fd5b5080fd5b3d91506200013e565b50604051903d90823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b03821190821017620001b557604052565b634e487b7160e01b600052604160045260246000fdfe60806040526004361015610018575b361561001657005b005b60003560e01c806301ffc9a71461026857806306661abd146102635780630931cf881461025e57806313137d6514610259578063257f4e051461025457806326b27f841461024f5780633400288b1461024a578063416ecebf146102455780635011e5b314610240578063542e7b561461023b57806354fd4d50146102365780635535d4611461023157806356a472891461022c5780635a0dfe4d146102275780635b849af6146102225780635e280f111461021d578063622f17f614610218578063704b6c02146102135780637112f86f1461020e578063715018a61461020957806374c71e0d146102045780637d25a05e146101ff5780638da5cb5b146101fa578063950c8a74146101f5578063b7abbb5d146101f0578063b98bd070146101eb578063bb0b6a53146101e6578063bc70b354146101e1578063c95c55be146101dc578063d0a10260146101d7578063d22446ce146101d2578063d4243885146101cd578063dbcd3b91146101c8578063f1873a16146101c3578063f2fde38b146101be578063f3fef3a3146101b95763f851a4400361000e57611cf0565b611c4b565b611b4a565b6119ee565b6117d7565b611746565b611617565b611466565b6113d4565b61137b565b611340565b6111fe565b611187565b611103565b6110cf565b611092565b610fdb565b610f59565b610de9565b610d66565b610d2b565b610cda565b610c82565b610c3a565b610bff565b610b89565b610915565b61078d565b61067a565b6105f3565b610545565b61051b565b6104ef565b6103ab565b610337565b610319565b34610309576020600319360112610309576004357fffffffff00000000000000000000000000000000000000000000000000000000811680910361030957807f411386e800000000000000000000000000000000000000000000000000000000602092149081156102df575b506040519015158152f35b7f01ffc9a700000000000000000000000000000000000000000000000000000000915014386102d4565b600080fd5b600091031261030957565b34610309576000600319360112610309576020600454604051908152f35b34610309576000600319360112610309576020604051308152f35b9181601f840112156103095782359167ffffffffffffffff8311610309576020838186019501011161030957565b73ffffffffffffffffffffffffffffffffffffffff81160361030957565b35906103a982610380565b565b600319360160e08112610309576060136103095767ffffffffffffffff608435818111610309576103e0903690600401610352565b90916103ed60a435610380565b60c43590811161030957610405903690600401610352565b50503373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016036104bf576104586004356104538161050d565b611d46565b916024358093036104895761048161001693610472611d24565b9061047b611d3a565b91612895565b606435612e9c565b6040517fc59a4f6400000000000000000000000000000000000000000000000000000000815260048101849052602490fd5b0390fd5b60246040517fab08c09e000000000000000000000000000000000000000000000000000000008152336004820152fd5b34610309576000600319360112610309576020600554604051908152f35b63ffffffff81160361030957565b3461030957602060031936011261030957602061053d6004356104538161050d565b604051908152f35b346103095760408060031936011261030957600435906105648261050d565b63ffffffff60243592610575612989565b1660009281845260026020528083852054146105ca57907fd81b9101f39c530fa8f18e6c9c5a64e4a3d7cb699e959f5d7abb5951c65e318f92918185526002602052808386205582519182526020820152a180f35b600483517f95567661000000000000000000000000000000000000000000000000000000008152fd5b3461030957600060031936011261030957602063ffffffff60065460a01c16604051908152f35b9181601f840112156103095782359167ffffffffffffffff8311610309576020808501948460051b01011161030957565b6020600319820112610309576004359067ffffffffffffffff8211610309576106769160040161061a565b9091565b6106833661064b565b90303b15610309576106c69160009160405193849283927f74c71e0d00000000000000000000000000000000000000000000000000000000845260048401611e08565b038134305af1801561076f57610774575b506040517f8e9e7099000000000000000000000000000000000000000000000000000000008152600081600481335afa801561076f576104bb9160009161074c575b506040519182917f8351eea700000000000000000000000000000000000000000000000000000000835260048301610b75565b61076991503d806000833e6107618183610a48565b810190611f9e565b38610719565b611f69565b80610781610787926109bf565b8061030e565b386106d7565b6060806003193601126103095767ffffffffffffffff600435818111610309576107bb90369060040161061a565b929091602435818111610309576107d690369060040161061a565b929091604435908111610309576107f190369060040161061a565b9290948387148061090c575b61080690611ffd565b61080e612048565b50600093345b88861061081d57005b6108fd8186866108f46108ee8d8f9773ffffffffffffffffffffffffffffffffffffffff8f8f61088d818f938f9060019f836108879261087c610877610898998561086a610882976120ad565b820361090557339c6120fd565b611d30565b9e6120fd565b612112565b9761216d565b9060ff87168a61263d565b6108be6108a489611d46565b956108b860065463ffffffff9060a01c1690565b90612a4f565b986108c7611f75565b63ffffffff8a1681529560208701526040998a870152850152600060808501521691612b2f565b91612c44565b015151906120c1565b950194610814565b309c6120fd565b508685146107fd565b3461030957600060031936011261030957602060405160018152f35b61ffff81160361030957565b90600182811c92168015610986575b602083101461095757565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f169161094c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff81116109d357604052565b610990565b60a0810190811067ffffffffffffffff8211176109d357604052565b6060810190811067ffffffffffffffff8211176109d357604052565b6040810190811067ffffffffffffffff8211176109d357604052565b6080810190811067ffffffffffffffff8211176109d357604052565b90601f601f19910116810190811067ffffffffffffffff8211176109d357604052565b90604051918260008254610a7e8161093d565b90818452602094600191600181169081600014610aec5750600114610aad575b5050506103a992500383610a48565b600090815285812095935091905b818310610ad45750506103a99350820101388080610a9e565b85548884018501529485019487945091830191610abb565b9150506103a99593507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b820101388080610a9e565b60005b838110610b405750506000910152565b8181015183820152602001610b30565b90601f19601f602093610b6e81518092818752878088019101610b2d565b0116010190565b906020610b86928181520190610b50565b90565b3461030957604060031936011261030957610bfb610be7610be2600435610baf8161050d565b63ffffffff60243591610bc183610931565b16600052600160205260406000209061ffff16600052602052604060002090565b610a6b565b604051918291602083526020830190610b50565b0390f35b346103095760206003193601126103095763ffffffff600435610c218161050d565b1660005260096020526020604060002054604051908152f35b34610309576040600319360112610309576020610c78600435610c5c8161050d565b6024359063ffffffff1660005260026020526040600020541490565b6040519015158152f35b346103095760206003193601126103095760043580151580910361030957610ca8612989565b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060085416911617600855600080f35b3461030957600060031936011261030957602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346103095760206003193601126103095763ffffffff600435610d4d8161050d565b16600052600a6020526020604060002054604051908152f35b3461030957602060031936011261030957600435610d8381610380565b7fffffffffffffffffffffffff00000000000000000000000000000000000000006006549173ffffffffffffffffffffffffffffffffffffffff90610dcb8285163314612184565b16911617600655600080f35b67ffffffffffffffff81160361030957565b3461030957606060031936011261030957600435610e068161050d565b60243590604435610e1681610dd7565b610e1e612989565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690813b156103095767ffffffffffffffff60646000928360405195869485937feaeacd6300000000000000000000000000000000000000000000000000000000855263ffffffff8a1660048601528a60248601521660448401525af1801561076f57610f46575b5060085460ff16610ec957005b61001691610eea610ef99263ffffffff166000526007602052604060002090565b90600052602052604060002090565b610f13610f0e825467ffffffffffffffff1690565b6121cf565b67ffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000825416179055565b80610781610f53926109bf565b38610ebc565b3461030957600080600319360112610fd857610f73612989565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b610fe43661064b565b3033036110635760005b818110610ff757005b8061100560019284866121e8565b61103661103261101483611d30565b60208401359063ffffffff1660005260026020526040600020541490565b1590565b61105d578061104b60c061105793018261211c565b9160a081013590613035565b01610fee565b50611057565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b346103095760406003193601126103095760206110bd6004356110b48161050d565b60243590612241565b67ffffffffffffffff60405191168152f35b3461030957600060031936011261030957602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b3461030957600060031936011261030957602073ffffffffffffffffffffffffffffffffffffffff60035416604051908152f35b60ff81160361030957565b60606003198201126103095760043561115a8161050d565b9160243561116781611137565b916044359067ffffffffffffffff82116103095761067691600401610352565b6100166111a76111f861119936611142565b9060ff83949693168661263d565b6111b084611d46565b6111c763ffffffff938460065460a01c1690612a4f565b90604051936111d5856109d8565b861684526020840152604083015260608201526000608082015233903490612b2f565b50612c44565b346103095761120c3661064b565b611214612989565b60005b81811061125557507fadc065f6ee2d84e4fc04873c88fe72b002dd1bf2faa49da18167494e909ca7e89161125060405192839283612480565b0390a1005b611260818385612285565b600361129661128f61128961128361127d6040968781019061211c565b906122c5565b9061230e565b60f01c90565b61ffff1690565b0361131757906113116112b96001936112b0848789612285565b9081019061211c565b9061130c6112e46112ce610877878a8c612285565b63ffffffff166000526001602052604060002090565b6112fa60206112f4888b8d612285565b01612352565b61ffff16600052602052604060002090565b6123b2565b01611217565b600490517f0280f177000000000000000000000000000000000000000000000000000000008152fd5b346103095760206003193601126103095763ffffffff6004356113628161050d565b1660005260026020526020604060002054604051908152f35b34610309576060600319360112610309576004356113988161050d565b6024356113a481610931565b6044359067ffffffffffffffff821161030957610bfb926113cc610be7933690600401610352565b92909161263d565b6100166114176113e336611142565b60069491929394549261140d73ffffffffffffffffffffffffffffffffffffffff85163314612184565b60ff85168661263d565b9161143661142485611d46565b9163ffffffff809460a01c1690612a4f565b9160405194611444866109d8565b1684526020840152604083015260608201526000608082015233903490612b2f565b60a06003193601126103095760043561147e81610380565b67ffffffffffffffff90604435828111610309576114a0903690600401610352565b9290916114ae606435610380565b608435918211610309576114c9611517923690600401610352565b50506114ee73ffffffffffffffffffffffffffffffffffffffff91823091161461277d565b7f00000000000000000000000000000000000000000000000000000000000000001633146127c8565b60ff6115238383612c61565b16600281036115425750505061001661153d600554612813565b600555565b6004036115d257610016916115649161155f61153d600554612813565b612c70565b61156d81612c44565b61157d611578612c82565b612d27565b61158682611d46565b60065461159b9060a01c63ffffffff166129ee565b906115b36115a7611f75565b63ffffffff9095168552565b6020840152604083015260608201526000608082015230903490612b2f565b60405162461bcd60e51b815260206004820152601460248201527f696e76616c6964206d65737361676520747970650000000000000000000000006044820152606490fd5b346103095761162b6116af61119936611142565b9261163581611d46565b9361164d63ffffffff938460065460a01c1690612a4f565b604095869485519461165e866109d8565b1684526020840152838301526060820152600060808201528151809381927fddc28c580000000000000000000000000000000000000000000000000000000083528460048401526044830190612ade565b306024830152038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa90811561076f57600091611719575b508051602091820151925190815290810191909152604090f35b6117399150823d841161173f575b6117318183610a48565b810190612e04565b386116ff565b503d611727565b34610309576020600319360112610309577f9bfd6b2fbc3428e14e9b2649314854ca348f45338b458b9a4e576760e7f405d5602073ffffffffffffffffffffffffffffffffffffffff60043561179b81610380565b6117a3612989565b16807fffffffffffffffffffffffff00000000000000000000000000000000000000006003541617600355604051908152a1005b346103095760206003193601126103095760043567ffffffffffffffff811161030957611808903690600401610352565b90611811612989565b7fffffffff0000000000000000000000000000000000000000000000000000000061183c8383612821565b167f20efd7220000000000000000000000000000000000000000000000000000000081149081156119c4575b811561199a575b8115611970575b8115611946575b811561191c575b50156118f257600091829161189e604051809381936125f3565b03908273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165af16118e2612865565b90156118ea57005b602081519101fd5b60046040517f0fbdec0a000000000000000000000000000000000000000000000000000000008152fd5b7feaeacd630000000000000000000000000000000000000000000000000000000091501438611884565b7f965183d4000000000000000000000000000000000000000000000000000000008114915061187d565b7f66bf43d60000000000000000000000000000000000000000000000000000000081149150611876565b7fe16f964d000000000000000000000000000000000000000000000000000000008114915061186f565b7fb8849ac90000000000000000000000000000000000000000000000000000000081149150611868565b3461030957600060031936011261030957610bfb7fffff000000000000000000000000000000000000000000000000000000000000611b3e6025611a38611a33612c82565b612d6b565b604051602081019060208252600160408201527f3100000000000000000000000000000000000000000000000000000000000000606082015260608152611a7e81610a2c565b611a96600361ffff611a8f866130f9565b1614612cb7565b611b2f611aab611aa68351613212565b6125ca565b916040519785611ac58a975180926020808b019101610b2d565b8601937f0200000000000000000000000000000000000000000000000000000000000000602086015260f01b1660218401527f0300000000000000000000000000000000000000000000000000000000000000806023850152602484015251809386840190610b2d565b01036005810184520182610a48565b60405191829182610b75565b3461030957602060031936011261030957600435611b6781610380565b611b6f612989565b73ffffffffffffffffffffffffffffffffffffffff8091168015611be1576000918254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b608460405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b3461030957604060031936011261030957600435611c6881610380565b73ffffffffffffffffffffffffffffffffffffffff611c8c81600654163314612184565b600080808094819460243591165af1611ca3612865565b5015611cac5780f35b606460405162461bcd60e51b815260206004820152601c60248201527f4f6d6e69436f756e7465723a207769746864726177206661696c6564000000006044820152fd5b3461030957600060031936011261030957602073ffffffffffffffffffffffffffffffffffffffff60065416604051908152f35b600435610b868161050d565b35610b868161050d565b604435610b8681610dd7565b63ffffffff1690816000526002602052604060002054918215611d665750565b602490604051907f196fb6c00000000000000000000000000000000000000000000000000000000082526004820152fd5b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561030957016020813591019167ffffffffffffffff821161030957813603831361030957565b601f8260209493601f19938186528686013760008582860101520116010190565b6020928084830185845252604093604083019260408360051b8201019585600080935b868510611e3e5750505050505050505090565b9091929394959697987fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc082820301895289357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2185360301811215611f655787611f54600193878394019060e0809163ffffffff8435611ebc8161050d565b168152858401358682015267ffffffffffffffff8c850135611edd81610dd7565b168c820152611f0260608086013590611ef58261050d565b83019063ffffffff169052565b611f2e6080611f1281870161039e565b73ffffffffffffffffffffffffffffffffffffffff1690830152565b60a08085013590820152611f4760c09485810190611d97565b9390948201520191611de7565b9b0199019796950193929190611e2b565b8380fd5b6040513d6000823e3d90fd5b604051906103a9826109d8565b67ffffffffffffffff81116109d357601f01601f191660200190565b6020818303126103095780519067ffffffffffffffff8211610309570181601f82011215610309578051611fd181611f82565b92611fdf6040519485610a48565b8184526020828401011161030957610b869160208085019101610b2d565b1561200457565b606460405162461bcd60e51b815260206004820152601c60248201527f4f6d6e69436f756e7465723a206c656e677468206d69736d61746368000000006044820152fd5b60405190612055826109f4565b816000815260006020820152604080519161206f83610a10565b60008352600060208401520152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9060001982019182116120bc57565b61207e565b919082039182116120bc57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b919081101561210d5760051b0190565b6120ce565b35610b8681611137565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610309570180359067ffffffffffffffff82116103095760200191813603831361030957565b9082101561210d576106769160051b81019061211c565b1561218b57565b606460405162461bcd60e51b815260206004820152600a60248201527f6f6e6c792061646d696e000000000000000000000000000000000000000000006044820152fd5b67ffffffffffffffff8091169081146120bc5760010190565b919081101561210d5760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2181360301821215610309570190565b90600167ffffffffffffffff809316019182116120bc57565b60085460ff161561227e5763ffffffff166000526007602052604060002090600052602052610b8667ffffffffffffffff60406000205416612228565b5050600090565b919081101561210d5760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa181360301821215610309570190565b906002116103095790600290565b909291928360021161030957831161030957600201917ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0190565b7fffff000000000000000000000000000000000000000000000000000000000000903581811693926002811061234357505050565b60020360031b82901b16169150565b35610b8681610931565b90601f811161236a57505050565b6000916000526020600020906020601f850160051c830194106123a8575b601f0160051c01915b82811061239d57505050565b818155600101612391565b9092508290612388565b90929167ffffffffffffffff81116109d3576123d8816123d2845461093d565b8461235c565b6000601f821160011461241857819061240993949560009261240d575b50506000198260011b9260031b1c19161790565b9055565b0135905038806123f5565b601f1982169461242d84600052602060002090565b91805b87811061246857508360019596971061244e575b505050811b019055565b60001960f88560031b161c19910135169055388080612444565b90926020600181928686013581550194019101612430565b6020928084830185845252604093604083019260408360051b8201019585600080935b8685106124b65750505050505050505090565b9091929394959697987fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc082820301895289357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa185360301811215611f6557876125656001938783940161255660609163ffffffff81356125358161050d565b16845261ffff8682013561254881610931565b16868501528b810190611d97565b919092818c8201520191611de7565b9b01990197969501939291906124a3565b92919261258282611f82565b916125906040519384610a48565b829481845281830111610309578281602093846000960137010152565b80511561210d5760200190565b80516001101561210d5760210190565b90600261ffff809316019182116120bc57565b91909161ffff808094169116019182116120bc57565b908092918237016000815290565b602090836103a99395949560405196836126248995518092888089019101610b2d565b8401918583013701600083820152038085520183610a48565b909290918161267c575050610b8691612669610be29263ffffffff166000526001602052604060002090565b9061ffff16600052602052604060002090565b9161269f9193612669610be29263ffffffff166000526001602052604060002090565b805190919015612770576126b961128961128385846122c5565b61ffff61272b61128f6127136127096127036126fd6126d78a6125ad565b517fff000000000000000000000000000000000000000000000000000000000000001690565b60f81c90565b60ff1690565b60081b61ff001690565b6127256127036126fd6126d78a6125ba565b906125dd565b9116036127465782610b8693612740926122d3565b91612601565b60046040517f0280f177000000000000000000000000000000000000000000000000000000008152fd5b9050610b86913691612576565b1561278457565b606460405162461bcd60e51b815260206004820152600560248201527f216f6170700000000000000000000000000000000000000000000000000000006044820152fd5b156127cf57565b606460405162461bcd60e51b815260206004820152600960248201527f21656e64706f696e7400000000000000000000000000000000000000000000006044820152fd5b90600182018092116120bc57565b7fffffffff00000000000000000000000000000000000000000000000000000000903581811693926004811061285657505050565b60040360031b82901b16169150565b3d15612890573d9061287682611f82565b916128846040519384610a48565b82523d6000602084013e565b606090565b91909163ffffffff8116600052600760205260406000208360005260205267ffffffffffffffff80604060002054169060ff60085416612931575b8316116128dc57505050565b6103a992610eea6128fd9263ffffffff166000526007602052604060002090565b9067ffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000825416179055565b8061293b83612228565b1681851603156128d057606460405162461bcd60e51b815260206004820152601360248201527f4f4170703a20696e76616c6964206e6f6e6365000000000000000000000000006044820152fd5b73ffffffffffffffffffffffffffffffffffffffff6000541633036129aa57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b7fffffffff00000000000000000000000000000000000000000000000000000000604051917f0100000000000000000000000000000000000000000000000000000000000000602084015260e01b16602182015260058152610b8681610a10565b907fffffffff00000000000000000000000000000000000000000000000000000000907fff000000000000000000000000000000000000000000000000000000000000006040519360f81b16602084015260e01b16602182015260058152610b8681610a10565b919082604091031261030957604051612ace81610a10565b6020808294805184520151910152565b9063ffffffff825116815260208201516020820152608080612b24612b12604086015160a0604087015260a0860190610b50565b60608601518582036060870152610b50565b930151151591015290565b90608091612b3b612048565b50612b9573ffffffffffffffffffffffffffffffffffffffff928392604051968795869485937f2637a450000000000000000000000000000000000000000000000000000000008552604060048601526044850190612ade565b9116602483015203927f0000000000000000000000000000000000000000000000000000000000000000165af190811561076f57600091612bd4575090565b905060803d608011612c2e575b612beb8183610a48565b810160808282031261030957612c26906040805193612c09856109f4565b805185526020810151612c1b81610dd7565b602086015201612ab6565b604082015290565b503d612be1565b60001981146120bc5760010190565b63ffffffff16600052600a60205260406000206124098154612c35565b90600111610309573560f81c90565b90600511610309576001013560e01c90565b6040517e03000000000000000000000000000000000000000000000000000000000000602082015260028152610b8681610a10565b15612cbe57565b608460405162461bcd60e51b8152602060048201526024808201527f4f7074696f6e734275696c6465723a20696e76616c6964206f7074696f6e732060448201527f74797065000000000000000000000000000000000000000000000000000000006064820152fd5b610b8690612d3c600361ffff611a8f846130f9565b6040519072030d4000000000000000000000000000000000602083015260108252612d6682610a10565b61314d565b610b8690612d80600361ffff611a8f846130f9565b60405190706400000000000000000000000000000000806020840152603083015260208252612d6682610a10565b610b8690612dc3600361ffff611a8f846130f9565b6040519072030d40000000000000000000000000000000006020830152700a00000000000000000000000000000000603083015260208252612d6682610a10565b9060408282031261030957610b8691612ab6565b610b86949273ffffffffffffffffffffffffffffffffffffffff6080931682526020820152600060408201528160608201520191611de7565b15612e5857565b606460405162461bcd60e51b815260206004820152601f60248201527f4f6d6e69436f756e7465723a20696e73756666696369656e742076616c7565006044820152fd5b91909160ff612eab8385612c61565b1660018103612eee575050612ed690612ede92612ed1612ecc600454612c35565b600455565b613310565b341015612e51565b6103a9612ee9611d24565b61328b565b60028193929314801561302b575b15612fb65750612f10612ecc600454612c35565b612f1b612ee9611d24565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016803b1561030957612f989360008094604051968795869485937f7cb590120000000000000000000000000000000000000000000000000000000085523060048601612e18565b03925af1801561076f57612fa95750565b806107816103a9926109bf565b6003141592506115d291505057612fd1612ecc600454612c35565b612fdc612ee9611d24565b612fec612fe7611d24565b612c44565b613028612fff612ffa612c82565b612dae565b613007611d24565b90613013610453611d24565b60065461159b9060a01c63ffffffff166132a8565b50565b5060048114612efc565b91929060ff6130448386612c61565b166001810361306c57505090610877612ed6612ee9936103a995612ed1612ecc600454612c35565b6002819492941480156130ef575b156130955750612ee9612f1b91610877612ecc600454612c35565b9150925060039150146000146115d257613028906130b7612ecc600454612c35565b6130c3612ee982611d30565b6130cf612fe782611d30565b6130da612ffa612c82565b6130136104536130e984611d30565b93611d30565b506004811461307a565b6002815110613109576002015190565b606460405162461bcd60e51b815260206004820152601460248201527f746f55696e7431365f6f75744f66426f756e64730000000000000000000000006044820152fd5b61ffff91613160600384611a8f856130f9565b60018361316d8351613212565b16019283116120bc57610b86916024916040519482613196879451809260208088019101610b2d565b8301907fffff0000000000000000000000000000000000000000000000000000000000007f01000000000000000000000000000000000000000000000000000000000000009182602085015260f01b16602183015260238201526132038251809360208785019101610b2d565b01036004810184520182610a48565b61ffff90818111613221571690565b608460405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203160448201527f36206269747300000000000000000000000000000000000000000000000000006064820152fd5b63ffffffff16600052600960205260406000206124098154612c35565b7fffffffff00000000000000000000000000000000000000000000000000000000604051917f0100000000000000000000000000000000000000000000000000000000000000602084015260e01b166021820152600a602582015260258152610b86816109f4565b8160051161030957600501359060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb82011061334b575090565b6005600019916020030160031b1b169056fea2646970667358221220f6f0b1a4d7d6dc54df70399151fb6f15356f6d806a3ef85e363759238cfd5d0364736f6c63430008160033";
var isSuperArgs15 = (xs) => xs.length > 1;
var OmniCounter__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs15(args)) {
      super(...args);
    } else {
      super(_abi59, _bytecode15, args[0]);
    }
  }
  getDeployTransaction(_endpoint, overrides) {
    return super.getDeployTransaction(_endpoint, overrides || {});
  }
  deploy(_endpoint, overrides) {
    return super.deploy(_endpoint, overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi59);
  }
  static connect(address, runner) {
    return new Contract(address, _abi59, runner);
  }
};
OmniCounter__factory.bytecode = _bytecode15;
OmniCounter__factory.abi = _abi59;

// src/typechain/factories/artifacts/contracts/oapp/contracts/examples/OmniCounterPreCrime__factory.ts
var _abi60 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_endpoint",
        type: "address"
      },
      {
        internalType: "address",
        name: "_counter",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "crime",
        type: "bytes"
      }
    ],
    name: "CrimeFound",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        internalType: "bytes",
        name: "reason",
        type: "bytes"
      }
    ],
    name: "InvalidSimulationResult",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyOffChain",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "max",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256"
      }
    ],
    name: "PacketOversize",
    type: "error"
  },
  {
    inputs: [],
    name: "PacketUnsorted",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "reason",
        type: "bytes"
      }
    ],
    name: "SimulationFailed",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      }
    ],
    name: "SimulationResultNotFound",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    inputs: [],
    name: "buildSimulationResult",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_packets",
        type: "bytes[]"
      }
    ],
    name: "getConfig",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "getPreCrimePeers",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "precrime",
            type: "bytes32"
          },
          {
            internalType: "bytes32",
            name: "oapp",
            type: "bytes32"
          }
        ],
        internalType: "struct PreCrimePeer[]",
        name: "",
        type: "tuple[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "maxBatchSize",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "oapp",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_packets",
        type: "bytes[]"
      },
      {
        internalType: "bytes[]",
        name: "_simulations",
        type: "bytes[]"
      }
    ],
    name: "precrime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_maxBatchSize",
        type: "uint64"
      }
    ],
    name: "setMaxBatchSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "precrime",
            type: "bytes32"
          },
          {
            internalType: "bytes32",
            name: "oapp",
            type: "bytes32"
          }
        ],
        internalType: "struct PreCrimePeer[]",
        name: "_precrimePeers",
        type: "tuple[]"
      }
    ],
    name: "setPreCrimePeers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_packets",
        type: "bytes[]"
      }
    ],
    name: "simulate",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [],
    name: "simulator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint64",
        name: "major",
        type: "uint64"
      },
      {
        internalType: "uint8",
        name: "minor",
        type: "uint8"
      }
    ],
    stateMutability: "pure",
    type: "function"
  }
];
var _bytecode16 = "0x60e080604052346200016c57604081620023cf803803809162000023828562000171565b8339810103126200016c576200004760206200003f83620001ab565b9201620001ab565b60008054336001600160a01b0319821681178355604051949293602093869360049385936001600160a01b0393909290919084167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08a80a360805260a081905263012639f160e31b8352165afa9182156200015f57819262000116575b8260c05260405161220e9081620001c18239608051818181611c370152611e9b015260a0518181816102930152818161072901528181610a0c01526115b0015260c0518181816101240152611c050152f35b9091506020813d60201162000156575b81620001356020938362000171565b8101031262000152576200014a9150620001ab565b3880620000c4565b5080fd5b3d915062000126565b50604051903d90823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200019557604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200016c5756fe6080604052600436101561001257600080fd5b60003560e01c80630931cf88146100f75780632913daa0146100f25780633ed242b4146100ed57806354fd4d50146100e8578063715018a6146100e357806374e6729e146100de5780638da5cb5b146100d95780638e9e7099146100d4578063afea44ef146100cf578063b9a1f5e7146100ca578063bf7b5d7a146100c5578063e01b6974146100c0578063f2fde38b146100bb5763f8bcddf6146100b657600080fd5b610c69565b610b9d565b610a30565b6109df565b61096d565b6108f7565b610711565b6106dd565b610577565b6104f5565b6104d3565b610234565b61014d565b3461014857600060031936011261014857602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b600080fd5b3461014857600060031936011261014857602067ffffffffffffffff60005460a01c16604051908152f35b9181601f840112156101485782359167ffffffffffffffff8311610148576020808501948460051b01011161014857565b6020600319820112610148576004359067ffffffffffffffff8211610148576101d491600401610178565b9091565b60005b8381106101eb5750506000910152565b81810151838201526020016101db565b90601f19601f602093610219815180928187528780880191016101d8565b0116010190565b9060206102319281815201906101fb565b90565b61023d366101a9565b61dead33036104a95761024f91611320565b80516000805467ffffffffffffffff929060a01c83168082116104605750508251610291575b61028d61028184611527565b60405191829182610220565b0390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16929181908180805b865181101561044b576102e38188610efe565b51888151916102f6835163ffffffff1690565b9261034c60208080930151604095865180809581947f5a0dfe4d00000000000000000000000000000000000000000000000000000000835260049b8c84016020909392919363ffffffff60408201951681520152565b03915afa908115610446578b91610419575b501561040d578151805163ffffffff908116929088168314801590610400575b6103de575b505090518201516103a0915067ffffffffffffffff165b9761149b565b96868089169116036103b85750506001905b016102d0565b517f50823c85000000000000000000000000000000000000000000000000000000008152fd5b015191985090955093506103a061039a826103f98888611bb8565b9992610383565b508881830151141561037e565b505050506001906103b2565b6104399150823d841161043f575b6104318183610db1565b810190611483565b3861035e565b503d610427565b61101d565b50505050505061028d91506102819091610275565b6040517f9db0860500000000000000000000000000000000000000000000000000000000815267ffffffffffffffff9190911660048201526024810191909152604490fd5b0390fd5b60046040517f9cbfe066000000000000000000000000000000000000000000000000000000008152fd5b3461014857600060031936011261014857604080516002815260006020820152f35b34610148576000806003193601126105745761050f6116c3565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b346101485760406003193601126101485767ffffffffffffffff600435818111610148576105a9903690600401610178565b91602435908111610148576105c2903690600401610178565b91909261dead33036104a9576105d791611320565b916105e182610de3565b906105ef6040519283610db1565b8282526105fb83610de3565b926020601f1980950136602086013761061382610de3565b946106216040519687610db1565b82865261062d83610de3565b0160005b8181106106ce5750505060005b81811061065c575050506106558161065a946117af565b611906565b005b806106b26106ab6106706001948688610e2a565b816106a661069161068b610685858097610e8f565b90610eba565b60e01c90565b61069b888d610efe565b9063ffffffff169052565b610e9d565b3691610f2e565b6106bc8288610efe565b526106c78187610efe565b500161063e565b60608782018401528201610631565b3461014857600060031936011261014857602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b346101485760008060031936011261057457600180547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661076782610f84565b93805b8381106107975760405161028d90610281816107898a60208301611029565b03601f198101835282610db1565b6107ae6107a382610fd3565b505463ffffffff1690565b604080517f56a4728900000000000000000000000000000000000000000000000000000000815263ffffffff83166004808301919091529093929160209182866024818b5afa90811561044657848491610848988a946108c6575b50845198899283927f622f17f6000000000000000000000000000000000000000000000000000000008452830191909163ffffffff6020820193169052565b03818b5afa928315610446578a968894610897575b50610875610869610dd4565b63ffffffff9096168652565b8401528201526108858289610efe565b526108908188610efe565b500161076a565b816108b89295503d86116108bf575b6108b08183610db1565b81019061100e565b923861085d565b503d6108a6565b6108de919450833d85116108bf576108b08183610db1565b9238610809565b67ffffffffffffffff81160361014857565b3461014857602060031936011261014857600435610914816108e5565b61091c6116c3565b7fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff7bffffffffffffffff00000000000000000000000000000000000000006000549260a01b16911617600055600080f35b3461014857600060031936011261014857610986611083565b6040906040519060208083018184528251809152816040850193019160005b8281106109b25785850386f35b8351805163ffffffff168652808301518684015287015187860152606090940193928101926001016109a5565b3461014857600060031936011261014857602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461014857610a3e366101a9565b9061dead33036104a957600054604080517e0200000000000000000000000000000000000000000000000000000000000060208083019190915292831b7fffffffffffffffff000000000000000000000000000000000000000000000000166022820152600a815293601f19929190610ab8602a87610db1565b859481610b85575050610ac9611083565b945b855180610ae1575b6040518061028d8882610220565b610b0e949392955061ffff16938491610b0260405193849260208401611121565b03848101835282610db1565b936000955b84871015610ad3579091929394600190610b78610b3e610b338a86610efe565b515163ffffffff1690565b91610b6c87610b4d8c88610efe565b51015187610b5b8d89610efe565b5101519088519586948b8601611164565b03878101835282610db1565b9601959493929190610b13565b610b9791610b9291611320565b611a8c565b94610acb565b346101485760206003193601126101485760043573ffffffffffffffffffffffffffffffffffffffff811680820361014857610bd76116c3565b15610be55761065a90611742565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b346101485760206003193601126101485767ffffffffffffffff6004358181116101485736602382011215610148578060040135918211610148576024810190602436916060850201011161014857610cc06116c3565b600190600154926000938460015580610cfd575b50835b818110610ce2578480f35b80610cf7610cf2869385876111e2565b611200565b01610cd7565b60039080600302906003820403610d5c57600186527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6908101905b818110610d46575050610cd4565b8087849255878782015587600282015501610d38565b6111b3565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610dac57604052565b610d61565b90601f601f19910116810190811067ffffffffffffffff821117610dac57604052565b60405190610de182610d90565b565b67ffffffffffffffff8111610dac5760051b60200190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9190811015610e8a5760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561014857019081359167ffffffffffffffff8311610148576020018236038113610148579190565b610dfb565b906004116101485790600490565b909291928360041161014857831161014857600401916003190190565b7fffffffff000000000000000000000000000000000000000000000000000000009035818116939260048110610eef57505050565b60040360031b82901b16169150565b8051821015610e8a5760209160051b010190565b67ffffffffffffffff8111610dac57601f01601f191660200190565b929192610f3a82610f12565b91610f486040519384610db1565b829481845281830111610148578281602093846000960137010152565b60405190610f7282610d90565b60006040838281528260208201520152565b90610f8e82610de3565b610f9b6040519182610db1565b828152601f19610fab8294610de3565b019060005b828110610fbc57505050565b602090610fc7610f65565b82828501015201610fb0565b600154811015610e8a576003906001600052027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b90816020910312610148575190565b6040513d6000823e3d90fd5b60208082019080835283518092528060408094019401926000905b83821061105357505050505090565b8451805163ffffffff16875280840151878501528101518682015260609095019493820193600190910190611044565b6001906001549161109383610de3565b9260406110a36040519586610db1565b8185528460208091019160016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6906000935b8585106110e85750505050505050565b600384889284516110f881610d90565b63ffffffff875416815284870154838201526002870154868201528152019301940193916110d8565b60207fffff0000000000000000000000000000000000000000000000000000000000009161115860029594828151948592016101d8565b019160f01b1681520190565b60207fffffffff000000000000000000000000000000000000000000000000000000009161119d604497959694828151948592016101d8565b019360e01b168352600483015260248201520190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9190811015610e8a576060020190565b63ffffffff81160361014857565b60015468010000000000000000811015610dac576001810180600155811015610e8a57604060037fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf89260016000520292837fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60163ffffffff8235611283816111f2565b167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000082541617905560208101357fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf78501550135910155565b6040519060a0820182811067ffffffffffffffff821117610dac576040526060608083611306610f65565b815260006020820152600060408201526000838201520152565b91909161132c83610de3565b90604061133c6040519384610db1565b848352601f1961134b86610de3565b0160005b81811061146c575050829460005b81811061136b575050505050565b611376818386610e2a565b6113819291926112db565b9080600d11610148576106ab81856113f26113a161144b95600199611ffe565b6113ab848461200d565b6113da6113b6610dd4565b600986013560e01c815291602093848401528d83019067ffffffffffffffff169052565b87526113e6848461201f565b63ffffffff1690870152565b61143761141b61140284846121c9565b73ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff16868b0152565b6114418282612031565b6060860152612040565b608082015261145a8288610efe565b526114658187610efe565b500161135d565b6020906114776112db565b8282880101520161134f565b90816020910312610148575180151581036101485790565b67ffffffffffffffff809116908114610d5c5760010190565b3d156114df573d906114c582610f12565b916114d36040519384610db1565b82523d6000602084013e565b606090565b7fffffffff000000000000000000000000000000000000000000000000000000006004939260e01b16815261152282518093602086850191016101d8565b010190565b90604091604051602091828201947f5011e5b300000000000000000000000000000000000000000000000000000000865260448301846024850152825180915260648401918560648360051b8701019401926000915b838310611605575050505050600080610231949596846115df9403946115ab601f1996878101835282610db1565b5190347f00000000000000000000000000000000000000000000000000000000000000005af16115d96114b4565b90611d49565b926115f96115eb611e58565b9460405195869384016114e4565b03908101835282610db1565b909192939487806116b4837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c8b60019603018752895160e09080519067ffffffffffffffff8963ffffffff9384815116875288810151898801520151168985015285810151916060921682850152888101519161169c6080938487019073ffffffffffffffffffffffffffffffffffffffff169052565b81015160a08501520151918160c082015201906101fb565b9701930193019193929061157d565b73ffffffffffffffffffffffffffffffffffffffff6000541633036116e457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6000549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b8051611810575b506117d06117cc6117c5611e58565b8093611f04565b1590565b6117d75750565b6040517f01992f2a00000000000000000000000000000000000000000000000000000000815263ffffffff919091166004820152602490fd5b61181990611a8c565b60005b815181101561184c57611832610b338284610efe565b61183f6117cc8286611f04565b6117d7575060010161181c565b5050386117b6565b60209081818403126101485780519067ffffffffffffffff8211610148570182601f820112156101485780519161188a83610de3565b93604061189a6040519687610db1565b8486528286019183606080970286010194818611610148578401925b8584106118c7575050505050505090565b86848303126101485784879184516118de81610d90565b86516118e9816111f2565b8152828701518382015285870151868201528152019301926118b6565b61190e611e58565b60609263ffffffff821660005b8451811015611a2c578161194861193f6119358489610efe565b5163ffffffff1690565b63ffffffff1690565b146119555760010161191b565b8261197993949596506119689250610efe565b518051602080918301019101611854565b925b60005b8151811015611a25576119946119358284610efe565b6119b6856119af6119a86119688689610efe565b9389611f43565b5092611f43565b919050116119c65760010161197e565b6040517f1915975700000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f696e626f756e64436f756e74203e206f7574626f756e64436f756e74000000006044820152606490fd5b5050505050565b5050909161197b565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610d5c5760010190565b9060018201809211610d5c57565b90601f8201809211610d5c57565b6004019081600411610d5c57565b906060611a97611083565b611aa18451610f84565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9260005b8651811015611b5757611ae8611adc8289610efe565b51515163ffffffff1690565b611af28186611fa1565b9060008212159081611b42575b50611b0e575b50600101611ac6565b9490611b25611b1e600193611a35565b9686610efe565b51611b308786610efe565b52611b3b8685610efe565b5090611b05565b60009150611b509086611fa1565b1238611aff565b5094509190506000811215611b6a575050565b611b75919350611a62565b611b7e81610f84565b9260005b828110611b8e57505050565b80611b9b60019284610efe565b51611ba68288610efe565b52611bb18187610efe565b5001611b82565b63ffffffff606460209273ffffffffffffffffffffffffffffffffffffffff60405195869485937fa0dd43fc000000000000000000000000000000000000000000000000000000008552837f000000000000000000000000000000000000000000000000000000000000000016600486015216602484015260448301527f0000000000000000000000000000000000000000000000000000000000000000165afa90811561044657600091611c6b575090565b90506020813d602011611c98575b81611c8660209383610db1565b810103126101485751610231816108e5565b3d9150611c79565b90602082519201517fffffffff00000000000000000000000000000000000000000000000000000000908181169360048110610eef57505050565b906003198201918211610d5c57565b6020818303126101485780519067ffffffffffffffff8211610148570181601f82011215610148578051611d1d81610f12565b92611d2b6040519485610db1565b818452602082840101116101485761023191602080850191016101d8565b611dfa577f8351eea7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000611d9883611ca0565b1603611dc457611db581611daf6102319351611cdb565b9061213e565b60208082518301019101611cea565b6104a5906040519182917f614cbd8a00000000000000000000000000000000000000000000000000000000835260048301610220565b60646040517f614cbd8a00000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f6e6f2072657665727400000000000000000000000000000000000000000000006044820152fd5b6040517f416ecebf00000000000000000000000000000000000000000000000000000000815260208160048173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa90811561044657600091611ecf575090565b90506020813d602011611efc575b81611eea60209383610db1565b810103126101485751610231816111f2565b3d9150611edd565b9060005b8251811015611f3b5763ffffffff80611f218386610efe565b511690831614611f3357600101611f08565b505050600190565b505050600090565b9160005b8351811015611f975763ffffffff80611f608387610efe565b51511690841614611f7357600101611f47565b6040919250806020611f88611f919387610efe565b51015194610efe565b51015190565b5060009250829150565b9060005b8251811015611fd75763ffffffff80611fbe8386610efe565b51511690831614611fd157600101611fa5565b91505090565b5050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90565b90602d1161014857600d013590565b90600911610148576001013560c01c90565b9060311161014857602d013560e01c90565b90607111610148576051013590565b9190918260711161014857607101917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8f0190565b1561207b57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f770000000000000000000000000000000000006044820152fd5b156120e057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e64730000000000000000000000000000006044820152fd5b6121528261214b81611a70565b1015612074565b612167815161216084611a7e565b11156120d9565b8161217f575050604051600081526020810160405290565b60405191601f8116916004831560051b80858701019484860193010101905b8084106121b65750508252601f01601f191660405290565b909283518152602080910193019061219e565b9060511161014857603101359056fea26469706673582212207a22253e87762fc2dcc9f9470d927cbcba8d9e45a589baf18e0d22f382b7458d64736f6c63430008160033";
var isSuperArgs16 = (xs) => xs.length > 1;
var OmniCounterPreCrime__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs16(args)) {
      super(...args);
    } else {
      super(_abi60, _bytecode16, args[0]);
    }
  }
  getDeployTransaction(_endpoint, _counter, overrides) {
    return super.getDeployTransaction(_endpoint, _counter, overrides || {});
  }
  deploy(_endpoint, _counter, overrides) {
    return super.deploy(_endpoint, _counter, overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi60);
  }
  static connect(address, runner) {
    return new Contract(
      address,
      _abi60,
      runner
    );
  }
};
OmniCounterPreCrime__factory.bytecode = _bytecode16;
OmniCounterPreCrime__factory.abi = _abi60;

// src/typechain/factories/artifacts/contracts/oapp/contracts/interfaces/index.ts
var interfaces_exports4 = {};
__export(interfaces_exports4, {
  IInspector__factory: () => IInspector__factory,
  IOApp__factory: () => IOApp__factory
});

// src/typechain/factories/artifacts/contracts/oapp/contracts/interfaces/IInspector__factory.ts
var _abi61 = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      }
    ],
    name: "inspect",
    outputs: [
      {
        internalType: "bool",
        name: "valid",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var IInspector__factory = class {
  static createInterface() {
    return new Interface(_abi61);
  }
  static connect(address, runner) {
    return new Contract(address, _abi61, runner);
  }
};
IInspector__factory.abi = _abi61;

// src/typechain/factories/artifacts/contracts/oapp/contracts/interfaces/IOApp__factory.ts
var _abi62 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address"
      }
    ],
    name: "EndpointOnly",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidEndpointCall",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "addr",
        type: "bytes32"
      }
    ],
    name: "InvalidPeer",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidPeerState",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      }
    ],
    name: "NoPeerSet",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "remoteEid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "peer",
        type: "bytes32"
      }
    ],
    name: "SetPeer",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "precrime",
        type: "address"
      }
    ],
    name: "SetPreCrime",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes"
      }
    ],
    name: "callEndpoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        internalType: "struct Origin",
        name: "_origin",
        type: "tuple"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      },
      {
        internalType: "address",
        name: "_executor",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_extraData",
        type: "bytes"
      }
    ],
    name: "lzReceive",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32"
      }
    ],
    name: "nextNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "peers",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "precrime",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_peer",
        type: "bytes32"
      }
    ],
    name: "setPeer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_precrime",
        type: "address"
      }
    ],
    name: "setPreCrime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var IOApp__factory = class {
  static createInterface() {
    return new Interface(_abi62);
  }
  static connect(address, runner) {
    return new Contract(address, _abi62, runner);
  }
};
IOApp__factory.abi = _abi62;

// src/typechain/factories/artifacts/contracts/oapp/contracts/libs/index.ts
var libs_exports2 = {};
__export(libs_exports2, {
  OptionsBuilder__factory: () => OptionsBuilder__factory
});

// src/typechain/factories/artifacts/contracts/oapp/contracts/libs/OptionsBuilder__factory.ts
var _abi63 = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "max",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256"
      }
    ],
    name: "InvalidSize",
    type: "error"
  }
];
var _bytecode17 = "0x60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220375babe98941e49b13aaaf8e5562af80b7c03343de83c5792721bff852377a3464736f6c63430008160033";
var isSuperArgs17 = (xs) => xs.length > 1;
var OptionsBuilder__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs17(args)) {
      super(...args);
    } else {
      super(_abi63, _bytecode17, args[0]);
    }
  }
  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }
  deploy(overrides) {
    return super.deploy(overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi63);
  }
  static connect(address, runner) {
    return new Contract(address, _abi63, runner);
  }
};
OptionsBuilder__factory.bytecode = _bytecode17;
OptionsBuilder__factory.abi = _abi63;

// src/typechain/factories/artifacts/contracts/oapp/contracts/standards/index.ts
var standards_exports = {};
__export(standards_exports, {
  oft: () => oft_exports,
  precrime: () => precrime_exports
});

// src/typechain/factories/artifacts/contracts/oapp/contracts/standards/oft/index.ts
var oft_exports = {};
__export(oft_exports, {
  Fee__factory: () => Fee__factory,
  OFTAdapter__factory: () => OFTAdapter__factory,
  OFTCore__factory: () => OFTCore__factory,
  OFT__factory: () => OFT__factory,
  interfaces: () => interfaces_exports5,
  mocks: () => mocks_exports
});

// src/typechain/factories/artifacts/contracts/oapp/contracts/standards/oft/interfaces/index.ts
var interfaces_exports5 = {};
__export(interfaces_exports5, {
  IOFT__factory: () => IOFT__factory
});

// src/typechain/factories/artifacts/contracts/oapp/contracts/standards/oft/interfaces/IOFT__factory.ts
var _abi64 = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountLDSend",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_minAmountLD",
        type: "uint256"
      }
    ],
    name: "AmountSlippage",
    type: "error"
  },
  {
    inputs: [],
    name: "LDMinusSD",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "_toAddress",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountLD",
        type: "uint256"
      }
    ],
    name: "ReceiveOFT",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "_fromAddress",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountLD",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_composeMsg",
        type: "bytes"
      }
    ],
    name: "SendOFT",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_inspector",
        type: "address"
      }
    ],
    name: "SetInspector",
    type: "event"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "to",
            type: "bytes32"
          },
          {
            internalType: "uint256",
            name: "amountLD",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          }
        ],
        internalType: "struct IOFT.SendParam",
        name: "_send",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      },
      {
        internalType: "bool",
        name: "_payInLzToken",
        type: "bool"
      },
      {
        internalType: "bytes",
        name: "_composeMsg",
        type: "bytes"
      }
    ],
    name: "quoteSendFee",
    outputs: [
      {
        internalType: "uint256",
        name: "nativeFee",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "lzTokenFee",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "to",
            type: "bytes32"
          },
          {
            internalType: "uint256",
            name: "amountLD",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          }
        ],
        internalType: "struct IOFT.SendParam",
        name: "_send",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      },
      {
        internalType: "bool",
        name: "_payInLzToken",
        type: "bool"
      },
      {
        internalType: "address payable",
        name: "_refundAddress",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_composeMsg",
        type: "bytes"
      }
    ],
    name: "send",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "nativeFee",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "lzTokenFee",
                type: "uint256"
              }
            ],
            internalType: "struct MessagingFee",
            name: "fee",
            type: "tuple"
          }
        ],
        internalType: "struct MessagingReceipt",
        name: "",
        type: "tuple"
      }
    ],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var IOFT__factory = class {
  static createInterface() {
    return new Interface(_abi64);
  }
  static connect(address, runner) {
    return new Contract(address, _abi64, runner);
  }
};
IOFT__factory.abi = _abi64;

// src/typechain/factories/artifacts/contracts/oapp/contracts/standards/oft/mocks/index.ts
var mocks_exports = {};
__export(mocks_exports, {
  TestOFT__factory: () => TestOFT__factory
});

// src/typechain/factories/artifacts/contracts/oapp/contracts/standards/oft/mocks/TestOFT__factory.ts
var _abi65 = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string"
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string"
      },
      {
        internalType: "uint8",
        name: "_localDecimals",
        type: "uint8"
      },
      {
        internalType: "address",
        name: "_endpoint",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountLDSend",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_minAmountLD",
        type: "uint256"
      }
    ],
    name: "AmountSlippage",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address"
      }
    ],
    name: "EndpointOnly",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidEndpointCall",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidOptions",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "addr",
        type: "bytes32"
      }
    ],
    name: "InvalidPeer",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidPeerState",
    type: "error"
  },
  {
    inputs: [],
    name: "LDMinusSD",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      }
    ],
    name: "NoPeerSet",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "Approval",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "_toAddress",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountLD",
        type: "uint256"
      }
    ],
    name: "ReceiveOFT",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "_fromAddress",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountLD",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_composeMsg",
        type: "bytes"
      }
    ],
    name: "SendOFT",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint16",
            name: "msgType",
            type: "uint16"
          },
          {
            internalType: "bytes",
            name: "options",
            type: "bytes"
          }
        ],
        indexed: false,
        internalType: "struct EnforcedOptionParam[]",
        name: "_enforcedOptions",
        type: "tuple[]"
      }
    ],
    name: "SetEnforcedOption",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_inspector",
        type: "address"
      }
    ],
    name: "SetInspector",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "remoteEid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "peer",
        type: "bytes32"
      }
    ],
    name: "SetPeer",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "precrime",
        type: "address"
      }
    ],
    name: "SetPreCrime",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "Transfer",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        internalType: "address",
        name: "spender",
        type: "address"
      }
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes"
      }
    ],
    name: "callEndpoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "uint16",
        name: "_msgType",
        type: "uint16"
      },
      {
        internalType: "bytes",
        name: "_extraOptions",
        type: "bytes"
      }
    ],
    name: "combineOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "options",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256"
      }
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "endpoint",
    outputs: [
      {
        internalType: "contract ILayerZeroEndpointV2",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        internalType: "uint16",
        name: "msgType",
        type: "uint16"
      }
    ],
    name: "enforcedOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256"
      }
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "inspector",
    outputs: [
      {
        internalType: "contract IInspector",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        internalType: "struct Origin",
        name: "_origin",
        type: "tuple"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      },
      {
        internalType: "address",
        name: "_executor",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_extraData",
        type: "bytes"
      }
    ],
    name: "lzReceive",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    name: "nextNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    name: "peers",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "precrime",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "to",
            type: "bytes32"
          },
          {
            internalType: "uint256",
            name: "amountLD",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          }
        ],
        internalType: "struct IOFT.SendParam",
        name: "_send",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_extraOptions",
        type: "bytes"
      },
      {
        internalType: "bool",
        name: "_payInLzToken",
        type: "bool"
      },
      {
        internalType: "bytes",
        name: "_composeMsg",
        type: "bytes"
      }
    ],
    name: "quoteSendFee",
    outputs: [
      {
        internalType: "uint256",
        name: "nativeFee",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "lzTokenFee",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "safeGetPeer",
    outputs: [
      {
        internalType: "bytes32",
        name: "peer",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "to",
            type: "bytes32"
          },
          {
            internalType: "uint256",
            name: "amountLD",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          }
        ],
        internalType: "struct IOFT.SendParam",
        name: "_send",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_extraOptions",
        type: "bytes"
      },
      {
        internalType: "bool",
        name: "_payInLzToken",
        type: "bool"
      },
      {
        internalType: "address payable",
        name: "_refundAddress",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_composeMsg",
        type: "bytes"
      }
    ],
    name: "send",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "nativeFee",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "lzTokenFee",
                type: "uint256"
              }
            ],
            internalType: "struct MessagingFee",
            name: "fee",
            type: "tuple"
          }
        ],
        internalType: "struct MessagingReceipt",
        name: "msgReceipt",
        type: "tuple"
      }
    ],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint16",
            name: "msgType",
            type: "uint16"
          },
          {
            internalType: "bytes",
            name: "options",
            type: "bytes"
          }
        ],
        internalType: "struct EnforcedOptionParam[]",
        name: "_enforcedOptions",
        type: "tuple[]"
      }
    ],
    name: "setEnforcedOptions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_inspector",
        type: "address"
      }
    ],
    name: "setInspector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_peer",
        type: "bytes32"
      }
    ],
    name: "setPeer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_precrime",
        type: "address"
      }
    ],
    name: "setPreCrime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "sharedDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    stateMutability: "payable",
    type: "receive"
  }
];
var _bytecode18 = "0x60c0604052346200041f57620032e2803803806200001d8162000424565b92833981016080828203126200041f5781516001600160401b0392908381116200041f57826200004f91830162000460565b60209283830151908582116200041f576200006c91840162000460565b9260408301519260ff84168094036200041f57606001516001600160a01b0380821695918690036200041f5760008054336001600160a01b0319821681178355604051929892939091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08980a360805260068510620004105750600519840160ff8111620003fc5760ff16604d8111620003fc57600a0a60a0528251918683116200030357600854926001948585811c95168015620003f1575b83861014620003dd578190601f9586811162000389575b5083908683116001146200032357899262000317575b5050600019600383901b1c191690851b176008555b815196871162000303576009548481811c91168015620002f8575b82821014620002e4578381116200029b575b5080928711600114620002305750948092819286976012979462000224575b50501b916000199060031b1c1916176009555b036200022157604051612e0f9081620004d382396080518181816105a001528181610c21015281816112890152818161145e0152818161241a0152612b10015260a05181818161280a015281816129260152612be50152f35b80fd5b015192503880620001b5565b909591601f19831696600987528287209287905b8982106200028357505083601297981062000269575b505050811b01600955620001c8565b015160001960f88460031b161c191690553880806200025a565b80878596829496860151815501950193019062000244565b6009875281872084808a0160051c820192848b10620002da575b0160051c019085905b828110620002ce57505062000196565b888155018590620002be565b92508192620002b5565b634e487b7160e01b87526022600452602487fd5b90607f169062000184565b634e487b7160e01b86526041600452602486fd5b01519050388062000154565b60088a52848a208894509190601f1984168b5b8782821062000372575050841162000358575b505050811b0160085562000169565b015160001960f88460031b161c1916905538808062000349565b8385015186558b9790950194938401930162000336565b909150600889528389208680850160051c820192868610620003d3575b918991869594930160051c01915b828110620003c45750506200013e565b8b8155859450899101620003b4565b92508192620003a6565b634e487b7160e01b88526022600452602488fd5b94607f169462000127565b634e487b7160e01b86526011600452602486fd5b6384564cb760e01b8152600490fd5b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200044a57604052565b634e487b7160e01b600052604160045260246000fd5b919080601f840112156200041f5782516001600160401b0381116200044a5760209062000496601f8201601f1916830162000424565b928184528282870101116200041f5760005b818110620004be57508260009394955001015290565b8581018301518482018401528201620004a856fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806301ffc9a71461024b57806306fdde0314610246578063095ea7b31461024157806313137d651461023c57806318160ddd1461023757806323b872dd1461023257806326b27f841461022d578063313ce567146102285780633400288b14610223578063395093511461021e57806340c10f19146102195780634e5cbf611461021457806354fd4d501461020f5780635535d4611461020a5780635e280f111461020557806370a0823114610200578063715018a6146101fb5780637d25a05e146101f6578063857749b0146101f15780638da5cb5b146101ec578063950c8a74146101e757806395d89b41146101e2578063a457c2d7146101dd578063a9059cbb146101d8578063b98bd070146101d3578063bb0b6a53146101ce578063bc70b354146101c9578063c07f7c44146101c4578063d4243885146101bf578063dbcd3b91146101ba578063dd62ed3e146101b5578063ecd58732146101b0578063ed2cee9e146101ab578063f2fde38b146101a65763fc0c546a0361000e57611981565b61188d565b611866565b6115f9565b611594565b61138a565b611306565b61115b565b6110e7565b6110ac565b610f22565b610ef8565b610e2e565b610d86565b610d5f565b610d38565b610d1c565b610cf5565b610c83565b610c45565b610c01565b610b7e565b610973565b6108ef565b6108c6565b610863565b6107b5565b610799565b61076f565b61067f565b610661565b610539565b6104d6565b6103be565b34610352576020600319360112610352576004357fffffffff00000000000000000000000000000000000000000000000000000000811680910361035257807f36372b0700000000000000000000000000000000000000000000000000000000602092149081156102c2575b506040519015158152f35b7fd0a6af1c000000000000000000000000000000000000000000000000000000008114915081156102f5575b50386102b7565b7f411386e800000000000000000000000000000000000000000000000000000000811491508115610328575b50386102ee565b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501438610321565b600080fd5b600091031261035257565b60005b8381106103755750506000910152565b8181015183820152602001610365565b90601f19601f6020936103a381518092818752878088019101610362565b0116010190565b9060206103bb928181520190610385565b90565b34610352576000806003193601126104c2576040519080600854906103e28261099b565b80855291602091600191828116908115610477575060011461041f575b61041b8661040f81880382610b3e565b604051918291826103aa565b0390f35b9350600884527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee35b8385106104645750505050810160200161040f8261041b386103ff565b8054868601840152938201938101610447565b87965061041b9794506020935061040f9592507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b8201019293386103ff565b80fd5b6001600160a01b0381160361035257565b34610352576040600319360112610352576105006004356104f6816104c5565b60243590336121c2565b602060405160018152f35b9181601f840112156103525782359167ffffffffffffffff8311610352576020838186019501011161035257565b600319360160e08112610352576060136103525767ffffffffffffffff6084358181116103525761056e90369060040161050b565b909161057b60a4356104c5565b60c4359081116103525761059390369060040161050b565b5050336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001603610631576105d56105d061199c565b6119d0565b916024358093036105ff5761001992506105ed61199c565b506105f66119c4565b5060643561235e565b6040517fc59a4f6400000000000000000000000000000000000000000000000000000000815260048101849052602490fd5b60246040517fab08c09e000000000000000000000000000000000000000000000000000000008152336004820152fd5b34610352576000600319360112610352576020600754604051908152f35b346103525760606003193601126103525760043561069c816104c5565b6024356106a8816104c5565b604435906001600160a01b03831660005260066020526106df336040600020906001600160a01b0316600052602052604060002090565b54926000198403610701575b6106f593506125c0565b60405160018152602090f35b82841061071d57610718836106f5950333836121c2565b6106eb565b606460405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b63ffffffff81160361035257565b346103525760206003193601126103525760206107916004356105d081610761565b604051908152f35b3461035257600060031936011261035257602060405160128152f35b346103525760408060031936011261035257600435906107d482610761565b63ffffffff602435926107e56126ef565b16600092818452600260205280838520541461083a57907fd81b9101f39c530fa8f18e6c9c5a64e4a3d7cb699e959f5d7abb5951c65e318f92918185526002602052808386205582519182526020820152a180f35b600483517f95567661000000000000000000000000000000000000000000000000000000008152fd5b3461035257604060031936011261035257600435610880816104c5565b3360005260066020526108aa816040600020906001600160a01b0316600052602052604060002090565b5460243581018091116108c15761050091336121c2565b611a21565b34610352576040600319360112610352576100196004356108e6816104c5565b60243590612747565b34610352576020600319360112610352577ff8b6b91dd680bf19d37570578ae915537e6e8cd2106736ad3ca05b30447a72b060206001600160a01b03600435610937816104c5565b61093f6126ef565b16807fffffffffffffffffffffffff00000000000000000000000000000000000000006004541617600455604051908152a1005b3461035257600060031936011261035257602060405160018152f35b61ffff81160361035257565b90600182811c921680156109e4575b60208310146109b557565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f16916109aa565b8054600093926109fd8261099b565b91828252602093600191600181169081600014610a655750600114610a24575b5050505050565b90939495506000929192528360002092846000945b838610610a5157505050500101903880808080610a1d565b805485870183015294019385908201610a39565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168685015250505090151560051b010191503880808080610a1d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60a0810190811067ffffffffffffffff821117610aed57604052565b610aa2565b6060810190811067ffffffffffffffff821117610aed57604052565b6040810190811067ffffffffffffffff821117610aed57604052565b67ffffffffffffffff8111610aed57604052565b90601f601f19910116810190811067ffffffffffffffff821117610aed57604052565b90610b7c610b7592604051938480926109ee565b0383610b3e565b565b346103525760406003193601126103525761041b610be6610bed610bda600435610ba781610761565b63ffffffff60243591610bb98361098f565b16600052600160205260406000209061ffff16600052602052604060002090565b604051928380926109ee565b0382610b3e565b604051918291602083526020830190610385565b346103525760006003193601126103525760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b34610352576020600319360112610352576001600160a01b03600435610c6a816104c5565b1660005260056020526020604060002054604051908152f35b34610352576000806003193601126104c257610c9d6126ef565b806001600160a01b0381547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b3461035257604060031936011261035257610d11600435610761565b602060405160008152f35b3461035257600060031936011261035257602060405160068152f35b346103525760006003193601126103525760206001600160a01b0360005416604051908152f35b346103525760006003193601126103525760206001600160a01b0360035416604051908152f35b34610352576000806003193601126104c257604051908060095490610daa8261099b565b808552916020916001918281169081156104775750600114610dd65761041b8661040f81880382610b3e565b9350600984527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af5b838510610e1b5750505050810160200161040f8261041b386103ff565b8054868601840152938201938101610dfe565b3461035257604060031936011261035257600435610e4b816104c5565b60243590336000526006602052610e79816040600020906001600160a01b0316600052602052604060002090565b5491808310610e8e576106f5920390336121c2565b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b3461035257604060031936011261035257610500600435610f18816104c5565b60243590336125c0565b34610352576020806003193601126103525760049060043567ffffffffffffffff918282116103525736602383011215610352578160040135928311610352576024820191602436918560051b01011161035257610f7e6126ef565b60005b838110610fbe576040517fadc065f6ee2d84e4fc04873c88fe72b002dd1bf2faa49da18167494e909ca7e89080610fb9878783611cf1565b0390a1005b610fc9818585611a7f565b6003610fff610ff8610ff2610fec610fe660409687810190611ac4565b90611b15565b90611b5e565b60f01c90565b61ffff1690565b03611084579061107e611022600193611019848989611a7f565b90810190611ac4565b9061107961105261103c611037878c8c611a7f565b6119a8565b63ffffffff166000526001602052604060002090565b61106788611061888d8d611a7f565b01611ba2565b61ffff16600052602052604060002090565b611c02565b01610f81565b8590517f0280f177000000000000000000000000000000000000000000000000000000008152fd5b346103525760206003193601126103525763ffffffff6004356110ce81610761565b1660005260026020526020604060002054604051908152f35b346103525760606003193601126103525760043561110481610761565b6024356111108161098f565b6044359067ffffffffffffffff82116103525761041b92611138610bed93369060040161050b565b92909161209f565b600319608091011261035257600490565b8015150361035257565b346103525760e06003193601126103525761117536611140565b67ffffffffffffffff6084358181116103525761119690369060040161050b565b9260a4356111a381611151565b60c435938411610352576111f96111c161127795369060040161050b565b909360409788966111f36060840135976111da89610761565b6111eb8a8601356020870135612801565b953691611e52565b926128d0565b9061120384610761565b61120c84610761565b611215846119d0565b63ffffffff86519561122687610ad1565b1685526020850152848401526060830152151560808201528151809381927fddc28c580000000000000000000000000000000000000000000000000000000083528460048401526044830190612a5b565b30602483015203816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115611301576000916112d4575b508051602091820151925190815290810191909152604090f35b6112f49150823d84116112fa575b6112ec8183610b3e565b810190612a47565b386112ba565b503d6112e2565b612352565b34610352576020600319360112610352577f9bfd6b2fbc3428e14e9b2649314854ca348f45338b458b9a4e576760e7f405d560206001600160a01b0360043561134e816104c5565b6113566126ef565b16807fffffffffffffffffffffffff00000000000000000000000000000000000000006003541617600355604051908152a1005b346103525760206003193601126103525760043567ffffffffffffffff8111610352576113bb90369060040161050b565b906113c46126ef565b7fffffffff000000000000000000000000000000000000000000000000000000006113ef8383612101565b167f20efd72200000000000000000000000000000000000000000000000000000000811490811561156a575b8115611540575b8115611516575b81156114ec575b81156114c2575b501561149857600091829161145160405180938193611ebc565b0390826001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1611488612145565b901561149057005b602081519101fd5b60046040517f0fbdec0a000000000000000000000000000000000000000000000000000000008152fd5b7feaeacd630000000000000000000000000000000000000000000000000000000091501438611437565b7f965183d40000000000000000000000000000000000000000000000000000000081149150611430565b7f66bf43d60000000000000000000000000000000000000000000000000000000081149150611429565b7fe16f964d0000000000000000000000000000000000000000000000000000000081149150611422565b7fb8849ac9000000000000000000000000000000000000000000000000000000008114915061141b565b346103525760406003193601126103525760206115f06004356115b6816104c5565b6001600160a01b03602435916115cb836104c5565b16600052600683526040600020906001600160a01b0316600052602052604060002090565b54604051908152f35b6101006003193601126103525761160f36611140565b67ffffffffffffffff906084358281116103525761163190369060040161050b565b919060a43561163f81611151565b60c4359461164c866104c5565b60e4359081116103525761166490369060040161050b565b94909161166f612175565b5060409460608101926116828435610761565b611693878301356020840135612801565b9533156117fd576117ad936117628861041b9c957f9ae5a085fcdd3a841fd4b8e8f114073db75391319202e87af5e7fe2fd6889cd898956117a6956111f38f8f9060008f92886116f6336001600160a01b03166000526005602052604060002090565b5461170382821015612d68565b03611721336001600160a01b03166000526005602052604060002090565b5561172f8960075403600755565b5188815233907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602090a33691611e52565b906117786105d0611772876119a8565b966119a8565b61178f611783611e29565b63ffffffff9097168752565b60208601528a850152606084015215156080830152565b3490612aac565b948551926117c186519283923397846121ab565b0390a3519182918291909160606020604060808401958051855267ffffffffffffffff8382015116838601520151805160408501520151910152565b6084885162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152fd5b346103525760006003193601126103525760206001600160a01b0360045416604051908152f35b34610352576020600319360112610352576004356118aa816104c5565b6118b26126ef565b6001600160a01b038091168015611917576000918254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b608460405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b34610352576000600319360112610352576020604051308152f35b6004356103bb81610761565b356103bb81610761565b67ffffffffffffffff81160361035257565b6044356103bb816119b2565b63ffffffff16908160005260026020526040600020549182156119f05750565b602490604051907f196fb6c00000000000000000000000000000000000000000000000000000000082526004820152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9190811015611abf5760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa181360301821215610352570190565b611a50565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610352570180359067ffffffffffffffff82116103525760200191813603831361035257565b906002116103525790600290565b909291928360021161035257831161035257600201917ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0190565b7fffff0000000000000000000000000000000000000000000000000000000000009035818116939260028110611b9357505050565b60020360031b82901b16169150565b356103bb8161098f565b90601f8111611bba57505050565b6000916000526020600020906020601f850160051c83019410611bf8575b601f0160051c01915b828110611bed57505050565b818155600101611be1565b9092508290611bd8565b90929167ffffffffffffffff8111610aed57611c2881611c22845461099b565b84611bac565b6000601f8211600114611c68578190611c59939495600092611c5d575b50506000198260011b9260031b1c19161790565b9055565b013590503880611c45565b601f19821694611c7d84600052602060002090565b91805b878110611cb8575083600195969710611c9e575b505050811b019055565b60001960f88560031b161c19910135169055388080611c94565b90926020600181928686013581550194019101611c80565b601f8260209493601f19938186528686013760008582860101520116010190565b916020908082850183865252604091604085019460408360051b82010195856000925b858410611d2657505050505050505090565b90919293949596977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc082820301845288357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18436030181121561035257830160609063ffffffff8135611d9881610761565b16835261ffff88820135611dab8161098f565b1688840152898101357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561035257019087823592019267ffffffffffffffff8311610352578236038413610352576001938993838386958f611e179601520191611cd0565b9a019401940192969594939190611d14565b60405190610b7c82610ad1565b67ffffffffffffffff8111610aed57601f01601f191660200190565b929192611e5e82611e36565b91611e6c6040519384610b3e565b829481845281830111610352578281602093846000960137010152565b805115611abf5760200190565b805160011015611abf5760210190565b91909161ffff808094169116019182116108c157565b908092918237016000815290565b60209083610b7c939594956040519683611eed8995518092888089019101610362565b8401918583013701600083820152038085520183610b3e565b919081611f44575050611f3f611f2f6103bb9263ffffffff166000526001602052604060002090565b6001600052602052604060002090565b610b61565b9091611f3f611f2f611f669263ffffffff166000526001602052604060002090565b80519091901561203757611f80610ff2610fec8584611b15565b61ffff611ff2610ff8611fda611fd0611fca611fc4611f9e8a611e89565b517fff000000000000000000000000000000000000000000000000000000000000001690565b60f81c90565b60ff1690565b60081b61ff001690565b611fec611fca611fc4611f9e8a611e96565b90611ea6565b91160361200d57826103bb9361200792611b23565b91611eca565b60046040517f0280f177000000000000000000000000000000000000000000000000000000008152fd5b90506103bb913691611e52565b91908161207d575050611f3f61206d6103bb9263ffffffff166000526001602052604060002090565b6002600052602052604060002090565b9091611f3f61206d611f669263ffffffff166000526001602052604060002090565b90929091816120de5750506103bb916120cb611f3f9263ffffffff166000526001602052604060002090565b9061ffff16600052602052604060002090565b91611f6691936120cb611f3f9263ffffffff166000526001602052604060002090565b7fffffffff00000000000000000000000000000000000000000000000000000000903581811693926004811061213657505050565b60040360031b82901b16169150565b3d15612170573d9061215682611e36565b916121646040519384610b3e565b82523d6000602084013e565b606090565b6040519061218282610af2565b816000815260006020820152604080519161219c83610b0e565b60008352600060208401520152565b6040906103bb949281528160208201520191611cd0565b906001600160a01b03918281169283156122bd578216938415612253578061223d7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259461222561224e956001600160a01b03166000526006602052604060002090565b906001600160a01b0316600052602052604060002090565b556040519081529081906020820190565b0390a3565b608460405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b6103bb93926001600160a01b036080931682526020820152600060408201528160608201520190610385565b6040513d6000823e3d90fd5b909161237961236d8285612ba5565b6001600160a01b031690565b9061238c6123878286612bb1565b612bd6565b809461239661199c565b506123a18285612747565b602883116123e9575b5050604051938452506001600160a01b0316917ffc1b5feb636aa495ed28914895ca443adffbd4e2da951d5694baa392b4ebd15890806020810161224e565b9061240f92916124096123fa6119c4565b9361240361199c565b92612c0b565b92612c45565b906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016803b15610352576124816000939184926040519586809481937f7cb590120000000000000000000000000000000000000000000000000000000083528a8960048501612326565b03925af1908115611301577ffc1b5feb636aa495ed28914895ca443adffbd4e2da951d5694baa392b4ebd158926001600160a01b03926124c5575b859193506123aa565b806124d26124d892610b2a565b80610357565b386124bc565b156124e557565b608460405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b1561255657565b608460405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b91906001600160a01b03908184169283156126855761266f827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9461224e94169661260c8815156124de565b6126558461262d836001600160a01b03166000526005602052604060002090565b5461263a8282101561254f565b03916001600160a01b03166000526005602052604060002090565b556001600160a01b03166000526005602052604060002090565b8054820190556040519081529081906020820190565b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b6001600160a01b0360005416330361270357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b906001600160a01b0382169182156127bd57600754908282018092116108c1576000926127ae6020927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef946007556001600160a01b03166000526005602052604060002090565b818154019055604051908152a3565b606460405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b612835906128307f00000000000000000000000000000000000000000000000000000000000000008092612ccf565b612bc3565b90808210612841575090565b6040517fac7247ca00000000000000000000000000000000000000000000000000000000815260048101929092526024820152604490fd5b60209291815261289182518093858085019101610362565b010190565b9081602091031261035257516103bb81611151565b90916128c26103bb93604084526040840190610385565b916020818403910152610385565b909161295f93805115156000146129fc576129226129589261290261291061294b946040519283913360208401612879565b03601f198101835282610b3e565b9561291d606087016119a8565b612044565b955b7f000000000000000000000000000000000000000000000000000000000000000090612ccf565b67ffffffffffffffff1690565b9035612d08565b9161297561236d6004546001600160a01b031690565b6001600160a01b0381166129865750565b602060405180927f043a78eb00000000000000000000000000000000000000000000000000000000825281806129c0888a600484016128ab565b03915afa8015611301576129d15750565b6129f29060203d6020116129f5575b6129ea8183610b3e565b810190612896565b50565b503d6129e0565b92612a196129589261294b92612a14606087016119a8565b611f06565b95612924565b919082604091031261035257604051612a3781610b0e565b6020808294805184520151910152565b90604082820312610352576103bb91612a1f565b9063ffffffff825116815260208201516020820152608080612aa1612a8f604086015160a0604087015260a0860190610385565b60608601518582036060870152610385565b930151151591015290565b90608091612ab8612175565b50612b056001600160a01b03928392604051968795869485937f2637a450000000000000000000000000000000000000000000000000000000008552604060048601526044850190612a5b565b9116602483015203927f0000000000000000000000000000000000000000000000000000000000000000165af190811561130157600091612b44575090565b905060803d608011612b9e575b612b5b8183610b3e565b810160808282031261035257612b96906040805193612b7985610af2565b805185526020810151612b8b816119b2565b602086015201612a1f565b604082015290565b503d612b51565b90602011610352573590565b90602811610352576020013560c01c90565b818102929181159184041417156108c157565b6103bb9067ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000009116612bc3565b9080602811610352576103bb9160287fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd83693019101611e52565b7fffffffffffffffff000000000000000000000000000000000000000000000000936103bb937fffffffff00000000000000000000000000000000000000000000000000000000604c9460405197889560c01b16602086015260e01b166028840152602c830152612cbf8151809260208686019101610362565b810103602c810184520182610b3e565b8115612cd9570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6048906103bb92937fffffffffffffffff000000000000000000000000000000000000000000000000604051958693602085015260c01b166040830152612d588151809260208686019101610362565b8101036028810184520182610b3e565b15612d6f57565b608460405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152fdfea2646970667358221220eda8723ec2f14d41eb18784cbe9bc15f7883cfddb8aa248c75684f335b04294d64736f6c63430008160033";
var isSuperArgs18 = (xs) => xs.length > 1;
var TestOFT__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs18(args)) {
      super(...args);
    } else {
      super(_abi65, _bytecode18, args[0]);
    }
  }
  getDeployTransaction(_name, _symbol, _localDecimals, _endpoint, overrides) {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _localDecimals,
      _endpoint,
      overrides || {}
    );
  }
  deploy(_name, _symbol, _localDecimals, _endpoint, overrides) {
    return super.deploy(
      _name,
      _symbol,
      _localDecimals,
      _endpoint,
      overrides || {}
    );
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi65);
  }
  static connect(address, runner) {
    return new Contract(address, _abi65, runner);
  }
};
TestOFT__factory.bytecode = _bytecode18;
TestOFT__factory.abi = _abi65;

// src/typechain/factories/artifacts/contracts/oapp/contracts/standards/oft/Fee__factory.ts
var _abi66 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "feeBp",
        type: "uint16"
      }
    ],
    name: "SetDefaultFeeBp",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "dstEid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool"
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "feeBp",
        type: "uint16"
      }
    ],
    name: "SetFeeBp",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "feeOwner",
        type: "address"
      }
    ],
    name: "SetFeeOwner",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "isEnabled",
        type: "bool"
      }
    ],
    name: "SetFeesEnabled",
    type: "event"
  },
  {
    inputs: [],
    name: "BP_DENOMINATOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "defaultFeeBp",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    name: "dstEidToFeeBps",
    outputs: [
      {
        internalType: "uint16",
        name: "feeBP",
        type: "uint16"
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "feeOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "quoteOFTFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_feeBp",
        type: "uint16"
      }
    ],
    name: "setDefaultFeeBp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "bool",
        name: "_enabled",
        type: "bool"
      },
      {
        internalType: "uint16",
        name: "_feeBp",
        type: "uint16"
      }
    ],
    name: "setFeeBp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeOwner",
        type: "address"
      }
    ],
    name: "setFeeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var Fee__factory = class {
  static createInterface() {
    return new Interface(_abi66);
  }
  static connect(address, runner) {
    return new Contract(address, _abi66, runner);
  }
};
Fee__factory.abi = _abi66;

// src/typechain/factories/artifacts/contracts/oapp/contracts/standards/oft/OFT__factory.ts
var _abi67 = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string"
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string"
      },
      {
        internalType: "uint8",
        name: "_localDecimals",
        type: "uint8"
      },
      {
        internalType: "address",
        name: "_endpoint",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountLDSend",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_minAmountLD",
        type: "uint256"
      }
    ],
    name: "AmountSlippage",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address"
      }
    ],
    name: "EndpointOnly",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidEndpointCall",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidOptions",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "addr",
        type: "bytes32"
      }
    ],
    name: "InvalidPeer",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidPeerState",
    type: "error"
  },
  {
    inputs: [],
    name: "LDMinusSD",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      }
    ],
    name: "NoPeerSet",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "Approval",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "_toAddress",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountLD",
        type: "uint256"
      }
    ],
    name: "ReceiveOFT",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "_fromAddress",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountLD",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_composeMsg",
        type: "bytes"
      }
    ],
    name: "SendOFT",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint16",
            name: "msgType",
            type: "uint16"
          },
          {
            internalType: "bytes",
            name: "options",
            type: "bytes"
          }
        ],
        indexed: false,
        internalType: "struct EnforcedOptionParam[]",
        name: "_enforcedOptions",
        type: "tuple[]"
      }
    ],
    name: "SetEnforcedOption",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_inspector",
        type: "address"
      }
    ],
    name: "SetInspector",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "remoteEid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "peer",
        type: "bytes32"
      }
    ],
    name: "SetPeer",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "precrime",
        type: "address"
      }
    ],
    name: "SetPreCrime",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "Transfer",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        internalType: "address",
        name: "spender",
        type: "address"
      }
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes"
      }
    ],
    name: "callEndpoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "uint16",
        name: "_msgType",
        type: "uint16"
      },
      {
        internalType: "bytes",
        name: "_extraOptions",
        type: "bytes"
      }
    ],
    name: "combineOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "options",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256"
      }
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "endpoint",
    outputs: [
      {
        internalType: "contract ILayerZeroEndpointV2",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        internalType: "uint16",
        name: "msgType",
        type: "uint16"
      }
    ],
    name: "enforcedOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256"
      }
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "inspector",
    outputs: [
      {
        internalType: "contract IInspector",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        internalType: "struct Origin",
        name: "_origin",
        type: "tuple"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      },
      {
        internalType: "address",
        name: "_executor",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_extraData",
        type: "bytes"
      }
    ],
    name: "lzReceive",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    name: "nextNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    name: "peers",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "precrime",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "to",
            type: "bytes32"
          },
          {
            internalType: "uint256",
            name: "amountLD",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          }
        ],
        internalType: "struct IOFT.SendParam",
        name: "_send",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_extraOptions",
        type: "bytes"
      },
      {
        internalType: "bool",
        name: "_payInLzToken",
        type: "bool"
      },
      {
        internalType: "bytes",
        name: "_composeMsg",
        type: "bytes"
      }
    ],
    name: "quoteSendFee",
    outputs: [
      {
        internalType: "uint256",
        name: "nativeFee",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "lzTokenFee",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "safeGetPeer",
    outputs: [
      {
        internalType: "bytes32",
        name: "peer",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "to",
            type: "bytes32"
          },
          {
            internalType: "uint256",
            name: "amountLD",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          }
        ],
        internalType: "struct IOFT.SendParam",
        name: "_send",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_extraOptions",
        type: "bytes"
      },
      {
        internalType: "bool",
        name: "_payInLzToken",
        type: "bool"
      },
      {
        internalType: "address payable",
        name: "_refundAddress",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_composeMsg",
        type: "bytes"
      }
    ],
    name: "send",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "nativeFee",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "lzTokenFee",
                type: "uint256"
              }
            ],
            internalType: "struct MessagingFee",
            name: "fee",
            type: "tuple"
          }
        ],
        internalType: "struct MessagingReceipt",
        name: "msgReceipt",
        type: "tuple"
      }
    ],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint16",
            name: "msgType",
            type: "uint16"
          },
          {
            internalType: "bytes",
            name: "options",
            type: "bytes"
          }
        ],
        internalType: "struct EnforcedOptionParam[]",
        name: "_enforcedOptions",
        type: "tuple[]"
      }
    ],
    name: "setEnforcedOptions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_inspector",
        type: "address"
      }
    ],
    name: "setInspector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_peer",
        type: "bytes32"
      }
    ],
    name: "setPeer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_precrime",
        type: "address"
      }
    ],
    name: "setPreCrime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "sharedDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    stateMutability: "payable",
    type: "receive"
  }
];
var _bytecode19 = "0x60c0604052346200041f57620032a9803803806200001d8162000424565b92833981016080828203126200041f5781516001600160401b0392908381116200041f57826200004f91830162000460565b60209283830151908582116200041f576200006c91840162000460565b9260408301519260ff84168094036200041f57606001516001600160a01b0380821695918690036200041f5760008054336001600160a01b0319821681178355604051929892939091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08980a360805260068510620004105750600519840160ff8111620003fc5760ff16604d8111620003fc57600a0a60a0528251918683116200030357600854926001948585811c95168015620003f1575b83861014620003dd578190601f9586811162000389575b5083908683116001146200032357899262000317575b5050600019600383901b1c191690851b176008555b815196871162000303576009548481811c91168015620002f8575b82821014620002e4578381116200029b575b5080928711600114620002305750948092819286976012979462000224575b50501b916000199060031b1c1916176009555b036200022157604051612dd69081620004d3823960805181818161059001528181610be80152818161125001528181611425015281816123e10152612a1d015260a051818181612717015281816128330152612af20152f35b80fd5b015192503880620001b5565b909591601f19831696600987528287209287905b8982106200028357505083601297981062000269575b505050811b01600955620001c8565b015160001960f88460031b161c191690553880806200025a565b80878596829496860151815501950193019062000244565b6009875281872084808a0160051c820192848b10620002da575b0160051c019085905b828110620002ce57505062000196565b888155018590620002be565b92508192620002b5565b634e487b7160e01b87526022600452602487fd5b90607f169062000184565b634e487b7160e01b86526041600452602486fd5b01519050388062000154565b60088a52848a208894509190601f1984168b5b8782821062000372575050841162000358575b505050811b0160085562000169565b015160001960f88460031b161c1916905538808062000349565b8385015186558b9790950194938401930162000336565b909150600889528389208680850160051c820192868610620003d3575b918991869594930160051c01915b828110620003c45750506200013e565b8b8155859450899101620003b4565b92508192620003a6565b634e487b7160e01b88526022600452602488fd5b94607f169462000127565b634e487b7160e01b86526011600452602486fd5b6384564cb760e01b8152600490fd5b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200044a57604052565b634e487b7160e01b600052604160045260246000fd5b919080601f840112156200041f5782516001600160401b0381116200044a5760209062000496601f8201601f1916830162000424565b928184528282870101116200041f5760005b818110620004be57508260009394955001015290565b8581018301518482018401528201620004a856fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806301ffc9a71461023b57806306fdde0314610236578063095ea7b31461023157806313137d651461022c57806318160ddd1461022757806323b872dd1461022257806326b27f841461021d578063313ce567146102185780633400288b14610213578063395093511461020e5780634e5cbf611461020957806354fd4d50146102045780635535d461146101ff5780635e280f11146101fa57806370a08231146101f5578063715018a6146101f05780637d25a05e146101eb578063857749b0146101e65780638da5cb5b146101e1578063950c8a74146101dc57806395d89b41146101d7578063a457c2d7146101d2578063a9059cbb146101cd578063b98bd070146101c8578063bb0b6a53146101c3578063bc70b354146101be578063c07f7c44146101b9578063d4243885146101b4578063dbcd3b91146101af578063dd62ed3e146101aa578063ecd58732146101a5578063ed2cee9e146101a0578063f2fde38b1461019b5763fc0c546a0361000e57611948565b611854565b61182d565b6115c0565b61155b565b611351565b6112cd565b611122565b6110ae565b611073565b610ee9565b610ebf565b610df5565b610d4d565b610d26565b610cff565b610ce3565b610cbc565b610c4a565b610c0c565b610bc8565b610b45565b61093a565b6108b6565b610853565b6107a5565b610789565b61075f565b61066f565b610651565b610529565b6104c6565b6103ae565b34610342576020600319360112610342576004357fffffffff00000000000000000000000000000000000000000000000000000000811680910361034257807f36372b0700000000000000000000000000000000000000000000000000000000602092149081156102b2575b506040519015158152f35b7fd0a6af1c000000000000000000000000000000000000000000000000000000008114915081156102e5575b50386102a7565b7f411386e800000000000000000000000000000000000000000000000000000000811491508115610318575b50386102de565b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501438610311565b600080fd5b600091031261034257565b60005b8381106103655750506000910152565b8181015183820152602001610355565b90601f19601f60209361039381518092818752878088019101610352565b0116010190565b9060206103ab928181520190610375565b90565b34610342576000806003193601126104b2576040519080600854906103d282610962565b80855291602091600191828116908115610467575060011461040f575b61040b866103ff81880382610b05565b6040519182918261039a565b0390f35b9350600884527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee35b838510610454575050505081016020016103ff8261040b386103ef565b8054868601840152938201938101610437565b87965061040b979450602093506103ff9592507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b8201019293386103ef565b80fd5b6001600160a01b0381160361034257565b34610342576040600319360112610342576104f06004356104e6816104b5565b6024359033612189565b602060405160018152f35b9181601f840112156103425782359167ffffffffffffffff8311610342576020838186019501011161034257565b600319360160e08112610342576060136103425767ffffffffffffffff6084358181116103425761055e9036906004016104fb565b909161056b60a4356104b5565b60c435908111610342576105839036906004016104fb565b5050336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001603610621576105c56105c0611963565b611997565b916024358093036105ef5761001992506105dd611963565b506105e661198b565b50606435612325565b6040517fc59a4f6400000000000000000000000000000000000000000000000000000000815260048101849052602490fd5b60246040517fab08c09e000000000000000000000000000000000000000000000000000000008152336004820152fd5b34610342576000600319360112610342576020600754604051908152f35b346103425760606003193601126103425760043561068c816104b5565b602435610698816104b5565b604435906001600160a01b03831660005260066020526106cf336040600020906001600160a01b0316600052602052604060002090565b549260001984036106f1575b6106e59350612587565b60405160018152602090f35b82841061070d57610708836106e595033383612189565b6106db565b606460405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b63ffffffff81160361034257565b346103425760206003193601126103425760206107816004356105c081610751565b604051908152f35b3461034257600060031936011261034257602060405160128152f35b346103425760408060031936011261034257600435906107c482610751565b63ffffffff602435926107d56126b6565b16600092818452600260205280838520541461082a57907fd81b9101f39c530fa8f18e6c9c5a64e4a3d7cb699e959f5d7abb5951c65e318f92918185526002602052808386205582519182526020820152a180f35b600483517f95567661000000000000000000000000000000000000000000000000000000008152fd5b3461034257604060031936011261034257600435610870816104b5565b33600052600660205261089a816040600020906001600160a01b0316600052602052604060002090565b5460243581018091116108b1576104f09133612189565b6119e8565b34610342576020600319360112610342577ff8b6b91dd680bf19d37570578ae915537e6e8cd2106736ad3ca05b30447a72b060206001600160a01b036004356108fe816104b5565b6109066126b6565b16807fffffffffffffffffffffffff00000000000000000000000000000000000000006004541617600455604051908152a1005b3461034257600060031936011261034257602060405160018152f35b61ffff81160361034257565b90600182811c921680156109ab575b602083101461097c57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691610971565b8054600093926109c482610962565b91828252602093600191600181169081600014610a2c57506001146109eb575b5050505050565b90939495506000929192528360002092846000945b838610610a18575050505001019038808080806109e4565b805485870183015294019385908201610a00565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168685015250505090151560051b0101915038808080806109e4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60a0810190811067ffffffffffffffff821117610ab457604052565b610a69565b6060810190811067ffffffffffffffff821117610ab457604052565b6040810190811067ffffffffffffffff821117610ab457604052565b67ffffffffffffffff8111610ab457604052565b90601f601f19910116810190811067ffffffffffffffff821117610ab457604052565b90610b43610b3c92604051938480926109b5565b0383610b05565b565b346103425760406003193601126103425761040b610bad610bb4610ba1600435610b6e81610751565b63ffffffff60243591610b8083610956565b16600052600160205260406000209061ffff16600052602052604060002090565b604051928380926109b5565b0382610b05565b604051918291602083526020830190610375565b346103425760006003193601126103425760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b34610342576020600319360112610342576001600160a01b03600435610c31816104b5565b1660005260056020526020604060002054604051908152f35b34610342576000806003193601126104b257610c646126b6565b806001600160a01b0381547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b3461034257604060031936011261034257610cd8600435610751565b602060405160008152f35b3461034257600060031936011261034257602060405160068152f35b346103425760006003193601126103425760206001600160a01b0360005416604051908152f35b346103425760006003193601126103425760206001600160a01b0360035416604051908152f35b34610342576000806003193601126104b257604051908060095490610d7182610962565b808552916020916001918281169081156104675750600114610d9d5761040b866103ff81880382610b05565b9350600984527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af5b838510610de2575050505081016020016103ff8261040b386103ef565b8054868601840152938201938101610dc5565b3461034257604060031936011261034257600435610e12816104b5565b60243590336000526006602052610e40816040600020906001600160a01b0316600052602052604060002090565b5491808310610e55576106e592039033612189565b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b34610342576040600319360112610342576104f0600435610edf816104b5565b6024359033612587565b34610342576020806003193601126103425760049060043567ffffffffffffffff918282116103425736602383011215610342578160040135928311610342576024820191602436918560051b01011161034257610f456126b6565b60005b838110610f85576040517fadc065f6ee2d84e4fc04873c88fe72b002dd1bf2faa49da18167494e909ca7e89080610f80878783611cb8565b0390a1005b610f90818585611a46565b6003610fc6610fbf610fb9610fb3610fad60409687810190611a8b565b90611adc565b90611b25565b60f01c90565b61ffff1690565b0361104b5790611045610fe9600193610fe0848989611a46565b90810190611a8b565b90611040611019611003610ffe878c8c611a46565b61196f565b63ffffffff166000526001602052604060002090565b61102e88611028888d8d611a46565b01611b69565b61ffff16600052602052604060002090565b611bc9565b01610f48565b8590517f0280f177000000000000000000000000000000000000000000000000000000008152fd5b346103425760206003193601126103425763ffffffff60043561109581610751565b1660005260026020526020604060002054604051908152f35b34610342576060600319360112610342576004356110cb81610751565b6024356110d781610956565b6044359067ffffffffffffffff82116103425761040b926110ff610bb49336906004016104fb565b929091612066565b600319608091011261034257600490565b8015150361034257565b346103425760e06003193601126103425761113c36611107565b67ffffffffffffffff6084358181116103425761115d9036906004016104fb565b9260a43561116a81611118565b60c435938411610342576111c061118861123e9536906004016104fb565b909360409788966111ba6060840135976111a189610751565b6111b28a860135602087013561270e565b953691611e19565b926127dd565b906111ca84610751565b6111d384610751565b6111dc84611997565b63ffffffff8651956111ed87610a98565b1685526020850152848401526060830152151560808201528151809381927fddc28c580000000000000000000000000000000000000000000000000000000083528460048401526044830190612968565b30602483015203816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156112c85760009161129b575b508051602091820151925190815290810191909152604090f35b6112bb9150823d84116112c1575b6112b38183610b05565b810190612954565b38611281565b503d6112a9565b612319565b34610342576020600319360112610342577f9bfd6b2fbc3428e14e9b2649314854ca348f45338b458b9a4e576760e7f405d560206001600160a01b03600435611315816104b5565b61131d6126b6565b16807fffffffffffffffffffffffff00000000000000000000000000000000000000006003541617600355604051908152a1005b346103425760206003193601126103425760043567ffffffffffffffff8111610342576113829036906004016104fb565b9061138b6126b6565b7fffffffff000000000000000000000000000000000000000000000000000000006113b683836120c8565b167f20efd722000000000000000000000000000000000000000000000000000000008114908115611531575b8115611507575b81156114dd575b81156114b3575b8115611489575b501561145f57600091829161141860405180938193611e83565b0390826001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af161144f61210c565b901561145757005b602081519101fd5b60046040517f0fbdec0a000000000000000000000000000000000000000000000000000000008152fd5b7feaeacd6300000000000000000000000000000000000000000000000000000000915014386113fe565b7f965183d400000000000000000000000000000000000000000000000000000000811491506113f7565b7f66bf43d600000000000000000000000000000000000000000000000000000000811491506113f0565b7fe16f964d00000000000000000000000000000000000000000000000000000000811491506113e9565b7fb8849ac900000000000000000000000000000000000000000000000000000000811491506113e2565b346103425760406003193601126103425760206115b760043561157d816104b5565b6001600160a01b0360243591611592836104b5565b16600052600683526040600020906001600160a01b0316600052602052604060002090565b54604051908152f35b610100600319360112610342576115d636611107565b67ffffffffffffffff90608435828111610342576115f89036906004016104fb565b919060a43561160681611118565b60c43594611613866104b5565b60e4359081116103425761162b9036906004016104fb565b94909161163661213c565b5060409460608101926116498435610751565b61165a87830135602084013561270e565b9533156117c457611774936117298861040b9c957f9ae5a085fcdd3a841fd4b8e8f114073db75391319202e87af5e7fe2fd6889cd8989561176d956111ba8f8f9060008f92886116bd336001600160a01b03166000526005602052604060002090565b546116ca82821015612c75565b036116e8336001600160a01b03166000526005602052604060002090565b556116f68960075403600755565b5188815233907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602090a33691611e19565b9061173f6105c06117398761196f565b9661196f565b61175661174a611df0565b63ffffffff9097168752565b60208601528a850152606084015215156080830152565b34906129b9565b948551926117888651928392339784612172565b0390a3519182918291909160606020604060808401958051855267ffffffffffffffff8382015116838601520151805160408501520151910152565b6084885162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152fd5b346103425760006003193601126103425760206001600160a01b0360045416604051908152f35b3461034257602060031936011261034257600435611871816104b5565b6118796126b6565b6001600160a01b0380911680156118de576000918254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b608460405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b34610342576000600319360112610342576020604051308152f35b6004356103ab81610751565b356103ab81610751565b67ffffffffffffffff81160361034257565b6044356103ab81611979565b63ffffffff16908160005260026020526040600020549182156119b75750565b602490604051907f196fb6c00000000000000000000000000000000000000000000000000000000082526004820152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9190811015611a865760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa181360301821215610342570190565b611a17565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610342570180359067ffffffffffffffff82116103425760200191813603831361034257565b906002116103425790600290565b909291928360021161034257831161034257600201917ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0190565b7fffff0000000000000000000000000000000000000000000000000000000000009035818116939260028110611b5a57505050565b60020360031b82901b16169150565b356103ab81610956565b90601f8111611b8157505050565b6000916000526020600020906020601f850160051c83019410611bbf575b601f0160051c01915b828110611bb457505050565b818155600101611ba8565b9092508290611b9f565b90929167ffffffffffffffff8111610ab457611bef81611be98454610962565b84611b73565b6000601f8211600114611c2f578190611c20939495600092611c24575b50506000198260011b9260031b1c19161790565b9055565b013590503880611c0c565b601f19821694611c4484600052602060002090565b91805b878110611c7f575083600195969710611c65575b505050811b019055565b60001960f88560031b161c19910135169055388080611c5b565b90926020600181928686013581550194019101611c47565b601f8260209493601f19938186528686013760008582860101520116010190565b916020908082850183865252604091604085019460408360051b82010195856000925b858410611ced57505050505050505090565b90919293949596977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc082820301845288357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18436030181121561034257830160609063ffffffff8135611d5f81610751565b16835261ffff88820135611d7281610956565b1688840152898101357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561034257019087823592019267ffffffffffffffff8311610342578236038413610342576001938993838386958f611dde9601520191611c97565b9a019401940192969594939190611cdb565b60405190610b4382610a98565b67ffffffffffffffff8111610ab457601f01601f191660200190565b929192611e2582611dfd565b91611e336040519384610b05565b829481845281830111610342578281602093846000960137010152565b805115611a865760200190565b805160011015611a865760210190565b91909161ffff808094169116019182116108b157565b908092918237016000815290565b60209083610b43939594956040519683611eb48995518092888089019101610352565b8401918583013701600083820152038085520183610b05565b919081611f0b575050611f06611ef66103ab9263ffffffff166000526001602052604060002090565b6001600052602052604060002090565b610b28565b9091611f06611ef6611f2d9263ffffffff166000526001602052604060002090565b805190919015611ffe57611f47610fb9610fb38584611adc565b61ffff611fb9610fbf611fa1611f97611f91611f8b611f658a611e50565b517fff000000000000000000000000000000000000000000000000000000000000001690565b60f81c90565b60ff1690565b60081b61ff001690565b611fb3611f91611f8b611f658a611e5d565b90611e6d565b911603611fd457826103ab93611fce92611aea565b91611e91565b60046040517f0280f177000000000000000000000000000000000000000000000000000000008152fd5b90506103ab913691611e19565b919081612044575050611f066120346103ab9263ffffffff166000526001602052604060002090565b6002600052602052604060002090565b9091611f06612034611f2d9263ffffffff166000526001602052604060002090565b90929091816120a55750506103ab91612092611f069263ffffffff166000526001602052604060002090565b9061ffff16600052602052604060002090565b91611f2d9193612092611f069263ffffffff166000526001602052604060002090565b7fffffffff0000000000000000000000000000000000000000000000000000000090358181169392600481106120fd57505050565b60040360031b82901b16169150565b3d15612137573d9061211d82611dfd565b9161212b6040519384610b05565b82523d6000602084013e565b606090565b6040519061214982610ab9565b816000815260006020820152604080519161216383610ad5565b60008352600060208401520152565b6040906103ab949281528160208201520191611c97565b906001600160a01b039182811692831561228457821693841561221a57806122047f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925946121ec612215956001600160a01b03166000526006602052604060002090565b906001600160a01b0316600052602052604060002090565b556040519081529081906020820190565b0390a3565b608460405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b6103ab93926001600160a01b036080931682526020820152600060408201528160608201520190610375565b6040513d6000823e3d90fd5b90916123406123348285612ab2565b6001600160a01b031690565b9061235361234e8286612abe565b612ae3565b809461235d611963565b506123688285612ce6565b602883116123b0575b5050604051938452506001600160a01b0316917ffc1b5feb636aa495ed28914895ca443adffbd4e2da951d5694baa392b4ebd158908060208101612215565b906123d692916123d06123c161198b565b936123ca611963565b92612b18565b92612b52565b906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016803b15610342576124486000939184926040519586809481937f7cb590120000000000000000000000000000000000000000000000000000000083528a89600485016122ed565b03925af19081156112c8577ffc1b5feb636aa495ed28914895ca443adffbd4e2da951d5694baa392b4ebd158926001600160a01b039261248c575b85919350612371565b8061249961249f92610af1565b80610347565b38612483565b156124ac57565b608460405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b1561251d57565b608460405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b91906001600160a01b039081841692831561264c57612636827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef946122159416966125d38815156124a5565b61261c846125f4836001600160a01b03166000526005602052604060002090565b5461260182821015612516565b03916001600160a01b03166000526005602052604060002090565b556001600160a01b03166000526005602052604060002090565b8054820190556040519081529081906020820190565b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b6001600160a01b036000541633036126ca57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6127429061273d7f00000000000000000000000000000000000000000000000000000000000000008092612bdc565b612ad0565b9080821061274e575090565b6040517fac7247ca00000000000000000000000000000000000000000000000000000000815260048101929092526024820152604490fd5b60209291815261279e82518093858085019101610352565b010190565b9081602091031261034257516103ab81611118565b90916127cf6103ab93604084526040840190610375565b916020818403910152610375565b909161286c93805115156000146129095761282f6128659261280f61281d612858946040519283913360208401612786565b03601f198101835282610b05565b9561282a6060870161196f565b61200b565b955b7f000000000000000000000000000000000000000000000000000000000000000090612bdc565b67ffffffffffffffff1690565b9035612c15565b916128826123346004546001600160a01b031690565b6001600160a01b0381166128935750565b602060405180927f043a78eb00000000000000000000000000000000000000000000000000000000825281806128cd888a600484016127b8565b03915afa80156112c8576128de5750565b6128ff9060203d602011612902575b6128f78183610b05565b8101906127a3565b50565b503d6128ed565b9261292661286592612858926129216060870161196f565b611ecd565b95612831565b91908260409103126103425760405161294481610ad5565b6020808294805184520151910152565b90604082820312610342576103ab9161292c565b9063ffffffff8251168152602082015160208201526080806129ae61299c604086015160a0604087015260a0860190610375565b60608601518582036060870152610375565b930151151591015290565b906080916129c561213c565b50612a126001600160a01b03928392604051968795869485937f2637a450000000000000000000000000000000000000000000000000000000008552604060048601526044850190612968565b9116602483015203927f0000000000000000000000000000000000000000000000000000000000000000165af19081156112c857600091612a51575090565b905060803d608011612aab575b612a688183610b05565b810160808282031261034257612aa3906040805193612a8685610ab9565b805185526020810151612a9881611979565b60208601520161292c565b604082015290565b503d612a5e565b90602011610342573590565b90602811610342576020013560c01c90565b818102929181159184041417156108b157565b6103ab9067ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000009116612ad0565b9080602811610342576103ab9160287fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd83693019101611e19565b7fffffffffffffffff000000000000000000000000000000000000000000000000936103ab937fffffffff00000000000000000000000000000000000000000000000000000000604c9460405197889560c01b16602086015260e01b166028840152602c830152612bcc8151809260208686019101610352565b810103602c810184520182610b05565b8115612be6570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6048906103ab92937fffffffffffffffff000000000000000000000000000000000000000000000000604051958693602085015260c01b166040830152612c658151809260208686019101610352565b8101036028810184520182610b05565b15612c7c57565b608460405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152fd5b906001600160a01b038216918215612d5c57600754908282018092116108b157600092612d4d6020927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef946007556001600160a01b03166000526005602052604060002090565b818154019055604051908152a3565b606460405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fdfea2646970667358221220da7f823eedeaeea3a3e88102e6f7a6d1903ec3939d0d961b666a8be88e17f3de64736f6c63430008160033";
var isSuperArgs19 = (xs) => xs.length > 1;
var OFT__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs19(args)) {
      super(...args);
    } else {
      super(_abi67, _bytecode19, args[0]);
    }
  }
  getDeployTransaction(_name, _symbol, _localDecimals, _endpoint, overrides) {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _localDecimals,
      _endpoint,
      overrides || {}
    );
  }
  deploy(_name, _symbol, _localDecimals, _endpoint, overrides) {
    return super.deploy(
      _name,
      _symbol,
      _localDecimals,
      _endpoint,
      overrides || {}
    );
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi67);
  }
  static connect(address, runner) {
    return new Contract(address, _abi67, runner);
  }
};
OFT__factory.bytecode = _bytecode19;
OFT__factory.abi = _abi67;

// src/typechain/factories/artifacts/contracts/oapp/contracts/standards/oft/OFTAdapter__factory.ts
var _abi68 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address"
      },
      {
        internalType: "uint8",
        name: "_localDecimals",
        type: "uint8"
      },
      {
        internalType: "address",
        name: "_endpoint",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountLDSend",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_minAmountLD",
        type: "uint256"
      }
    ],
    name: "AmountSlippage",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address"
      }
    ],
    name: "EndpointOnly",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidEndpointCall",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidOptions",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "addr",
        type: "bytes32"
      }
    ],
    name: "InvalidPeer",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidPeerState",
    type: "error"
  },
  {
    inputs: [],
    name: "LDMinusSD",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      }
    ],
    name: "NoPeerSet",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "_toAddress",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountLD",
        type: "uint256"
      }
    ],
    name: "ReceiveOFT",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "_fromAddress",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountLD",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_composeMsg",
        type: "bytes"
      }
    ],
    name: "SendOFT",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint16",
            name: "msgType",
            type: "uint16"
          },
          {
            internalType: "bytes",
            name: "options",
            type: "bytes"
          }
        ],
        indexed: false,
        internalType: "struct EnforcedOptionParam[]",
        name: "_enforcedOptions",
        type: "tuple[]"
      }
    ],
    name: "SetEnforcedOption",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_inspector",
        type: "address"
      }
    ],
    name: "SetInspector",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "remoteEid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "peer",
        type: "bytes32"
      }
    ],
    name: "SetPeer",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "precrime",
        type: "address"
      }
    ],
    name: "SetPreCrime",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes"
      }
    ],
    name: "callEndpoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "uint16",
        name: "_msgType",
        type: "uint16"
      },
      {
        internalType: "bytes",
        name: "_extraOptions",
        type: "bytes"
      }
    ],
    name: "combineOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "options",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "endpoint",
    outputs: [
      {
        internalType: "contract ILayerZeroEndpointV2",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        internalType: "uint16",
        name: "msgType",
        type: "uint16"
      }
    ],
    name: "enforcedOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "inspector",
    outputs: [
      {
        internalType: "contract IInspector",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        internalType: "struct Origin",
        name: "_origin",
        type: "tuple"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      },
      {
        internalType: "address",
        name: "_executor",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_extraData",
        type: "bytes"
      }
    ],
    name: "lzReceive",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    name: "nextNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    name: "peers",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "precrime",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "to",
            type: "bytes32"
          },
          {
            internalType: "uint256",
            name: "amountLD",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          }
        ],
        internalType: "struct IOFT.SendParam",
        name: "_send",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_extraOptions",
        type: "bytes"
      },
      {
        internalType: "bool",
        name: "_payInLzToken",
        type: "bool"
      },
      {
        internalType: "bytes",
        name: "_composeMsg",
        type: "bytes"
      }
    ],
    name: "quoteSendFee",
    outputs: [
      {
        internalType: "uint256",
        name: "nativeFee",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "lzTokenFee",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "safeGetPeer",
    outputs: [
      {
        internalType: "bytes32",
        name: "peer",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "to",
            type: "bytes32"
          },
          {
            internalType: "uint256",
            name: "amountLD",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          }
        ],
        internalType: "struct IOFT.SendParam",
        name: "_send",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_extraOptions",
        type: "bytes"
      },
      {
        internalType: "bool",
        name: "_payInLzToken",
        type: "bool"
      },
      {
        internalType: "address payable",
        name: "_refundAddress",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_composeMsg",
        type: "bytes"
      }
    ],
    name: "send",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "nativeFee",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "lzTokenFee",
                type: "uint256"
              }
            ],
            internalType: "struct MessagingFee",
            name: "fee",
            type: "tuple"
          }
        ],
        internalType: "struct MessagingReceipt",
        name: "msgReceipt",
        type: "tuple"
      }
    ],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint16",
            name: "msgType",
            type: "uint16"
          },
          {
            internalType: "bytes",
            name: "options",
            type: "bytes"
          }
        ],
        internalType: "struct EnforcedOptionParam[]",
        name: "_enforcedOptions",
        type: "tuple[]"
      }
    ],
    name: "setEnforcedOptions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_inspector",
        type: "address"
      }
    ],
    name: "setInspector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_peer",
        type: "bytes32"
      }
    ],
    name: "setPeer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_precrime",
        type: "address"
      }
    ],
    name: "setPreCrime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "sharedDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    stateMutability: "payable",
    type: "receive"
  }
];
var _bytecode20 = "0x60e06040908082523462000236576060816200284380380380916200002582856200023b565b83398101031262000236576200003b8162000275565b9060206200005884620000508385016200028a565b930162000275565b60008054336001600160a01b031982168117835587519296929592936001600160a01b039360ff93909285929183167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08b80a316608052169360068510620002275750600519840160ff8111620002135760ff16604d81116200021357600a0a60a052811660c052845163313ce56760e01b838201908152600482526001600160401b03929180880184811182821017620001ff5788525186928392905afa3d15620001f5573d918211620001e1578551916200013f601f8201601f19168501846200023b565b82523d858484013e5b15620001dd578181805181010312620001dd5760ff916200016a91016200028a565b1603620001da5750516125a990816200029a823960805181818161030a0152818161082001528181610cb101528181610e8601528181611c7001526120b5015260a051818181611daf01528181611ecb015261218a015260c0518181816110d9015281816112f801526122130152f35b80fd5b8380fd5b634e487b7160e01b85526041600452602485fd5b6060915062000148565b634e487b7160e01b88526041600452602488fd5b634e487b7160e01b86526011600452602486fd5b6384564cb760e01b8152600490fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200025f57604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200023657565b519060ff82168203620002365756fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806301ffc9a71461018b57806313137d651461018657806326b27f84146101815780633400288b1461017c5780634e5cbf611461017757806354fd4d50146101725780635535d4611461016d5780635e280f1114610168578063715018a6146101635780637d25a05e1461015e578063857749b0146101595780638da5cb5b14610154578063950c8a741461014f578063b98bd0701461014a578063bb0b6a5314610145578063bc70b35414610140578063c07f7c441461013b578063d424388514610136578063dbcd3b9114610131578063ecd587321461012c578063ed2cee9e14610127578063f2fde38b146101225763fc0c546a0361000e576112d8565b6111ca565b6111a3565b610fbc565b610db2565b610d2e565b610b83565b610b0f565b610ad4565b61094a565b610923565b6108fc565b6108e0565b6108b9565b610844565b610800565b61078a565b610544565b6104b5565b610407565b6103dd565b6102a3565b3461025f57602060031936011261025f576004357fffffffff00000000000000000000000000000000000000000000000000000000811680910361025f57807fd0a6af1c0000000000000000000000000000000000000000000000000000000060209214908115610202575b506040519015158152f35b7f411386e800000000000000000000000000000000000000000000000000000000811491508115610235575b50386101f7565b7f01ffc9a7000000000000000000000000000000000000000000000000000000009150143861022e565b600080fd5b9181601f8401121561025f5782359167ffffffffffffffff831161025f576020838186019501011161025f57565b6001600160a01b0381160361025f57565b600319360160e0811261025f5760601361025f5767ffffffffffffffff60843581811161025f576102d8903690600401610264565b90916102e560a435610292565b60c43590811161025f576102fd903690600401610264565b5050336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000160361039f5761033f61033a61131c565b611353565b9160243580930361036957610019925061035761131c565b50610360611347565b50606435611bb9565b6040517fc59a4f6400000000000000000000000000000000000000000000000000000000815260048101849052602490fd5b0390fd5b60246040517fab08c09e000000000000000000000000000000000000000000000000000000008152336004820152fd5b63ffffffff81160361025f57565b3461025f57602060031936011261025f5760206103ff60043561033a816103cf565b604051908152f35b3461025f5760408060031936011261025f5760043590610426826103cf565b63ffffffff60243592610437611d34565b16600092818452600260205280838520541461048c57907fd81b9101f39c530fa8f18e6c9c5a64e4a3d7cb699e959f5d7abb5951c65e318f92918185526002602052808386205582519182526020820152a180f35b600483517f95567661000000000000000000000000000000000000000000000000000000008152fd5b3461025f57602060031936011261025f577ff8b6b91dd680bf19d37570578ae915537e6e8cd2106736ad3ca05b30447a72b060206001600160a01b036004356104fd81610292565b610505611d34565b16807fffffffffffffffffffffffff00000000000000000000000000000000000000006004541617600455604051908152a1005b600091031261025f57565b3461025f57600060031936011261025f57602060405160018152f35b61ffff81160361025f57565b90600182811c921680156105b5575b602083101461058657565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f169161057b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60a0810190811067ffffffffffffffff82111761060a57604052565b6105bf565b6060810190811067ffffffffffffffff82111761060a57604052565b6040810190811067ffffffffffffffff82111761060a57604052565b67ffffffffffffffff811161060a57604052565b90601f601f19910116810190811067ffffffffffffffff82111761060a57604052565b906040519182600082546106918161056c565b9081845260209460019160018116908160001461070157506001146106c2575b5050506106c09250038361065b565b565b600090815285812095935091905b8183106106e95750506106c093508201013880806106b1565b855488840185015294850194879450918301916106d0565b9150506106c09593507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b8201013880806106b1565b60005b8381106107555750506000910152565b8181015183820152602001610745565b90601f19601f60209361078381518092818752878088019101610742565b0116010190565b3461025f57604060031936011261025f576107fc6107e86107e36004356107b0816103cf565b63ffffffff602435916107c283610560565b16600052600160205260406000209061ffff16600052602052604060002090565b61067e565b604051918291602083526020830190610765565b0390f35b3461025f57600060031936011261025f5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461025f576000806003193601126108b65761085e611d34565b806001600160a01b0381547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b3461025f57604060031936011261025f576108d56004356103cf565b602060405160008152f35b3461025f57600060031936011261025f57602060405160068152f35b3461025f57600060031936011261025f5760206001600160a01b0360005416604051908152f35b3461025f57600060031936011261025f5760206001600160a01b0360035416604051908152f35b3461025f5760208060031936011261025f5760049060043567ffffffffffffffff9182821161025f573660238301121561025f57816004013592831161025f576024820191602436918560051b01011161025f576109a6611d34565b60005b8381106109e6576040517fadc065f6ee2d84e4fc04873c88fe72b002dd1bf2faa49da18167494e909ca7e890806109e1878783611681565b0390a1005b6109f18185856113d3565b6003610a27610a20610a1a610a14610a0e60409687810190611418565b90611469565b906114b2565b60f01c90565b61ffff1690565b03610aac5790610aa6610a4a600193610a418489896113d3565b90810190611418565b90610aa1610a7a610a64610a5f878c8c6113d3565b61132b565b63ffffffff166000526001602052604060002090565b610a8f88610a89888d8d6113d3565b016114f6565b61ffff16600052602052604060002090565b611556565b016109a9565b8590517f0280f177000000000000000000000000000000000000000000000000000000008152fd5b3461025f57602060031936011261025f5763ffffffff600435610af6816103cf565b1660005260026020526020604060002054604051908152f35b3461025f57606060031936011261025f57600435610b2c816103cf565b602435610b3881610560565b6044359067ffffffffffffffff821161025f576107fc92610b606107e8933690600401610264565b929091611a5e565b600319608091011261025f57600490565b8015150361025f57565b3461025f5760e060031936011261025f57610b9d36610b68565b67ffffffffffffffff60843581811161025f57610bbe903690600401610264565b9260a435610bcb81610b79565b60c43593841161025f57610c21610be9610c9f953690600401610264565b90936040978896610c1b606084013597610c02896103cf565b610c138a8601356020870135611da6565b9536916117e2565b92611e75565b90610c2b846103cf565b610c34846103cf565b610c3d84611353565b63ffffffff865195610c4e876105ee565b1685526020850152848401526060830152151560808201528151809381927fddc28c580000000000000000000000000000000000000000000000000000000083528460048401526044830190612000565b30602483015203816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610d2957600091610cfc575b508051602091820151925190815290810191909152604090f35b610d1c9150823d8411610d22575b610d14818361065b565b810190611fec565b38610ce2565b503d610d0a565b611bad565b3461025f57602060031936011261025f577f9bfd6b2fbc3428e14e9b2649314854ca348f45338b458b9a4e576760e7f405d560206001600160a01b03600435610d7681610292565b610d7e611d34565b16807fffffffffffffffffffffffff00000000000000000000000000000000000000006003541617600355604051908152a1005b3461025f57602060031936011261025f5760043567ffffffffffffffff811161025f57610de3903690600401610264565b90610dec611d34565b7fffffffff00000000000000000000000000000000000000000000000000000000610e178383611ac0565b167f20efd722000000000000000000000000000000000000000000000000000000008114908115610f92575b8115610f68575b8115610f3e575b8115610f14575b8115610eea575b5015610ec0576000918291610e7960405180938193611880565b0390826001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1610eb0611b04565b9015610eb857005b602081519101fd5b60046040517f0fbdec0a000000000000000000000000000000000000000000000000000000008152fd5b7feaeacd630000000000000000000000000000000000000000000000000000000091501438610e5f565b7f965183d40000000000000000000000000000000000000000000000000000000081149150610e58565b7f66bf43d60000000000000000000000000000000000000000000000000000000081149150610e51565b7fe16f964d0000000000000000000000000000000000000000000000000000000081149150610e4a565b7fb8849ac90000000000000000000000000000000000000000000000000000000081149150610e43565b61010060031936011261025f57610fd236610b68565b67ffffffffffffffff9060843582811161025f57610ff4903690600401610264565b60a4359361100185610b79565b60c4359461100e86610292565b60e43591821161025f576107fc9561110494611149611150936110567f9ae5a085fcdd3a841fd4b8e8f114073db75391319202e87af5e7fe2fd6889cd8963690600401610264565b809a829a9299611064611b34565b50606082019661107488356103cf565b610c1b61108960408501356020860135611da6565b9d8e956110fd6040517f23b872dd000000000000000000000000000000000000000000000000000000006020820152336024820152306044820152886064820152606481526110d7816105ee565b7f0000000000000000000000000000000000000000000000000000000000000000612394565b36916117e2565b9061111a61033a6111148761132b565b9661132b565b6111316111256117b9565b63ffffffff9097168752565b60208601526040850152606084015215156080830152565b3490612051565b93845192611165604051928392339784611b6a565b0390a36040519182918291909160606020604060808401958051855267ffffffffffffffff8382015116838601520151805160408501520151910152565b3461025f57600060031936011261025f5760206001600160a01b0360045416604051908152f35b3461025f57602060031936011261025f576004356111e781610292565b6111ef611d34565b6001600160a01b038091168015611254576000918254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b3461025f57600060031936011261025f5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b600435611328816103cf565b90565b35611328816103cf565b67ffffffffffffffff81160361025f57565b60443561132881611335565b63ffffffff16908160005260026020526040600020549182156113735750565b602490604051907f196fb6c00000000000000000000000000000000000000000000000000000000082526004820152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b91908110156114135760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18136030182121561025f570190565b6113a4565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561025f570180359067ffffffffffffffff821161025f5760200191813603831361025f57565b9060021161025f5790600290565b909291928360021161025f57831161025f57600201917ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0190565b7fffff00000000000000000000000000000000000000000000000000000000000090358181169392600281106114e757505050565b60020360031b82901b16169150565b3561132881610560565b90601f811161150e57505050565b6000916000526020600020906020601f850160051c8301941061154c575b601f0160051c01915b82811061154157505050565b818155600101611535565b909250829061152c565b90929167ffffffffffffffff811161060a5761157c81611576845461056c565b84611500565b6000601f82116001146115da5781906115cb9394956000926115cf575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161790565b9055565b013590503880611599565b601f198216946115ef84600052602060002090565b91805b878110611648575083600195969710611610575b505050811b019055565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88560031b161c19910135169055388080611606565b909260206001819286860135815501940191016115f2565b601f8260209493601f19938186528686013760008582860101520116010190565b916020908082850183865252604091604085019460408360051b82010195856000925b8584106116b657505050505050505090565b90919293949596977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc082820301845288357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18436030181121561025f57830160609063ffffffff8135611728816103cf565b16835261ffff8882013561173b81610560565b1688840152898101357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561025f57019087823592019267ffffffffffffffff831161025f57823603841361025f576001938993838386958f6117a79601520191611660565b9a0194019401929695949391906116a4565b604051906106c0826105ee565b67ffffffffffffffff811161060a57601f01601f191660200190565b9291926117ee826117c6565b916117fc604051938461065b565b82948184528183011161025f578281602093846000960137010152565b8051156114135760200190565b8051600110156114135760210190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b91909161ffff8080941691160191821161187b57565b611836565b908092918237016000815290565b602090836106c09395949560405196836118b18995518092888089019101610742565b840191858301370160008382015203808552018361065b565b9190816119035750506107e36118f36113289263ffffffff166000526001602052604060002090565b6001600052602052604060002090565b90916107e36118f36119259263ffffffff166000526001602052604060002090565b8051909190156119f65761193f610a1a610a148584611469565b61ffff6119b1610a2061199961198f61198961198361195d8a611819565b517fff000000000000000000000000000000000000000000000000000000000000001690565b60f81c90565b60ff1690565b60081b61ff001690565b6119ab61198961198361195d8a611826565b90611865565b9116036119cc5782611328936119c692611477565b9161188e565b60046040517f0280f177000000000000000000000000000000000000000000000000000000008152fd5b90506113289136916117e2565b919081611a3c5750506107e3611a2c6113289263ffffffff166000526001602052604060002090565b6002600052602052604060002090565b90916107e3611a2c6119259263ffffffff166000526001602052604060002090565b9092909181611a9d57505061132891611a8a6107e39263ffffffff166000526001602052604060002090565b9061ffff16600052602052604060002090565b916119259193611a8a6107e39263ffffffff166000526001602052604060002090565b7fffffffff000000000000000000000000000000000000000000000000000000009035818116939260048110611af557505050565b60040360031b82901b16169150565b3d15611b2f573d90611b15826117c6565b91611b23604051938461065b565b82523d6000602084013e565b606090565b60405190611b418261060f565b8160008152600060208201526040805191611b5b8361062b565b60008352600060208401520152565b604090611328949281528160208201520191611660565b61132893926001600160a01b036080931682526020820152600060408201528160608201520190610765565b6040513d6000823e3d90fd5b9091611bd4611bc8828561214a565b6001600160a01b031690565b90611bf9611bea611be58387612156565b61217b565b611bf261131c565b50836121b0565b809460288311611c3f575b5050604051938452506001600160a01b0316917ffc1b5feb636aa495ed28914895ca443adffbd4e2da951d5694baa392b4ebd15890602090a3565b90611c659291611c5f611c50611347565b93611c5961131c565b92612237565b92612271565b906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016803b1561025f57611cd76000939184926040519586809481937f7cb590120000000000000000000000000000000000000000000000000000000083528a8960048501611b81565b03925af1908115610d29577ffc1b5feb636aa495ed28914895ca443adffbd4e2da951d5694baa392b4ebd158926001600160a01b0392611d1b575b85919350611c04565b80611d28611d2e92610647565b80610539565b38611d12565b6001600160a01b03600054163303611d4857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b611dda90611dd57f000000000000000000000000000000000000000000000000000000000000000080926122fb565b612168565b90808210611de6575090565b6040517fac7247ca00000000000000000000000000000000000000000000000000000000815260048101929092526024820152604490fd5b602092918152611e3682518093858085019101610742565b010190565b9081602091031261025f575161132881610b79565b9091611e6761132893604084526040840190610765565b916020818403910152610765565b9091611f049380511515600014611fa157611ec7611efd92611ea7611eb5611ef0946040519283913360208401611e1e565b03601f19810183528261065b565b95611ec26060870161132b565b611a03565b955b7f0000000000000000000000000000000000000000000000000000000000000000906122fb565b67ffffffffffffffff1690565b9035612334565b91611f1a611bc86004546001600160a01b031690565b6001600160a01b038116611f2b5750565b602060405180927f043a78eb0000000000000000000000000000000000000000000000000000000082528180611f65888a60048401611e50565b03915afa8015610d2957611f765750565b611f979060203d602011611f9a575b611f8f818361065b565b810190611e3b565b50565b503d611f85565b92611fbe611efd92611ef092611fb96060870161132b565b6118ca565b95611ec9565b919082604091031261025f57604051611fdc8161062b565b6020808294805184520151910152565b9060408282031261025f5761132891611fc4565b9063ffffffff825116815260208201516020820152608080612046612034604086015160a0604087015260a0860190610765565b60608601518582036060870152610765565b930151151591015290565b9060809161205d611b34565b506120aa6001600160a01b03928392604051968795869485937f2637a450000000000000000000000000000000000000000000000000000000008552604060048601526044850190612000565b9116602483015203927f0000000000000000000000000000000000000000000000000000000000000000165af1908115610d29576000916120e9575090565b905060803d608011612143575b612100818361065b565b810160808282031261025f5761213b90604080519361211e8561060f565b80518552602081015161213081611335565b602086015201611fc4565b604082015290565b503d6120f6565b9060201161025f573590565b9060281161025f576020013560c01c90565b8181029291811591840414171561187b57565b6113289067ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000009116612168565b6001600160a01b03604051917fa9059cbb00000000000000000000000000000000000000000000000000000000602084015216602482015281604482015260448152608081019080821067ffffffffffffffff83111761060a57611328916040527f0000000000000000000000000000000000000000000000000000000000000000612394565b908060281161025f576113289160287fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd836930191016117e2565b7fffffffffffffffff00000000000000000000000000000000000000000000000093611328937fffffffff00000000000000000000000000000000000000000000000000000000604c9460405197889560c01b16602086015260e01b166028840152602c8301526122eb8151809260208686019101610742565b810103602c81018452018261065b565b8115612305570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60489061132892937fffffffffffffffff000000000000000000000000000000000000000000000000604051958693602085015260c01b1660408301526123848151809260208686019101610742565b810103602881018452018261065b565b6040516123f2916001600160a01b03166123ad8261062b565b6000806020958685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152868151910182855af16123ec611b04565b916124a7565b80519082821592831561248f575b5050501561240b5750565b608490604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b61249f9350820181019101611e3b565b388281612400565b9192901561252257508151156124bb575090565b3b156124c45790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b8251909150156125355750805190602001fd5b61039b906040519182917f08c379a000000000000000000000000000000000000000000000000000000000835260206004840152602483019061076556fea2646970667358221220b14997ba6f3523e611bd093ff830c3f9abcef535ee888f7db3cc588c688ee76364736f6c63430008160033";
var isSuperArgs20 = (xs) => xs.length > 1;
var OFTAdapter__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs20(args)) {
      super(...args);
    } else {
      super(_abi68, _bytecode20, args[0]);
    }
  }
  getDeployTransaction(_token, _localDecimals, _endpoint, overrides) {
    return super.getDeployTransaction(
      _token,
      _localDecimals,
      _endpoint,
      overrides || {}
    );
  }
  deploy(_token, _localDecimals, _endpoint, overrides) {
    return super.deploy(
      _token,
      _localDecimals,
      _endpoint,
      overrides || {}
    );
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi68);
  }
  static connect(address, runner) {
    return new Contract(address, _abi68, runner);
  }
};
OFTAdapter__factory.bytecode = _bytecode20;
OFTAdapter__factory.abi = _abi68;

// src/typechain/factories/artifacts/contracts/oapp/contracts/standards/oft/OFTCore__factory.ts
var _abi69 = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountLDSend",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_minAmountLD",
        type: "uint256"
      }
    ],
    name: "AmountSlippage",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address"
      }
    ],
    name: "EndpointOnly",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidEndpointCall",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidOptions",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "addr",
        type: "bytes32"
      }
    ],
    name: "InvalidPeer",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidPeerState",
    type: "error"
  },
  {
    inputs: [],
    name: "LDMinusSD",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      }
    ],
    name: "NoPeerSet",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "_toAddress",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountLD",
        type: "uint256"
      }
    ],
    name: "ReceiveOFT",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        indexed: true,
        internalType: "address",
        name: "_fromAddress",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountLD",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_composeMsg",
        type: "bytes"
      }
    ],
    name: "SendOFT",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint16",
            name: "msgType",
            type: "uint16"
          },
          {
            internalType: "bytes",
            name: "options",
            type: "bytes"
          }
        ],
        indexed: false,
        internalType: "struct EnforcedOptionParam[]",
        name: "_enforcedOptions",
        type: "tuple[]"
      }
    ],
    name: "SetEnforcedOption",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_inspector",
        type: "address"
      }
    ],
    name: "SetInspector",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "remoteEid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "peer",
        type: "bytes32"
      }
    ],
    name: "SetPeer",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "precrime",
        type: "address"
      }
    ],
    name: "SetPreCrime",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes"
      }
    ],
    name: "callEndpoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "uint16",
        name: "_msgType",
        type: "uint16"
      },
      {
        internalType: "bytes",
        name: "_extraOptions",
        type: "bytes"
      }
    ],
    name: "combineOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "options",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "endpoint",
    outputs: [
      {
        internalType: "contract ILayerZeroEndpointV2",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        internalType: "uint16",
        name: "msgType",
        type: "uint16"
      }
    ],
    name: "enforcedOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "inspector",
    outputs: [
      {
        internalType: "contract IInspector",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        internalType: "struct Origin",
        name: "_origin",
        type: "tuple"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      },
      {
        internalType: "address",
        name: "_executor",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_extraData",
        type: "bytes"
      }
    ],
    name: "lzReceive",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    name: "nextNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    name: "peers",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "precrime",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "to",
            type: "bytes32"
          },
          {
            internalType: "uint256",
            name: "amountLD",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          }
        ],
        internalType: "struct IOFT.SendParam",
        name: "_send",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_extraOptions",
        type: "bytes"
      },
      {
        internalType: "bool",
        name: "_payInLzToken",
        type: "bool"
      },
      {
        internalType: "bytes",
        name: "_composeMsg",
        type: "bytes"
      }
    ],
    name: "quoteSendFee",
    outputs: [
      {
        internalType: "uint256",
        name: "nativeFee",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "lzTokenFee",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "safeGetPeer",
    outputs: [
      {
        internalType: "bytes32",
        name: "peer",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "to",
            type: "bytes32"
          },
          {
            internalType: "uint256",
            name: "amountLD",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          }
        ],
        internalType: "struct IOFT.SendParam",
        name: "_send",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_extraOptions",
        type: "bytes"
      },
      {
        internalType: "bool",
        name: "_payInLzToken",
        type: "bool"
      },
      {
        internalType: "address payable",
        name: "_refundAddress",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_composeMsg",
        type: "bytes"
      }
    ],
    name: "send",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "nativeFee",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "lzTokenFee",
                type: "uint256"
              }
            ],
            internalType: "struct MessagingFee",
            name: "fee",
            type: "tuple"
          }
        ],
        internalType: "struct MessagingReceipt",
        name: "msgReceipt",
        type: "tuple"
      }
    ],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint16",
            name: "msgType",
            type: "uint16"
          },
          {
            internalType: "bytes",
            name: "options",
            type: "bytes"
          }
        ],
        internalType: "struct EnforcedOptionParam[]",
        name: "_enforcedOptions",
        type: "tuple[]"
      }
    ],
    name: "setEnforcedOptions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_inspector",
        type: "address"
      }
    ],
    name: "setInspector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_peer",
        type: "bytes32"
      }
    ],
    name: "setPeer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_precrime",
        type: "address"
      }
    ],
    name: "setPreCrime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "sharedDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    stateMutability: "payable",
    type: "receive"
  }
];
var OFTCore__factory = class {
  static createInterface() {
    return new Interface(_abi69);
  }
  static connect(address, runner) {
    return new Contract(address, _abi69, runner);
  }
};
OFTCore__factory.abi = _abi69;

// src/typechain/factories/artifacts/contracts/oapp/contracts/standards/precrime/index.ts
var precrime_exports = {};
__export(precrime_exports, {
  PreCrimeV2Simulator__factory: () => PreCrimeV2Simulator__factory,
  PreCrimeV2__factory: () => PreCrimeV2__factory,
  interfaces: () => interfaces_exports6
});

// src/typechain/factories/artifacts/contracts/oapp/contracts/standards/precrime/interfaces/index.ts
var interfaces_exports6 = {};
__export(interfaces_exports6, {
  IPreCrimeV2Simulator__factory: () => IPreCrimeV2Simulator__factory,
  IPreCrimeV2__factory: () => IPreCrimeV2__factory
});

// src/typechain/factories/artifacts/contracts/oapp/contracts/standards/precrime/interfaces/IPreCrimeV2__factory.ts
var _abi70 = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "crime",
        type: "bytes"
      }
    ],
    name: "CrimeFound",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        internalType: "bytes",
        name: "reason",
        type: "bytes"
      }
    ],
    name: "InvalidSimulationResult",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyOffChain",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "max",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256"
      }
    ],
    name: "PacketOversize",
    type: "error"
  },
  {
    inputs: [],
    name: "PacketUnsorted",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "reason",
        type: "bytes"
      }
    ],
    name: "SimulationFailed",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      }
    ],
    name: "SimulationResultNotFound",
    type: "error"
  },
  {
    inputs: [],
    name: "buildSimulationResult",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_packets",
        type: "bytes[]"
      }
    ],
    name: "getConfig",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_packets",
        type: "bytes[]"
      },
      {
        internalType: "bytes[]",
        name: "_simulations",
        type: "bytes[]"
      }
    ],
    name: "precrime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_packets",
        type: "bytes[]"
      }
    ],
    name: "simulate",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint64",
        name: "major",
        type: "uint64"
      },
      {
        internalType: "uint8",
        name: "minor",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var IPreCrimeV2__factory = class {
  static createInterface() {
    return new Interface(_abi70);
  }
  static connect(address, runner) {
    return new Contract(address, _abi70, runner);
  }
};
IPreCrimeV2__factory.abi = _abi70;

// src/typechain/factories/artifacts/contracts/oapp/contracts/standards/precrime/interfaces/IPreCrimeV2Simulator__factory.ts
var _abi71 = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "result",
        type: "bytes"
      }
    ],
    name: "SimulationResult",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_peer",
        type: "bytes32"
      }
    ],
    name: "isPeer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint32",
                name: "srcEid",
                type: "uint32"
              },
              {
                internalType: "bytes32",
                name: "sender",
                type: "bytes32"
              },
              {
                internalType: "uint64",
                name: "nonce",
                type: "uint64"
              }
            ],
            internalType: "struct Origin",
            name: "origin",
            type: "tuple"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address"
          },
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32"
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes"
          }
        ],
        internalType: "struct InboundPacket[]",
        name: "_packets",
        type: "tuple[]"
      }
    ],
    name: "lzReceiveAndRevert",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [],
    name: "oapp",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var IPreCrimeV2Simulator__factory = class {
  static createInterface() {
    return new Interface(_abi71);
  }
  static connect(address, runner) {
    return new Contract(
      address,
      _abi71,
      runner
    );
  }
};
IPreCrimeV2Simulator__factory.abi = _abi71;

// src/typechain/factories/artifacts/contracts/oapp/contracts/standards/precrime/PreCrimeV2__factory.ts
var _abi72 = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "crime",
        type: "bytes"
      }
    ],
    name: "CrimeFound",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        internalType: "bytes",
        name: "reason",
        type: "bytes"
      }
    ],
    name: "InvalidSimulationResult",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyOffChain",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "max",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256"
      }
    ],
    name: "PacketOversize",
    type: "error"
  },
  {
    inputs: [],
    name: "PacketUnsorted",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "reason",
        type: "bytes"
      }
    ],
    name: "SimulationFailed",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      }
    ],
    name: "SimulationResultNotFound",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    inputs: [],
    name: "buildSimulationResult",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_packets",
        type: "bytes[]"
      }
    ],
    name: "getConfig",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "getPreCrimePeers",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "precrime",
            type: "bytes32"
          },
          {
            internalType: "bytes32",
            name: "oapp",
            type: "bytes32"
          }
        ],
        internalType: "struct PreCrimePeer[]",
        name: "",
        type: "tuple[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "maxBatchSize",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "oapp",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_packets",
        type: "bytes[]"
      },
      {
        internalType: "bytes[]",
        name: "_simulations",
        type: "bytes[]"
      }
    ],
    name: "precrime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_maxBatchSize",
        type: "uint64"
      }
    ],
    name: "setMaxBatchSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "precrime",
            type: "bytes32"
          },
          {
            internalType: "bytes32",
            name: "oapp",
            type: "bytes32"
          }
        ],
        internalType: "struct PreCrimePeer[]",
        name: "_precrimePeers",
        type: "tuple[]"
      }
    ],
    name: "setPreCrimePeers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_packets",
        type: "bytes[]"
      }
    ],
    name: "simulate",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [],
    name: "simulator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint64",
        name: "major",
        type: "uint64"
      },
      {
        internalType: "uint8",
        name: "minor",
        type: "uint8"
      }
    ],
    stateMutability: "pure",
    type: "function"
  }
];
var PreCrimeV2__factory = class {
  static createInterface() {
    return new Interface(_abi72);
  }
  static connect(address, runner) {
    return new Contract(address, _abi72, runner);
  }
};
PreCrimeV2__factory.abi = _abi72;

// src/typechain/factories/artifacts/contracts/oapp/contracts/standards/precrime/PreCrimeV2Simulator__factory.ts
var _abi73 = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "result",
        type: "bytes"
      }
    ],
    name: "SimulationResult",
    type: "error"
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint32",
                name: "srcEid",
                type: "uint32"
              },
              {
                internalType: "bytes32",
                name: "sender",
                type: "bytes32"
              },
              {
                internalType: "uint64",
                name: "nonce",
                type: "uint64"
              }
            ],
            internalType: "struct Origin",
            name: "origin",
            type: "tuple"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address"
          },
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32"
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes"
          }
        ],
        internalType: "struct InboundPacket[]",
        name: "_packets",
        type: "tuple[]"
      }
    ],
    name: "_simulateLzReceive",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_peer",
        type: "bytes32"
      }
    ],
    name: "isPeer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint32",
                name: "srcEid",
                type: "uint32"
              },
              {
                internalType: "bytes32",
                name: "sender",
                type: "bytes32"
              },
              {
                internalType: "uint64",
                name: "nonce",
                type: "uint64"
              }
            ],
            internalType: "struct Origin",
            name: "origin",
            type: "tuple"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address"
          },
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32"
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes"
          }
        ],
        internalType: "struct InboundPacket[]",
        name: "_packets",
        type: "tuple[]"
      }
    ],
    name: "lzReceiveAndRevert",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [],
    name: "oapp",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var PreCrimeV2Simulator__factory = class {
  static createInterface() {
    return new Interface(_abi73);
  }
  static connect(address, runner) {
    return new Contract(
      address,
      _abi73,
      runner
    );
  }
};
PreCrimeV2Simulator__factory.abi = _abi73;

// src/typechain/factories/artifacts/contracts/oapp/contracts/EnforcedOptions__factory.ts
var _abi74 = [
  {
    inputs: [],
    name: "InvalidOptions",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint16",
            name: "msgType",
            type: "uint16"
          },
          {
            internalType: "bytes",
            name: "options",
            type: "bytes"
          }
        ],
        indexed: false,
        internalType: "struct EnforcedOptionParam[]",
        name: "_enforcedOptions",
        type: "tuple[]"
      }
    ],
    name: "SetEnforcedOption",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "uint16",
        name: "_msgType",
        type: "uint16"
      },
      {
        internalType: "bytes",
        name: "_extraOptions",
        type: "bytes"
      }
    ],
    name: "combineOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "options",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        internalType: "uint16",
        name: "msgType",
        type: "uint16"
      }
    ],
    name: "enforcedOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint16",
            name: "msgType",
            type: "uint16"
          },
          {
            internalType: "bytes",
            name: "options",
            type: "bytes"
          }
        ],
        internalType: "struct EnforcedOptionParam[]",
        name: "_enforcedOptions",
        type: "tuple[]"
      }
    ],
    name: "setEnforcedOptions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var EnforcedOptions__factory = class {
  static createInterface() {
    return new Interface(_abi74);
  }
  static connect(address, runner) {
    return new Contract(address, _abi74, runner);
  }
};
EnforcedOptions__factory.abi = _abi74;

// src/typechain/factories/artifacts/contracts/oapp/contracts/OApp__factory.ts
var _abi75 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address"
      }
    ],
    name: "EndpointOnly",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidEndpointCall",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidOptions",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "addr",
        type: "bytes32"
      }
    ],
    name: "InvalidPeer",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidPeerState",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      }
    ],
    name: "NoPeerSet",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint16",
            name: "msgType",
            type: "uint16"
          },
          {
            internalType: "bytes",
            name: "options",
            type: "bytes"
          }
        ],
        indexed: false,
        internalType: "struct EnforcedOptionParam[]",
        name: "_enforcedOptions",
        type: "tuple[]"
      }
    ],
    name: "SetEnforcedOption",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "remoteEid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "peer",
        type: "bytes32"
      }
    ],
    name: "SetPeer",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "precrime",
        type: "address"
      }
    ],
    name: "SetPreCrime",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes"
      }
    ],
    name: "callEndpoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "uint16",
        name: "_msgType",
        type: "uint16"
      },
      {
        internalType: "bytes",
        name: "_extraOptions",
        type: "bytes"
      }
    ],
    name: "combineOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "options",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "endpoint",
    outputs: [
      {
        internalType: "contract ILayerZeroEndpointV2",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        internalType: "uint16",
        name: "msgType",
        type: "uint16"
      }
    ],
    name: "enforcedOptions",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        internalType: "struct Origin",
        name: "_origin",
        type: "tuple"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      },
      {
        internalType: "address",
        name: "_executor",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_extraData",
        type: "bytes"
      }
    ],
    name: "lzReceive",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    name: "nextNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    name: "peers",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "precrime",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "safeGetPeer",
    outputs: [
      {
        internalType: "bytes32",
        name: "peer",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint16",
            name: "msgType",
            type: "uint16"
          },
          {
            internalType: "bytes",
            name: "options",
            type: "bytes"
          }
        ],
        internalType: "struct EnforcedOptionParam[]",
        name: "_enforcedOptions",
        type: "tuple[]"
      }
    ],
    name: "setEnforcedOptions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_peer",
        type: "bytes32"
      }
    ],
    name: "setPeer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_precrime",
        type: "address"
      }
    ],
    name: "setPreCrime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    stateMutability: "payable",
    type: "receive"
  }
];
var OApp__factory = class {
  static createInterface() {
    return new Interface(_abi75);
  }
  static connect(address, runner) {
    return new Contract(address, _abi75, runner);
  }
};
OApp__factory.abi = _abi75;

// src/typechain/factories/artifacts/contracts/protocol/index.ts
var protocol_exports = {};
__export(protocol_exports, {
  contracts: () => contracts_exports4
});

// src/typechain/factories/artifacts/contracts/protocol/contracts/index.ts
var contracts_exports4 = {};
__export(contracts_exports4, {
  EndpointV2__factory: () => EndpointV2__factory,
  MessageLibManager__factory: () => MessageLibManager__factory,
  MessagingChannel__factory: () => MessagingChannel__factory,
  MessagingComposer__factory: () => MessagingComposer__factory,
  MessagingContext__factory: () => MessagingContext__factory,
  interfaces: () => interfaces_exports7,
  libs: () => libs_exports3,
  messagelib: () => messagelib_exports2
});

// src/typechain/factories/artifacts/contracts/protocol/contracts/interfaces/index.ts
var interfaces_exports7 = {};
__export(interfaces_exports7, {
  ILayerZeroComposer__factory: () => ILayerZeroComposer__factory,
  ILayerZeroEndpointV2__factory: () => ILayerZeroEndpointV2__factory,
  ILayerZeroReceiver__factory: () => ILayerZeroReceiver__factory,
  IMessageLibManager__factory: () => IMessageLibManager__factory,
  IMessageLib__factory: () => IMessageLib__factory,
  IMessagingChannel__factory: () => IMessagingChannel__factory,
  IMessagingComposer__factory: () => IMessagingComposer__factory,
  IMessagingContext__factory: () => IMessagingContext__factory,
  ISendLib__factory: () => ISendLib__factory
});

// src/typechain/factories/artifacts/contracts/protocol/contracts/interfaces/ILayerZeroComposer__factory.ts
var _abi76 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      },
      {
        internalType: "address",
        name: "_executor",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_extraData",
        type: "bytes"
      }
    ],
    name: "lzCompose",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  }
];
var ILayerZeroComposer__factory = class {
  static createInterface() {
    return new Interface(_abi76);
  }
  static connect(address, runner) {
    return new Contract(address, _abi76, runner);
  }
};
ILayerZeroComposer__factory.abi = _abi76;

// src/typechain/factories/artifacts/contracts/protocol/contracts/interfaces/ILayerZeroEndpointV2__factory.ts
var _abi77 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "guid",
        type: "bytes32"
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16"
      }
    ],
    name: "ComposeDelivered",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "guid",
        type: "bytes32"
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes"
      }
    ],
    name: "ComposeSent",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldLib",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newLib",
        type: "address"
      }
    ],
    name: "DefaultReceiveLibrarySet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldLib",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiry",
        type: "uint256"
      }
    ],
    name: "DefaultReceiveLibraryTimeoutSet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newLib",
        type: "address"
      }
    ],
    name: "DefaultSendLibrarySet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "srcEid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sender",
        type: "bytes32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "nonce",
        type: "uint64"
      }
    ],
    name: "InboundNonceSkipped",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newLib",
        type: "address"
      }
    ],
    name: "LibraryRegistered",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "executor",
        type: "address"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "guid",
        type: "bytes32"
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gas",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "extraData",
        type: "bytes"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "reason",
        type: "bytes"
      }
    ],
    name: "LzComposeAlert",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "executor",
        type: "address"
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        indexed: false,
        internalType: "struct Origin",
        name: "origin",
        type: "tuple"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "guid",
        type: "bytes32"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gas",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "extraData",
        type: "bytes"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "reason",
        type: "bytes"
      }
    ],
    name: "LzReceiveAlert",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address"
      }
    ],
    name: "LzTokenSet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        indexed: false,
        internalType: "struct Origin",
        name: "origin",
        type: "tuple"
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      }
    ],
    name: "PacketDelivered",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedPayload",
        type: "bytes"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "options",
        type: "bytes"
      },
      {
        indexed: false,
        internalType: "address",
        name: "sendLibrary",
        type: "address"
      }
    ],
    name: "PacketSent",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        indexed: false,
        internalType: "struct Origin",
        name: "origin",
        type: "tuple"
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "payloadHash",
        type: "bytes32"
      }
    ],
    name: "PacketVerified",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldLib",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newLib",
        type: "address"
      }
    ],
    name: "ReceiveLibrarySet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldLib",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timeout",
        type: "uint256"
      }
    ],
    name: "ReceiveLibraryTimoutSet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newLib",
        type: "address"
      }
    ],
    name: "SendLibrarySet",
    type: "event"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        internalType: "struct Origin",
        name: "_origin",
        type: "tuple"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      }
    ],
    name: "clear",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "bytes32",
        name: "guid",
        type: "bytes32"
      },
      {
        internalType: "uint16",
        name: "index",
        type: "uint16"
      }
    ],
    name: "composeQueue",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "defaultReceiveLibrary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "defaultReceiveLibraryTimeout",
    outputs: [
      {
        internalType: "address",
        name: "lib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "defaultSendLibrary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "eid",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        internalType: "struct Origin",
        name: "_origin",
        type: "tuple"
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      }
    ],
    name: "executable",
    outputs: [
      {
        internalType: "enum ExecutionState",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "uint32",
        name: "_configType",
        type: "uint32"
      }
    ],
    name: "getConfig",
    outputs: [
      {
        internalType: "bytes",
        name: "config",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "getReceiveLibrary",
    outputs: [
      {
        internalType: "address",
        name: "lib",
        type: "address"
      },
      {
        internalType: "bool",
        name: "isDefault",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "getRegisteredLibraries",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "getSendContext",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "getSendLibrary",
    outputs: [
      {
        internalType: "address",
        name: "lib",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_srcEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32"
      },
      {
        internalType: "uint64",
        name: "_nonce",
        type: "uint64"
      }
    ],
    name: "hasPayloadHash",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_srcEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32"
      }
    ],
    name: "inboundNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_srcEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32"
      },
      {
        internalType: "uint64",
        name: "_nonce",
        type: "uint64"
      }
    ],
    name: "inboundPayloadHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "isDefaultSendLibrary",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      }
    ],
    name: "isRegisteredLibrary",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "isSendingMessage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "isSupportedEid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "uint16",
        name: "_index",
        type: "uint16"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      },
      {
        internalType: "bytes",
        name: "_extraData",
        type: "bytes"
      }
    ],
    name: "lzCompose",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        internalType: "struct Origin",
        name: "_origin",
        type: "tuple"
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      },
      {
        internalType: "bytes",
        name: "_extraData",
        type: "bytes"
      }
    ],
    name: "lzReceive",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [],
    name: "lzToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "nativeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_receiver",
        type: "bytes32"
      }
    ],
    name: "nextGuid",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_receiver",
        type: "bytes32"
      }
    ],
    name: "outboundNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "receiver",
            type: "bytes32"
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes"
          },
          {
            internalType: "bytes",
            name: "options",
            type: "bytes"
          },
          {
            internalType: "bool",
            name: "payInLzToken",
            type: "bool"
          }
        ],
        internalType: "struct MessagingParams",
        name: "_params",
        type: "tuple"
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      }
    ],
    name: "quote",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nativeFee",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "lzTokenFee",
            type: "uint256"
          }
        ],
        internalType: "struct MessagingFee",
        name: "",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "receiveLibraryTimeout",
    outputs: [
      {
        internalType: "address",
        name: "lib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      }
    ],
    name: "registerLibrary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "receiver",
            type: "bytes32"
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes"
          },
          {
            internalType: "bytes",
            name: "options",
            type: "bytes"
          },
          {
            internalType: "bool",
            name: "payInLzToken",
            type: "bool"
          }
        ],
        internalType: "struct MessagingParams",
        name: "_params",
        type: "tuple"
      },
      {
        internalType: "address",
        name: "_refundAddress",
        type: "address"
      }
    ],
    name: "send",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "nativeFee",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "lzTokenFee",
                type: "uint256"
              }
            ],
            internalType: "struct MessagingFee",
            name: "fee",
            type: "tuple"
          }
        ],
        internalType: "struct MessagingReceipt",
        name: "",
        type: "tuple"
      }
    ],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "uint16",
        name: "_index",
        type: "uint16"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      }
    ],
    name: "sendCompose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint32",
            name: "configType",
            type: "uint32"
          },
          {
            internalType: "bytes",
            name: "config",
            type: "bytes"
          }
        ],
        internalType: "struct SetConfigParam[]",
        name: "_params",
        type: "tuple[]"
      }
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_newLib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_timeout",
        type: "uint256"
      }
    ],
    name: "setDefaultReceiveLibrary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_expiry",
        type: "uint256"
      }
    ],
    name: "setDefaultReceiveLibraryTimeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_newLib",
        type: "address"
      }
    ],
    name: "setDefaultSendLibrary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lzToken",
        type: "address"
      }
    ],
    name: "setLzToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_newLib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_gracePeriod",
        type: "uint256"
      }
    ],
    name: "setReceiveLibrary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_gracePeriod",
        type: "uint256"
      }
    ],
    name: "setReceiveLibraryTimeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_newLib",
        type: "address"
      }
    ],
    name: "setSendLibrary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_srcEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32"
      },
      {
        internalType: "uint64",
        name: "_nonce",
        type: "uint64"
      }
    ],
    name: "skip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        internalType: "struct Origin",
        name: "_origin",
        type: "tuple"
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      }
    ],
    name: "verifiable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        internalType: "struct Origin",
        name: "_origin",
        type: "tuple"
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      },
      {
        internalType: "bytes32",
        name: "_payloadHash",
        type: "bytes32"
      }
    ],
    name: "verify",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var ILayerZeroEndpointV2__factory = class {
  static createInterface() {
    return new Interface(_abi77);
  }
  static connect(address, runner) {
    return new Contract(
      address,
      _abi77,
      runner
    );
  }
};
ILayerZeroEndpointV2__factory.abi = _abi77;

// src/typechain/factories/artifacts/contracts/protocol/contracts/interfaces/ILayerZeroReceiver__factory.ts
var _abi78 = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        internalType: "struct Origin",
        name: "_origin",
        type: "tuple"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      },
      {
        internalType: "address",
        name: "_executor",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_extraData",
        type: "bytes"
      }
    ],
    name: "lzReceive",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32"
      }
    ],
    name: "nextNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var ILayerZeroReceiver__factory = class {
  static createInterface() {
    return new Interface(_abi78);
  }
  static connect(address, runner) {
    return new Contract(address, _abi78, runner);
  }
};
ILayerZeroReceiver__factory.abi = _abi78;

// src/typechain/factories/artifacts/contracts/protocol/contracts/interfaces/IMessageLib__factory.ts
var _abi79 = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_configType",
        type: "uint32"
      }
    ],
    name: "getConfig",
    outputs: [
      {
        internalType: "bytes",
        name: "config",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "isSupportedEid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "messageLibType",
    outputs: [
      {
        internalType: "enum MessageLibType",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint32",
            name: "configType",
            type: "uint32"
          },
          {
            internalType: "bytes",
            name: "config",
            type: "bytes"
          }
        ],
        internalType: "struct SetConfigParam[]",
        name: "_config",
        type: "tuple[]"
      }
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint64",
        name: "major",
        type: "uint64"
      },
      {
        internalType: "uint8",
        name: "minor",
        type: "uint8"
      },
      {
        internalType: "uint8",
        name: "endpointVersion",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var IMessageLib__factory = class {
  static createInterface() {
    return new Interface(_abi79);
  }
  static connect(address, runner) {
    return new Contract(address, _abi79, runner);
  }
};
IMessageLib__factory.abi = _abi79;

// src/typechain/factories/artifacts/contracts/protocol/contracts/interfaces/IMessageLibManager__factory.ts
var _abi80 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldLib",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newLib",
        type: "address"
      }
    ],
    name: "DefaultReceiveLibrarySet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldLib",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiry",
        type: "uint256"
      }
    ],
    name: "DefaultReceiveLibraryTimeoutSet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newLib",
        type: "address"
      }
    ],
    name: "DefaultSendLibrarySet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newLib",
        type: "address"
      }
    ],
    name: "LibraryRegistered",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldLib",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newLib",
        type: "address"
      }
    ],
    name: "ReceiveLibrarySet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldLib",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timeout",
        type: "uint256"
      }
    ],
    name: "ReceiveLibraryTimoutSet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newLib",
        type: "address"
      }
    ],
    name: "SendLibrarySet",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "defaultReceiveLibrary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "defaultReceiveLibraryTimeout",
    outputs: [
      {
        internalType: "address",
        name: "lib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "defaultSendLibrary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "uint32",
        name: "_configType",
        type: "uint32"
      }
    ],
    name: "getConfig",
    outputs: [
      {
        internalType: "bytes",
        name: "config",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "getReceiveLibrary",
    outputs: [
      {
        internalType: "address",
        name: "lib",
        type: "address"
      },
      {
        internalType: "bool",
        name: "isDefault",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "getRegisteredLibraries",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "getSendLibrary",
    outputs: [
      {
        internalType: "address",
        name: "lib",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "isDefaultSendLibrary",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      }
    ],
    name: "isRegisteredLibrary",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "isSupportedEid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "receiveLibraryTimeout",
    outputs: [
      {
        internalType: "address",
        name: "lib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      }
    ],
    name: "registerLibrary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint32",
            name: "configType",
            type: "uint32"
          },
          {
            internalType: "bytes",
            name: "config",
            type: "bytes"
          }
        ],
        internalType: "struct SetConfigParam[]",
        name: "_params",
        type: "tuple[]"
      }
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_newLib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_timeout",
        type: "uint256"
      }
    ],
    name: "setDefaultReceiveLibrary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_expiry",
        type: "uint256"
      }
    ],
    name: "setDefaultReceiveLibraryTimeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_newLib",
        type: "address"
      }
    ],
    name: "setDefaultSendLibrary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_newLib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_gracePeriod",
        type: "uint256"
      }
    ],
    name: "setReceiveLibrary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_gracePeriod",
        type: "uint256"
      }
    ],
    name: "setReceiveLibraryTimeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_newLib",
        type: "address"
      }
    ],
    name: "setSendLibrary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var IMessageLibManager__factory = class {
  static createInterface() {
    return new Interface(_abi80);
  }
  static connect(address, runner) {
    return new Contract(address, _abi80, runner);
  }
};
IMessageLibManager__factory.abi = _abi80;

// src/typechain/factories/artifacts/contracts/protocol/contracts/interfaces/IMessagingChannel__factory.ts
var _abi81 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "srcEid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sender",
        type: "bytes32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "nonce",
        type: "uint64"
      }
    ],
    name: "InboundNonceSkipped",
    type: "event"
  },
  {
    inputs: [],
    name: "eid",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_srcEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32"
      },
      {
        internalType: "uint64",
        name: "_nonce",
        type: "uint64"
      }
    ],
    name: "hasPayloadHash",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_srcEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32"
      }
    ],
    name: "inboundNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_srcEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32"
      },
      {
        internalType: "uint64",
        name: "_nonce",
        type: "uint64"
      }
    ],
    name: "inboundPayloadHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_receiver",
        type: "bytes32"
      }
    ],
    name: "nextGuid",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_receiver",
        type: "bytes32"
      }
    ],
    name: "outboundNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_srcEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32"
      },
      {
        internalType: "uint64",
        name: "_nonce",
        type: "uint64"
      }
    ],
    name: "skip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var IMessagingChannel__factory = class {
  static createInterface() {
    return new Interface(_abi81);
  }
  static connect(address, runner) {
    return new Contract(address, _abi81, runner);
  }
};
IMessagingChannel__factory.abi = _abi81;

// src/typechain/factories/artifacts/contracts/protocol/contracts/interfaces/IMessagingComposer__factory.ts
var _abi82 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "guid",
        type: "bytes32"
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16"
      }
    ],
    name: "ComposeDelivered",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "guid",
        type: "bytes32"
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes"
      }
    ],
    name: "ComposeSent",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "executor",
        type: "address"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "guid",
        type: "bytes32"
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gas",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "extraData",
        type: "bytes"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "reason",
        type: "bytes"
      }
    ],
    name: "LzComposeAlert",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "bytes32",
        name: "guid",
        type: "bytes32"
      },
      {
        internalType: "uint16",
        name: "index",
        type: "uint16"
      }
    ],
    name: "composeQueue",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "uint16",
        name: "_index",
        type: "uint16"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      },
      {
        internalType: "bytes",
        name: "_extraData",
        type: "bytes"
      }
    ],
    name: "lzCompose",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "uint16",
        name: "_index",
        type: "uint16"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      }
    ],
    name: "sendCompose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var IMessagingComposer__factory = class {
  static createInterface() {
    return new Interface(_abi82);
  }
  static connect(address, runner) {
    return new Contract(address, _abi82, runner);
  }
};
IMessagingComposer__factory.abi = _abi82;

// src/typechain/factories/artifacts/contracts/protocol/contracts/interfaces/IMessagingContext__factory.ts
var _abi83 = [
  {
    inputs: [],
    name: "getSendContext",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "isSendingMessage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var IMessagingContext__factory = class {
  static createInterface() {
    return new Interface(_abi83);
  }
  static connect(address, runner) {
    return new Contract(address, _abi83, runner);
  }
};
IMessagingContext__factory.abi = _abi83;

// src/typechain/factories/artifacts/contracts/protocol/contracts/interfaces/ISendLib__factory.ts
var _abi84 = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_configType",
        type: "uint32"
      }
    ],
    name: "getConfig",
    outputs: [
      {
        internalType: "bytes",
        name: "config",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "isSupportedEid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "messageLibType",
    outputs: [
      {
        internalType: "enum MessageLibType",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          },
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "receiver",
            type: "bytes32"
          },
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32"
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes"
          }
        ],
        internalType: "struct Packet",
        name: "_packet",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      },
      {
        internalType: "bool",
        name: "_payInLzToken",
        type: "bool"
      }
    ],
    name: "quote",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nativeFee",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "lzTokenFee",
            type: "uint256"
          }
        ],
        internalType: "struct MessagingFee",
        name: "",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          },
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "receiver",
            type: "bytes32"
          },
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32"
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes"
          }
        ],
        internalType: "struct Packet",
        name: "_packet",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      },
      {
        internalType: "bool",
        name: "_payInLzToken",
        type: "bool"
      }
    ],
    name: "send",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nativeFee",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "lzTokenFee",
            type: "uint256"
          }
        ],
        internalType: "struct MessagingFee",
        name: "",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "encodedPacket",
        type: "bytes"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint32",
            name: "configType",
            type: "uint32"
          },
          {
            internalType: "bytes",
            name: "config",
            type: "bytes"
          }
        ],
        internalType: "struct SetConfigParam[]",
        name: "_config",
        type: "tuple[]"
      }
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address"
      }
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint64",
        name: "major",
        type: "uint64"
      },
      {
        internalType: "uint8",
        name: "minor",
        type: "uint8"
      },
      {
        internalType: "uint8",
        name: "endpointVersion",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lzToken",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawLzTokenFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var ISendLib__factory = class {
  static createInterface() {
    return new Interface(_abi84);
  }
  static connect(address, runner) {
    return new Contract(address, _abi84, runner);
  }
};
ISendLib__factory.abi = _abi84;

// src/typechain/factories/artifacts/contracts/protocol/contracts/libs/index.ts
var libs_exports3 = {};
__export(libs_exports3, {
  Errors__factory: () => Errors__factory,
  Transfer__factory: () => Transfer__factory
});

// src/typechain/factories/artifacts/contracts/protocol/contracts/libs/Errors__factory.ts
var _abi85 = [
  {
    inputs: [],
    name: "AlreadyRegistered",
    type: "error"
  },
  {
    inputs: [],
    name: "ComposeExists",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "expected",
        type: "bytes32"
      },
      {
        internalType: "bytes32",
        name: "actual",
        type: "bytes32"
      }
    ],
    name: "ComposeNotFound",
    type: "error"
  },
  {
    inputs: [],
    name: "DefaultReceiveLibUnavailable",
    type: "error"
  },
  {
    inputs: [],
    name: "DefaultSendLibUnavailable",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requiredNative",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "suppliedNative",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "requiredLzToken",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "suppliedLzToken",
        type: "uint256"
      }
    ],
    name: "InsufficientFee",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "supplied",
        type: "uint256"
      }
    ],
    name: "InvalidAmount",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidArgument",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidExpiry",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64"
      }
    ],
    name: "InvalidNonce",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidReceiveLibrary",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidSizeForAddress",
    type: "error"
  },
  {
    inputs: [],
    name: "LzTokenUnavailable",
    type: "error"
  },
  {
    inputs: [],
    name: "NotImplemented",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyAltToken",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyNonDefaultLib",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyReceiveLib",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyRegisteredLib",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyRegisteredOrDefaultLib",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlySendLib",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "expected",
        type: "bytes32"
      },
      {
        internalType: "bytes32",
        name: "actual",
        type: "bytes32"
      }
    ],
    name: "PayloadHashNotFound",
    type: "error"
  },
  {
    inputs: [],
    name: "SameValue",
    type: "error"
  },
  {
    inputs: [],
    name: "SendReentrancy",
    type: "error"
  },
  {
    inputs: [],
    name: "UnsupportedEid",
    type: "error"
  },
  {
    inputs: [],
    name: "UnsupportedInterface",
    type: "error"
  },
  {
    inputs: [],
    name: "ZeroLzTokenFee",
    type: "error"
  }
];
var _bytecode21 = "0x60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122020fe0da502373999de19cc206a18f2b051ba8876d7381727064a65ead9b9aa0d64736f6c63430008160033";
var isSuperArgs21 = (xs) => xs.length > 1;
var Errors__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs21(args)) {
      super(...args);
    } else {
      super(_abi85, _bytecode21, args[0]);
    }
  }
  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }
  deploy(overrides) {
    return super.deploy(overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi85);
  }
  static connect(address, runner) {
    return new Contract(address, _abi85, runner);
  }
};
Errors__factory.bytecode = _bytecode21;
Errors__factory.abi = _abi85;

// src/typechain/factories/artifacts/contracts/protocol/contracts/libs/Transfer__factory.ts
var _abi86 = [
  {
    inputs: [],
    name: "ToAddressIsZero",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256"
      }
    ],
    name: "TransferNativeFailed",
    type: "error"
  }
];
var _bytecode22 = "0x60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220034e5c435511ee7b2c01010e82a040e0cc4e84e428c5d1453ba721c8b0b6a7b064736f6c63430008160033";
var isSuperArgs22 = (xs) => xs.length > 1;
var Transfer__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs22(args)) {
      super(...args);
    } else {
      super(_abi86, _bytecode22, args[0]);
    }
  }
  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }
  deploy(overrides) {
    return super.deploy(overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi86);
  }
  static connect(address, runner) {
    return new Contract(address, _abi86, runner);
  }
};
Transfer__factory.bytecode = _bytecode22;
Transfer__factory.abi = _abi86;

// src/typechain/factories/artifacts/contracts/protocol/contracts/messagelib/index.ts
var messagelib_exports2 = {};
__export(messagelib_exports2, {
  BlockedMessageLib__factory: () => BlockedMessageLib__factory,
  SimpleMessageLib__factory: () => SimpleMessageLib__factory,
  libs: () => libs_exports4
});

// src/typechain/factories/artifacts/contracts/protocol/contracts/messagelib/libs/index.ts
var libs_exports4 = {};
__export(libs_exports4, {
  ExecutorOptions__factory: () => ExecutorOptions__factory
});

// src/typechain/factories/artifacts/contracts/protocol/contracts/messagelib/libs/ExecutorOptions__factory.ts
var _abi87 = [
  {
    inputs: [],
    name: "InvalidLzComposeOption",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidLzReceiveOption",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidNativeDropOption",
    type: "error"
  }
];
var _bytecode23 = "0x60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212208d71cd1b814bf13b1f3cdcf142ed8e1b9c7283ae3cb94496c775b7ec62b42cf264736f6c63430008160033";
var isSuperArgs23 = (xs) => xs.length > 1;
var ExecutorOptions__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs23(args)) {
      super(...args);
    } else {
      super(_abi87, _bytecode23, args[0]);
    }
  }
  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }
  deploy(overrides) {
    return super.deploy(overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi87);
  }
  static connect(address, runner) {
    return new Contract(address, _abi87, runner);
  }
};
ExecutorOptions__factory.bytecode = _bytecode23;
ExecutorOptions__factory.abi = _abi87;

// src/typechain/factories/artifacts/contracts/protocol/contracts/messagelib/BlockedMessageLib__factory.ts
var _abi88 = [
  {
    inputs: [],
    name: "NotImplemented",
    type: "error"
  },
  {
    stateMutability: "nonpayable",
    type: "fallback"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    name: "isSupportedEid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [],
    name: "messageLibType",
    outputs: [
      {
        internalType: "enum MessageLibType",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint64",
        name: "major",
        type: "uint64"
      },
      {
        internalType: "uint8",
        name: "minor",
        type: "uint8"
      },
      {
        internalType: "uint8",
        name: "endpointVersion",
        type: "uint8"
      }
    ],
    stateMutability: "pure",
    type: "function"
  }
];
var _bytecode24 = "0x60808060405234610016576101d0908161001c8239f35b600080fdfe60806040908082526004361015610045575b503461004057600490517fd6234725000000000000000000000000000000000000000000000000000000008152fd5b600080fd5b600090813560e01c90816301ffc9a7146100f6575080631881d94d146100da57806354fd4d50146100a957636750cd4c036100115790346100a55760206003193601126100a55760043563ffffffff8116036100a5576020905160018152f35b5080fd5b5090346100a557816003193601126100a557806002606092519167ffffffffffffffff835260ff6020840152820152f35b5090346100a557816003193601126100a5576020905160028152f35b9050346100a55760206003193601126100a5576004357fffffffff00000000000000000000000000000000000000000000000000000000811680910361019657602092507f97f0258400000000000000000000000000000000000000000000000000000000811490811561016c575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501483610165565b8280fdfea26469706673582212208ab35b37910f030dd558ed99e904687530ed8a07713d95eb657134cf419cb3da64736f6c63430008160033";
var isSuperArgs24 = (xs) => xs.length > 1;
var BlockedMessageLib__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs24(args)) {
      super(...args);
    } else {
      super(_abi88, _bytecode24, args[0]);
    }
  }
  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }
  deploy(overrides) {
    return super.deploy(overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi88);
  }
  static connect(address, runner) {
    return new Contract(address, _abi88, runner);
  }
};
BlockedMessageLib__factory.bytecode = _bytecode24;
BlockedMessageLib__factory.abi = _abi88;

// src/typechain/factories/artifacts/contracts/protocol/contracts/messagelib/SimpleMessageLib__factory.ts
var _abi89 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_endpoint",
        type: "address"
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expected",
        type: "address"
      },
      {
        internalType: "address",
        name: "actual",
        type: "address"
      }
    ],
    name: "InvalidEndpoint",
    type: "error"
  },
  {
    inputs: [],
    name: "LzTokenIsAddressZero",
    type: "error"
  },
  {
    inputs: [],
    name: "NotImplemented",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyEndpoint",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyWhitelistCaller",
    type: "error"
  },
  {
    inputs: [],
    name: "ToAddressIsZero",
    type: "error"
  },
  {
    inputs: [],
    name: "ToIsAddressZero",
    type: "error"
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256"
      }
    ],
    name: "TransferNativeFailed",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    stateMutability: "payable",
    type: "fallback"
  },
  {
    inputs: [],
    name: "PACKET_VERSION",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "defaultOption",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "endpoint",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    name: "isSupportedEid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [],
    name: "localEid",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "lzTokenFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "messageLibType",
    outputs: [
      {
        internalType: "enum MessageLibType",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [],
    name: "nativeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          },
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "receiver",
            type: "bytes32"
          },
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32"
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes"
          }
        ],
        internalType: "struct Packet",
        name: "",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      },
      {
        internalType: "bool",
        name: "_payInLzToken",
        type: "bool"
      }
    ],
    name: "quote",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nativeFee",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "lzTokenFee",
            type: "uint256"
          }
        ],
        internalType: "struct MessagingFee",
        name: "",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          },
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "receiver",
            type: "bytes32"
          },
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32"
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes"
          }
        ],
        internalType: "struct Packet",
        name: "_packet",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "_options",
        type: "bytes"
      },
      {
        internalType: "bool",
        name: "_payInLzToken",
        type: "bool"
      }
    ],
    name: "send",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nativeFee",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "lzTokenFee",
            type: "uint256"
          }
        ],
        internalType: "struct MessagingFee",
        name: "fee",
        type: "tuple"
      },
      {
        internalType: "bytes",
        name: "encodedPacket",
        type: "bytes"
      },
      {
        internalType: "bytes",
        name: "options",
        type: "bytes"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_defaultOption",
        type: "bytes"
      }
    ],
    name: "setDefaultOption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nativeFee",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_lzTokenFee",
        type: "uint256"
      }
    ],
    name: "setMessagingFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_whitelistCaller",
        type: "address"
      }
    ],
    name: "setWhitelistCaller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "packetBytes",
        type: "bytes"
      }
    ],
    name: "validatePacket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint64",
        name: "major",
        type: "uint64"
      },
      {
        internalType: "uint8",
        name: "minor",
        type: "uint8"
      },
      {
        internalType: "uint8",
        name: "endpointVersion",
        type: "uint8"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [],
    name: "whitelistCaller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "withdrawLzTokenFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    stateMutability: "payable",
    type: "receive"
  }
];
var _bytecode25 = "0x60e080604052346200017657604081620018aa80380380916200002382856200017b565b83398101031262000176576200004760206200003f83620001b5565b9201620001b5565b60008054336001600160a01b0319821681178355604051949293602093869360049385936001600160a01b03939290919084167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08a80a3608082905260a05263416ecebf60e01b8352165afa9182156200016957819262000118575b8260c052606360025560646003556040516116df9081620001cb82396080518181816101b90152818161078c01528181610a4001528181610b0f0152610ea2015260a051816109ef015260c051816108d20152f35b9091506020813d60201162000160575b8162000137602093836200017b565b810103126200015c57519063ffffffff821682036200015957503880620000c3565b80fd5b5080fd5b3d915062000128565b50604051903d90823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200019f57604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620001765756fe6080604081815260049182361015610041575b50361561003f57517fd6234725000000000000000000000000000000000000000000000000000000008152fd5b005b60009060e08235811c91826301ffc9a71461101b5750816312cc947f14610deb5781631881d94d14610dcf5781631c7c294e14610d9a578163334993ff14610d735781634389e58f14610a8c57816354fd4d5014610a645781635e280f1114610a1357816361d027b3146109c25781636251b637146109a65781636750cd4c14610975578163715018a6146108f657816372607537146108b557816372d71322146108805781638da5cb5b1461084d5781638f58aa7a1461071f5781639095323814610700578163996f79c0146106e1578163aec336e61461067d578163d80e9bd9146105df57508063dabca063146103f4578063f2fde38b146102d85763fd9be522036100125791346102d457816003193601126102d457610162611367565b916024359061016f6113b6565b73ffffffffffffffffffffffffffffffffffffffff808516156102ac5781517fe1758bd80000000000000000000000000000000000000000000000000000000081526020818681857f0000000000000000000000000000000000000000000000000000000000000000165afa9081156102a2578791610273575b50168061026257508480808085885af16102016115ad565b501561020e575050505080f35b517f2c024f9200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909316918301918252602082015281906040010390fd5b0390fd5b905061027093919250611435565b80f35b610295915060203d60201161029b575b61028d8183611133565b81019061138a565b386101e9565b503d610283565b83513d89823e3d90fd5b8382517f3d3496e1000000000000000000000000000000000000000000000000000000008152fd5b8280fd5b5091346102d45760206003193601126102d4576102f3611367565b906102fc6113b6565b73ffffffffffffffffffffffffffffffffffffffff809216928315610371575050600054827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8382346105dc5760209160206003193601126105d85767ffffffffffffffff81358181116105d45761042990369084016111a9565b936104326113b6565b84519182116105a857610445835461122f565b601f8111610546575b50602090601f83116001146104a8575083948293949261049d575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c191617905580f35b015190508480610469565b90601f198316958486527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9286905b88821061052e575050836001959697106104f7575b505050811b01905580f35b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c191690558480806104ec565b806001859682949686015181550195019301906104d7565b8385527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c8101916020851061059e575b601f0160051c01905b818110610593575061044e565b858155600101610586565b909150819061057d565b6024846041857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8380fd5b5080fd5b80fd5b849150346102d457600319906060823601126105d45767ffffffffffffffff91833583811161067957360301126102d4576024359081116102d457610626913691016110ba565b50506106306111c7565b90600060208451610640816110e8565b8281520152600354911561067457506002545b60208351610660816110e8565b838152019081528251918252516020820152f35b610653565b8580fd5b82346105dc5760206003193601126105dc5773ffffffffffffffffffffffffffffffffffffffff6106ac611367565b6106b46113b6565b167fffffffffffffffffffffffff0000000000000000000000000000000000000000600154161760015580f35b8284346105d857816003193601126105d8576020906003549051908152f35b8284346105d857816003193601126105d8576020906002549051908152f35b505090346105d857806003193601126105d85761073a611367565b6107426113b6565b73ffffffffffffffffffffffffffffffffffffffff808216156108255782517fe4fe1d940000000000000000000000000000000000000000000000000000000081526020818781857f0000000000000000000000000000000000000000000000000000000000000000165afa90811561081b5785916107fc575b50169182156107d45750906102709160243591611435565b8490517f54c1781b000000000000000000000000000000000000000000000000000000008152fd5b610815915060203d60201161029b5761028d8183611133565b386107bc565b84513d87823e3d90fd5b8483517f3d3496e1000000000000000000000000000000000000000000000000000000008152fd5b8284346105d857816003193601126105d85773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b8284346105d857816003193601126105d8576108b19061089e611282565b90519182916020835260208301906111f9565b0390f35b8284346105d857816003193601126105d8576020905163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b82346105dc57806003193601126105dc5761090f6113b6565b600073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b838584346105dc5760206003193601126105dc57503563ffffffff8116036109a1576020905160018152f35b600080fd5b8284346105d857816003193601126105d8576020905160018152f35b8284346105d857816003193601126105d8576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b8284346105d857816003193601126105d8576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b8284346105d857816003193601126105d8579060028260609351928084526020840152820152f35b838584346105dc576003196060813601126105d85782359467ffffffffffffffff918287116105d457819087360301126102d4576024358281116105d457610ad790369086016111a9565b91610ae06111c7565b94600060208851610af0816110e8565b828152015273ffffffffffffffffffffffffffffffffffffffff9033827f00000000000000000000000000000000000000000000000000000000000000001603610d4c5787519380850185811085821117610d1e578952898201358481168103610d1a578552610b6260248b0161121e565b99602086019a8b5260448101359380851685036109a1578a8701948552610b8b6064830161121e565b916060880192835260808801946084820135865260a089019760a4830135895260c4830135908111610d1657958d9e957fffffffffffffffff0000000000000000000000000000000000000000000000009a956108b19e9f95610bfe610cf99e9c96610ca99c9660919c369201016111a9565b978860c082015251985194511690519251945195519b8c987f010000000000000000000000000000000000000000000000000000000000000060208b015260c01b1660218901527fffffffff000000000000000000000000000000000000000000000000000000008094831b166029890152602d8801521b16604d85015260518401526071830152610c9981518092602086860191016111d6565b8101036071810185520183611133565b8051610d105750610cb8611282565b925b6003549515610d0757506080600254965b60208151610cd8816110e8565b888152019788528051978897885251602088015286015260808501906111f9565b9083820360608501526111f9565b60809096610ccb565b92610cba565b8b80fd5b8780fd5b6041837f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b87517f7eb966c8000000000000000000000000000000000000000000000000000000008152fd5b828585346102d4576003193601126105d857610d8d6113b6565b3560035560243560025580f35b8284346105d857816003193601126105d85760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b8284346105d857816003193601126105d8576020905160028152f35b90508284346105d45760206003193601126105d45767ffffffffffffffff813581811161067957610e1f90369084016110ba565b73ffffffffffffffffffffffffffffffffffffffff959186600154168015159081611010575b50610fe85781600d11610d1a5781602d11610d1a5781600911610d1a578551926060840184811086821117610fbc5790899493929188526009820135901c83526020830197600d820135895287840191600181013560c01c8352817f0000000000000000000000000000000000000000000000000000000000000000169380605111610fb857610efc907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffaf36910160518401611172565b6020815191012092843b15610fb85787908a519b8c977fa825d7470000000000000000000000000000000000000000000000000000000089525163ffffffff168b8901525160248801525116604486015260310135166064840152608483015281835a9260a493f18015610fae57610f72578480f35b8311610f82575052818080808480f35b8360416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b83513d87823e3d90fd5b8680fd5b60248a6041897f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8486517f70b216ec000000000000000000000000000000000000000000000000000000008152fd5b905033141589610e45565b839086346102d45760206003193601126102d457357fffffffff0000000000000000000000000000000000000000000000000000000081168091036102d457602092507f97f02584000000000000000000000000000000000000000000000000000000008114908115611090575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501483611089565b9181601f840112156109a15782359167ffffffffffffffff83116109a157602083818601950101116109a157565b6040810190811067ffffffffffffffff82111761110457604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f601f19910116810190811067ffffffffffffffff82111761110457604052565b67ffffffffffffffff811161110457601f01601f191660200190565b92919261117e82611156565b9161118c6040519384611133565b8294818452818301116109a1578281602093846000960137010152565b9080601f830112156109a1578160206111c493359101611172565b90565b6044359081151582036109a157565b60005b8381106111e95750506000910152565b81810151838201526020016111d9565b90601f19601f602093611217815180928187528780880191016111d6565b0116010190565b359063ffffffff821682036109a157565b90600182811c92168015611278575b602083101461124957565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f169161123e565b60405190600082600454916112968361122f565b8083529260209060019081811690811561132457506001146112c3575b50506112c192500383611133565b565b91509260046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b936000925b82841061130c57506112c194505050810160200138806112b3565b855488850183015294850194879450928101926112f1565b9050602093506112c19592507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b82010138806112b3565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036109a157565b908160209103126109a1575173ffffffffffffffffffffffffffffffffffffffff811681036109a15790565b73ffffffffffffffffffffffffffffffffffffffff6000541633036113d757565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000602080830191825273ffffffffffffffffffffffffffffffffffffffff9485166024840152604480840196909652948252926114ea9261149a606484611133565b16604051916114a8836110e8565b8583527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656486840152600080958192519082855af16114e46115ad565b916115dd565b805191821591848315611589575b5050509050156115055750565b608490604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b9193818094500103126105d8578201519081151582036105dc5750803880846114f8565b3d156115d8573d906115be82611156565b916115cc6040519384611133565b82523d6000602084013e565b606090565b9192901561165857508151156115f1575090565b3b156115fa5790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b82519091501561166b5750805190602001fd5b61025e906040519182917f08c379a00000000000000000000000000000000000000000000000000000000083526020600484015260248301906111f956fea2646970667358221220fcb49cd576f17f4a3ef7d878688712c29e0912715244be185382b9004d47f0bd64736f6c63430008160033";
var isSuperArgs25 = (xs) => xs.length > 1;
var SimpleMessageLib__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs25(args)) {
      super(...args);
    } else {
      super(_abi89, _bytecode25, args[0]);
    }
  }
  getDeployTransaction(_endpoint, _treasury, overrides) {
    return super.getDeployTransaction(_endpoint, _treasury, overrides || {});
  }
  deploy(_endpoint, _treasury, overrides) {
    return super.deploy(_endpoint, _treasury, overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi89);
  }
  static connect(address, runner) {
    return new Contract(address, _abi89, runner);
  }
};
SimpleMessageLib__factory.bytecode = _bytecode25;
SimpleMessageLib__factory.abi = _abi89;

// src/typechain/factories/artifacts/contracts/protocol/contracts/EndpointV2__factory.ts
var _abi90 = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [],
    name: "AlreadyRegistered",
    type: "error"
  },
  {
    inputs: [],
    name: "ComposeExists",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "expected",
        type: "bytes32"
      },
      {
        internalType: "bytes32",
        name: "actual",
        type: "bytes32"
      }
    ],
    name: "ComposeNotFound",
    type: "error"
  },
  {
    inputs: [],
    name: "DefaultReceiveLibUnavailable",
    type: "error"
  },
  {
    inputs: [],
    name: "DefaultSendLibUnavailable",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requiredNative",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "suppliedNative",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "requiredLzToken",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "suppliedLzToken",
        type: "uint256"
      }
    ],
    name: "InsufficientFee",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidExpiry",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64"
      }
    ],
    name: "InvalidNonce",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidReceiveLibrary",
    type: "error"
  },
  {
    inputs: [],
    name: "LzTokenUnavailable",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyNonDefaultLib",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyReceiveLib",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyRegisteredLib",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyRegisteredOrDefaultLib",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlySendLib",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "expected",
        type: "bytes32"
      },
      {
        internalType: "bytes32",
        name: "actual",
        type: "bytes32"
      }
    ],
    name: "PayloadHashNotFound",
    type: "error"
  },
  {
    inputs: [],
    name: "SameValue",
    type: "error"
  },
  {
    inputs: [],
    name: "SendReentrancy",
    type: "error"
  },
  {
    inputs: [],
    name: "ToAddressIsZero",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256"
      }
    ],
    name: "TransferNativeFailed",
    type: "error"
  },
  {
    inputs: [],
    name: "UnsupportedEid",
    type: "error"
  },
  {
    inputs: [],
    name: "UnsupportedInterface",
    type: "error"
  },
  {
    inputs: [],
    name: "ZeroLzTokenFee",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "guid",
        type: "bytes32"
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16"
      }
    ],
    name: "ComposeDelivered",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "guid",
        type: "bytes32"
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes"
      }
    ],
    name: "ComposeSent",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldLib",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newLib",
        type: "address"
      }
    ],
    name: "DefaultReceiveLibrarySet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldLib",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiry",
        type: "uint256"
      }
    ],
    name: "DefaultReceiveLibraryTimeoutSet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newLib",
        type: "address"
      }
    ],
    name: "DefaultSendLibrarySet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "srcEid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sender",
        type: "bytes32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "nonce",
        type: "uint64"
      }
    ],
    name: "InboundNonceSkipped",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newLib",
        type: "address"
      }
    ],
    name: "LibraryRegistered",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "executor",
        type: "address"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "guid",
        type: "bytes32"
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gas",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "extraData",
        type: "bytes"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "reason",
        type: "bytes"
      }
    ],
    name: "LzComposeAlert",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "executor",
        type: "address"
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        indexed: false,
        internalType: "struct Origin",
        name: "origin",
        type: "tuple"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "guid",
        type: "bytes32"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gas",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "extraData",
        type: "bytes"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "reason",
        type: "bytes"
      }
    ],
    name: "LzReceiveAlert",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address"
      }
    ],
    name: "LzTokenSet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        indexed: false,
        internalType: "struct Origin",
        name: "origin",
        type: "tuple"
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      }
    ],
    name: "PacketDelivered",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedPayload",
        type: "bytes"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "options",
        type: "bytes"
      },
      {
        indexed: false,
        internalType: "address",
        name: "sendLibrary",
        type: "address"
      }
    ],
    name: "PacketSent",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        indexed: false,
        internalType: "struct Origin",
        name: "origin",
        type: "tuple"
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "payloadHash",
        type: "bytes32"
      }
    ],
    name: "PacketVerified",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldLib",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newLib",
        type: "address"
      }
    ],
    name: "ReceiveLibrarySet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldLib",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timeout",
        type: "uint256"
      }
    ],
    name: "ReceiveLibraryTimoutSet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newLib",
        type: "address"
      }
    ],
    name: "SendLibrarySet",
    type: "event"
  },
  {
    inputs: [],
    name: "blockedLibrary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        internalType: "struct Origin",
        name: "_origin",
        type: "tuple"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      }
    ],
    name: "clear",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "bytes32",
        name: "guid",
        type: "bytes32"
      },
      {
        internalType: "uint16",
        name: "index",
        type: "uint16"
      }
    ],
    name: "composeQueue",
    outputs: [
      {
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "srcEid",
        type: "uint32"
      }
    ],
    name: "defaultReceiveLibrary",
    outputs: [
      {
        internalType: "address",
        name: "lib",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "srcEid",
        type: "uint32"
      }
    ],
    name: "defaultReceiveLibraryTimeout",
    outputs: [
      {
        internalType: "address",
        name: "lib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "dstEid",
        type: "uint32"
      }
    ],
    name: "defaultSendLibrary",
    outputs: [
      {
        internalType: "address",
        name: "lib",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "eid",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        internalType: "struct Origin",
        name: "_origin",
        type: "tuple"
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      }
    ],
    name: "executable",
    outputs: [
      {
        internalType: "enum ExecutionState",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "uint32",
        name: "_configType",
        type: "uint32"
      }
    ],
    name: "getConfig",
    outputs: [
      {
        internalType: "bytes",
        name: "config",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_srcEid",
        type: "uint32"
      }
    ],
    name: "getReceiveLibrary",
    outputs: [
      {
        internalType: "address",
        name: "lib",
        type: "address"
      },
      {
        internalType: "bool",
        name: "isDefault",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "getRegisteredLibraries",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "getSendContext",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      }
    ],
    name: "getSendLibrary",
    outputs: [
      {
        internalType: "address",
        name: "lib",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_srcEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32"
      },
      {
        internalType: "uint64",
        name: "_nonce",
        type: "uint64"
      }
    ],
    name: "hasPayloadHash",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_srcEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32"
      }
    ],
    name: "inboundNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "srcEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "sender",
        type: "bytes32"
      },
      {
        internalType: "uint64",
        name: "inboundNonce",
        type: "uint64"
      }
    ],
    name: "inboundPayloadHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "payloadHash",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      }
    ],
    name: "isDefaultSendLibrary",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lib",
        type: "address"
      }
    ],
    name: "isRegisteredLibrary",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "isSendingMessage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "isSupportedEid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_srcEid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_actualReceiveLib",
        type: "address"
      }
    ],
    name: "isValidReceiveLibrary",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "srcEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "sender",
        type: "bytes32"
      }
    ],
    name: "lazyInboundNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "uint16",
        name: "_index",
        type: "uint16"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      },
      {
        internalType: "bytes",
        name: "_extraData",
        type: "bytes"
      }
    ],
    name: "lzCompose",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "uint16",
        name: "_index",
        type: "uint16"
      },
      {
        internalType: "uint256",
        name: "_gas",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      },
      {
        internalType: "bytes",
        name: "_extraData",
        type: "bytes"
      },
      {
        internalType: "bytes",
        name: "_reason",
        type: "bytes"
      }
    ],
    name: "lzComposeAlert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        internalType: "struct Origin",
        name: "_origin",
        type: "tuple"
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      },
      {
        internalType: "bytes",
        name: "_extraData",
        type: "bytes"
      }
    ],
    name: "lzReceive",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        internalType: "struct Origin",
        name: "_origin",
        type: "tuple"
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "uint256",
        name: "_gas",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      },
      {
        internalType: "bytes",
        name: "_extraData",
        type: "bytes"
      },
      {
        internalType: "bytes",
        name: "_reason",
        type: "bytes"
      }
    ],
    name: "lzReceiveAlert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "lzToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "nativeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_receiver",
        type: "bytes32"
      }
    ],
    name: "nextGuid",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "dstEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "receiver",
        type: "bytes32"
      }
    ],
    name: "outboundNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "receiver",
            type: "bytes32"
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes"
          },
          {
            internalType: "bytes",
            name: "options",
            type: "bytes"
          },
          {
            internalType: "bool",
            name: "payInLzToken",
            type: "bool"
          }
        ],
        internalType: "struct MessagingParams",
        name: "_params",
        type: "tuple"
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      }
    ],
    name: "quote",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nativeFee",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "lzTokenFee",
            type: "uint256"
          }
        ],
        internalType: "struct MessagingFee",
        name: "",
        type: "tuple"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "srcEid",
        type: "uint32"
      }
    ],
    name: "receiveLibraryTimeout",
    outputs: [
      {
        internalType: "address",
        name: "lib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "recoverToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      }
    ],
    name: "registerLibrary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "receiver",
            type: "bytes32"
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes"
          },
          {
            internalType: "bytes",
            name: "options",
            type: "bytes"
          },
          {
            internalType: "bool",
            name: "payInLzToken",
            type: "bool"
          }
        ],
        internalType: "struct MessagingParams",
        name: "_params",
        type: "tuple"
      },
      {
        internalType: "address",
        name: "_refundAddress",
        type: "address"
      }
    ],
    name: "send",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "nativeFee",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "lzTokenFee",
                type: "uint256"
              }
            ],
            internalType: "struct MessagingFee",
            name: "fee",
            type: "tuple"
          }
        ],
        internalType: "struct MessagingReceipt",
        name: "",
        type: "tuple"
      }
    ],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "uint16",
        name: "_index",
        type: "uint16"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      }
    ],
    name: "sendCompose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint32",
            name: "configType",
            type: "uint32"
          },
          {
            internalType: "bytes",
            name: "config",
            type: "bytes"
          }
        ],
        internalType: "struct SetConfigParam[]",
        name: "_params",
        type: "tuple[]"
      }
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_newLib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_gracePeriod",
        type: "uint256"
      }
    ],
    name: "setDefaultReceiveLibrary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_expiry",
        type: "uint256"
      }
    ],
    name: "setDefaultReceiveLibraryTimeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_newLib",
        type: "address"
      }
    ],
    name: "setDefaultSendLibrary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lzToken",
        type: "address"
      }
    ],
    name: "setLzToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_newLib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_gracePeriod",
        type: "uint256"
      }
    ],
    name: "setReceiveLibrary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_expiry",
        type: "uint256"
      }
    ],
    name: "setReceiveLibraryTimeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_newLib",
        type: "address"
      }
    ],
    name: "setSendLibrary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_srcEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32"
      },
      {
        internalType: "uint64",
        name: "_nonce",
        type: "uint64"
      }
    ],
    name: "skip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        internalType: "struct Origin",
        name: "_origin",
        type: "tuple"
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      }
    ],
    name: "verifiable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "srcEid",
            type: "uint32"
          },
          {
            internalType: "bytes32",
            name: "sender",
            type: "bytes32"
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64"
          }
        ],
        internalType: "struct Origin",
        name: "_origin",
        type: "tuple"
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      },
      {
        internalType: "bytes32",
        name: "_payloadHash",
        type: "bytes32"
      }
    ],
    name: "verify",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var _bytecode26 = "0x60c0604081815234620002c75781620049928038038091620000228285620002cc565b8339602093849181010312620002c757519163ffffffff83168303620002c757600080546001600160a01b0319808216339081178455855193966001600160a01b0394929390919085167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08980a36080526101ec818101906001600160401b03821183831017620002b357908291620047a68339039086f08015620002a9578216918260a052339086541603620002675783516301ffc9a760e01b81526325fc096160e21b60048083019190915295908481602481875afa9081156200025d5782916200021c575b50156200020c578281526005845260ff8582205416620001fc5782815260058452848120805460ff1916600117905585549068010000000000000000821015620001e95760018201808855821015620001d6579084827f6b374d56679ca9463f27c85c6311e2bb7fde69bf201d3da39d53f10bd9d78af597988694522001918254161790558351908152a16001600d555161449f9081620003078239608051818181610b8e01528181610bd5015281816117db015281816129620152612c40015260a0518161229b0152f35b634e487b7160e01b815260328752602490fd5b634e487b7160e01b815260418752602490fd5b8451630ea075bf60e21b81528690fd5b84516331d5783360e11b81528690fd5b90508481813d831162000255575b620002368183620002cc565b8101031262000251575180151581036200025157386200010a565b5080fd5b503d6200022a565b86513d84823e3d90fd5b60648385519062461bcd60e51b825280600483015260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b84513d87823e3d90fd5b634e487b7160e01b88526041600452602488fd5b600080fd5b601f909101601f19168101906001600160401b03821190821017620002f057604052565b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b60009060e08235811c9182630c0c389e1461333a5750816314f651a9146132dd57816320efd722146130ac5781632637a45014612b5a5781632b3197b914612a3d57816335d330b0146129ca578163402f846814612986578163416ecebf146129455781634b4b2efb146129085781635b17bb70146128b657816366bf43d6146126495781636750cd4c146125e7578163697fe6b6146124c95781636bf73fa3146123b2575080636e83f5bb146123645780636f50a80314612326578063715018a6146122bf578063733180911461227b57806379624ca9146122595780637cb59012146121155780638da5cb5b146120ef5780639132e5c31461202957806391d20fa114611e11578063965183d414611d5b5780639c6d734014611d095780639d7f977514611cc7578063a0dd43fc14611c9b578063a718531b14611a04578063a7229fd9146119b2578063a825d74714611808578063aafe5e0714611781578063aafea3121461156f578063b8849ac914611203578063b96a277f146111cb578063c28e0eed14611154578063c9a54a99146110ce578063c9fc7bcd1461106d578063d4b4ec8f14610dc4578063dc706a6214610d87578063dc93c8a214610d30578063ddc28c5814610acb578063e16f964d14610822578063e1758bd814610806578063e361b59c1461079c578063e4fe1d9414610775578063e8964e811461051e578063eaeacd6314610408578063ef667aa11461038a578063f2fde38b146102895763f64be4c71461024957600080fd5b34610286576020600319360112610286576001600160a01b03604060209263ffffffff6102746135a6565b16815260098452205416604051908152f35b80fd5b5034610286576020600319360112610286576102a36134f3565b6102ab614047565b6001600160a01b03809116908115610306576000548273ffffffffffffffffffffffffffffffffffffffff19821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b5034610286576040600319360112610286576103a46134f3565b9063ffffffff60406103b4613593565b926001600160a01b038095168152600860205220911660005260205260016040600020918254169101549061040460405192839283602090939291936001600160a01b0360408201951681520152565b0390f35b5034610286576060600319360112610286576104226135a6565b6024356044359067ffffffffffffffff8083168093036105195761044f61044a838633613bd6565b613cce565b1682036104e857916080917f28f40053783033ef755556a0c3315379141f51a33aed8334174ffbadd90bde4893338652600160205263ffffffff6040872093169283600052602052604060002081875260205260408620827fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000082541617905560405192835260208301523360408301526060820152a180f35b602482604051907f5c33785a0000000000000000000000000000000000000000000000000000000082526004820152fd5b600080fd5b50346102865760209081600319360112610286576001600160a01b036105426134f3565b61054a614047565b16916040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f97f025840000000000000000000000000000000000000000000000000000000060048201528181602481875afa90811561076a57839161073d575b5015610713578282526005815260ff6040832054166106e957828252600581526040822060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905560045492680100000000000000008410156106bc57600184018060045584101561068f57829360047f6b374d56679ca9463f27c85c6311e2bb7fde69bf201d3da39d53f10bd9d78af594527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b018173ffffffffffffffffffffffffffffffffffffffff19825416179055604051908152a180f35b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fd5b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b60046040517f3a81d6fc000000000000000000000000000000000000000000000000000000008152fd5b60046040517f63aaf066000000000000000000000000000000000000000000000000000000008152fd5b61075d9150823d8411610763575b61075581836137e8565b810190613adf565b386105ae565b503d61074b565b6040513d85823e3d90fd5b503461028657806003193601126102865760206001600160a01b03600e5416604051908152f35b50346102865760206107fc6107b0366136ca565b929190604093916001600160a01b03600094168452600260205263ffffffff8585209116845260205283832090835260205267ffffffffffffffff838320911682526020522054151590565b6040519015158152f35b5034610286578060031936011261028657602090604051908152f35b50346102865760406003193601126102865761083c6135a6565b6001600160a01b03908161084e613509565b16918284526020906005825260ff6040862054161580610ac2575b610a98578390811515806109e0575b610937575b3386526006835263ffffffff60408720941693846000528352604060002054161461090d577f4cff966ebee29a156dcb34cf72c1d06231fb1777f6bdf6e8089819232f002b1c92606092338652600683526040862081600052835260406000208273ffffffffffffffffffffffffffffffffffffffff19825416179055604051923384528301526040820152a180f35b60046040517fc23f6ccb000000000000000000000000000000000000000000000000000000008152fd5b90506040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff841660048201528281602481885afa9081156109d55786916109b8575b501561098e57839061087d565b60046040517f9153304b000000000000000000000000000000000000000000000000000000008152fd5b6109cf9150833d85116107635761075581836137e8565b38610981565b6040513d88823e3d90fd5b91506040517f1881d94d0000000000000000000000000000000000000000000000000000000081528381600481895afa8015610a8d576001918891610a60575b50610a2a81613623565b14610a36578491610878565b60046040517f3885d603000000000000000000000000000000000000000000000000000000008152fd5b610a809150853d8711610a86575b610a7881836137e8565b810190613ac7565b38610a20565b503d610a6e565b6040513d89823e3d90fd5b60046040517f4fb58e15000000000000000000000000000000000000000000000000000000008152fd5b50831515610869565b503461028657610ada3661354d565b9060006020604051610aeb816137cc565b8281520152610afc608082016138e8565b80610d1d575b610cf35760806040916001600160a01b03610c2f8582610bcc97168852600360205285882063ffffffff610b3586613729565b166000526020528560002060208501358952602052610c1b610b6367ffffffffffffffff888b205416613cce565b67ffffffffffffffff610b7587613729565b63ffffffff610bb360208a0135610b8b8b613729565b887f0000000000000000000000000000000000000000000000000000000000000000886140b9565b91610bc08c8b018b613d60565b9490958d519e8f613794565b168d528c6020837f0000000000000000000000000000000000000000000000000000000000000000169101528c8c8a89169101521660608c01526020880135898c015260a08b01523691613af7565b60c0880152610c2984613729565b90613ce7565b1690610c4a610c416060830183613d60565b949092016138e8565b94610c838551968795869485947fd80e9bd900000000000000000000000000000000000000000000000000000000865260048601613dd9565b03915afa908115610ce8578291610caa575b60408260208251918051835201516020820152f35b905060403d604011610ce1575b610cc181836137e8565b8101916040828403126102865750604091610cdb91613db1565b38610c95565b503d610cb7565b6040513d84823e3d90fd5b60046040517f5373352a000000000000000000000000000000000000000000000000000000008152fd5b506001600160a01b03600e541615610b02565b503461028657604060031936011261028657602090610d4d6134f3565b9063ffffffff6040610d5d613593565b926001600160a01b0380951681526006865220911660005282526040600020541615604051908152f35b50346102865760206003193601126102865760ff60406020926001600160a01b03610db06134f3565b168152600584522054166040519015158152f35b503461028657610dd336613693565b916001600160a01b0382168085526020906005825260ff604087205416156110435780151580610fa7575b610f13575b610e0b614047565b84610e8357507f55b28633cdb29709386f555dfc54418592ad475ce7a65a78ac5928af60ffb8f893600b610e7d9263ffffffff8516885252600060016040882082815501555b604051938493846001600160a01b0360409295949363ffffffff60608401971683521660208201520152565b0390a180f35b9343811115610ee9578060017f55b28633cdb29709386f555dfc54418592ad475ce7a65a78ac5928af60ffb8f896600b610e7d9563ffffffff88168b5252604089209073ffffffffffffffffffffffffffffffffffffffff198254161781550155610e51565b60046040517fd36c8500000000000000000000000000000000000000000000000000000000008152fd5b6040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff841660048201528281602481855afa908115610a8d578791610f8a575b50610e035760046040517f9153304b000000000000000000000000000000000000000000000000000000008152fd5b610fa19150833d85116107635761075581836137e8565b38610f5b565b6040517f1881d94d0000000000000000000000000000000000000000000000000000000081528381600481865afa90811561103857889161101b575b50610fed81613623565b610dfe5760046040517f78653622000000000000000000000000000000000000000000000000000000008152fd5b6110329150843d8611610a8657610a7881836137e8565b38610fe3565b6040513d8a823e3d90fd5b60046040517f8cd5e2c6000000000000000000000000000000000000000000000000000000008152fd5b50346102865767ffffffffffffffff60406001600160a01b0392611090366136ca565b969092168352600260205263ffffffff8484209116600052602052826000209082526020522091166000526020526020604060002054604051908152f35b503461028657600319360160808112611150576060136102865760206107fc6110f56134dd565b6110fd613716565b9061110661373a565b916024359190916040926001600160a01b03600093168352600160205263ffffffff8484209116835260205282822090825260205267ffffffffffffffff91829120541691161190565b5080fd5b5034610286576020600319360112610286577fd476ec5ec1ac11cec3714d41e7ea49419471aceb9bd0dff1becfc3e363a6239660206001600160a01b036111996134f3565b6111a1614047565b168073ffffffffffffffffffffffffffffffffffffffff19600e541617600e55604051908152a180f35b50346102865760406003193601126102865760206111f26111ea6134f3565b610c29613593565b6001600160a01b0360405191168152f35b50346102865761121236613693565b90916001600160a01b03809316928385526020926005845260ff6040872054161580611566575b610a98578415938415806114ca575b611436575b338752600781526040872063ffffffff85169081600052825283604060002054169587871461090d5733895260078352604089208260005283527fc0833c35bb1d0beadca36bed54c7098819e109542a6d233d33c7c2039c8ec9aa608060406000209973ffffffffffffffffffffffffffffffffffffffff199a818c8254161790556040519033825285878301528a60408301526060820152a183156113d25786159081156113ca575b506113a0577f661366f82fca66289bddc34462b3ab39d252b761599537d722a632d1bb066b8e96610e7d9461132e60019543613c92565b926040519461133c866137cc565b898652808601948552338c526008815260408c20916000525260406000209351169083541617825551918291015560405193849333859060609295949363ffffffff60808401976001600160a01b0380941685521660208401521660408201520152565b60046040517f78142dd2000000000000000000000000000000000000000000000000000000008152fd5b9050386112f7565b50915092507f661366f82fca66289bddc34462b3ab39d252b761599537d722a632d1bb066b8e94506080939150338652600883526040862081600052835260006001604082208281550155604051923384528301526040820152836060820152a180f35b6040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff8516600482015281816024818a5afa9081156110385788916114ad575b5061124d5760046040517f9153304b000000000000000000000000000000000000000000000000000000008152fd5b6114c49150823d84116107635761075581836137e8565b3861147e565b6040517f1881d94d00000000000000000000000000000000000000000000000000000000815282816004818b5afa90811561155b57899161153e575b5061151081613623565b6112485760046040517f78653622000000000000000000000000000000000000000000000000000000008152fd5b6115559150833d8511610a8657610a7881836137e8565b38611506565b6040513d8b823e3d90fd5b50841515611239565b5034610286576040600319360112610286576115896135a6565b611591613509565b611599614047565b6001600160a01b03918282168085526020936005855260ff6040872054161561104357811515806116ed575b611659575b8163ffffffff841691828852600987526040882054161461090d577f16aa0f528038ab41019e95bae5b418a50ba8532c5800e3b7ea2f517d3fa625f594600991875252604085209073ffffffffffffffffffffffffffffffffffffffff19825416179055610e7d604051928392839092916001600160a01b0360209163ffffffff604085019616845216910152565b6040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff841660048201528581602481865afa908115610a8d5787916116d0575b506115ca5760046040517f9153304b000000000000000000000000000000000000000000000000000000008152fd5b6116e79150863d88116107635761075581836137e8565b386116a1565b6040517f1881d94d0000000000000000000000000000000000000000000000000000000081528681600481875afa8015611038576001918991611764575b5061173581613623565b036115c55760046040517f3885d603000000000000000000000000000000000000000000000000000000008152fd5b61177b9150883d8a11610a8657610a7881836137e8565b3861172b565b50346102865761180067ffffffffffffffff60209260406117d96117a43661365c565b95919390946001600160a01b03851681526003895281812063ffffffff87166000528952816000208782528952205416613cce565b7f0000000000000000000000000000000000000000000000000000000000000000906140b9565b604051908152f35b503461028657600319360160a08112611150576060136102865761182a6134dd565b60843590611841611839613716565b339083613b2e565b156119885761184e613716565b6118a5602435918261185e61373a565b918590916040926001600160a01b03600093168352600160205263ffffffff8484209116835260205282822090825260205267ffffffffffffffff91829120541691161190565b15611946577f0d87345f3d1c929caba93e1c3821b54ff3512e12b66aa3cfe54b6bcbc17e59b49260a0926118d7613716565b926001600160a01b036118e861373a565b921693848852600260205263ffffffff604089209116600052602052604060002090875260205267ffffffffffffffff60408720911660005260205280604060002055604051916119388361380b565b60608301526080820152a180f35b602461195061373a565b67ffffffffffffffff604051917f5c33785a000000000000000000000000000000000000000000000000000000008352166004820152fd5b60046040517f82ceb50e000000000000000000000000000000000000000000000000000000008152fd5b5034610286576060600319360112610286576119cc6134f3565b6119d4613509565b604435906119e0614047565b6001600160a01b0383166119fb576119f89250614188565b80f35b6119f892614224565b503461028657611a1336613693565b9091611a1d614047565b6001600160a01b038093168085526020926005845260ff604087205416156110435781151580611c0a575b611b76575b63ffffffff831694858752600a85526040872054169382851461090d57857f55b28633cdb29709386f555dfc54418592ad475ce7a65a78ac5928af60ffb8f8968852600a82527f9914edfad6b7eac2e388f49bae232bd0e1954fbe92f5ed1ab975fc270f27cea5606060408a209573ffffffffffffffffffffffffffffffffffffffff199681888254161790556040519084825289868301526040820152a18215611b4657600192600b610e7d9593611b15938b52528660408a209384541617835543613c92565b9182910155604051938493846001600160a01b0360409295949363ffffffff60608401971683521660208201520152565b935090506060939150828652600b815260006001604088208281550155604051928352820152836040820152a180f35b6040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff841660048201528481602481865afa908115610a8d578791611bed575b50611a4d5760046040517f9153304b000000000000000000000000000000000000000000000000000000008152fd5b611c049150853d87116107635761075581836137e8565b38611bbe565b6040517f1881d94d0000000000000000000000000000000000000000000000000000000081528581600481875afa908115611038578891611c7e575b50611c5081613623565b611a485760046040517f78653622000000000000000000000000000000000000000000000000000000008152fd5b611c959150863d8811610a8657610a7881836137e8565b38611c46565b5034610286576020611cb5611caf3661365c565b91613bd6565b67ffffffffffffffff60405191168152f35b503461028657606060031936011261028657611ce16134f3565b611ce9613593565b906044356001600160a01b0381168103610519576020926107fc92613b2e565b50346102865767ffffffffffffffff60406020926001600160a01b03611d2e3661365c565b9290911683526003865263ffffffff84842091166000528552826000209082528452205416604051908152f35b503461028657600319360160a08112611150576060136102865760843567ffffffffffffffff8111611150576040611dc6611d9d611de193369060040161351f565b9290838251948592606435602085015284840137810186838201520360208101845201826137e8565b611dce613716565b611dd661373a565b906024359033613e6d565b507f3cd5e48f9730b129dc7550f0fcea9c767b7be37837cd10e55eb35f734f4bca0460405180610e7d3382613863565b5060031960c08136011261115057611e276134f3565b90611e30613509565b91604435611e3c613612565b9167ffffffffffffffff60843581811161202557611e5e90369060040161351f565b95909160a43590811161202157611e7990369060040161351f565b6001600160a01b0397919780951697888b52602095600c875260408c209a16998a60005286526040600020878c52865261ffff60408c20981697886000528652604060002054611eca368588613af7565b878151910120808203611fea575050908a94939291898652600c8752604086208b6000528752604060002088875287526040862089600052875260016040600020558a3b15611fe65785938a92611f7a92611f6560405198899788977fd0a1026000000000000000000000000000000000000000000000000000000000895260048901528d602489015260a0604489015260a4880191613842565b92336064870152858403016084860152613842565b0381348b5af18015610ce857611fca575b507e36c98efcf9e6641dfbc9051f66f405253e8e0c2ab4a24dccda15595b7378c860808686868a8760405194855284015260408301526060820152a180f35b611fd8909594939295613751565b611fe6579091928538611f8b565b8580fd5b60449250604051917f9e3e058300000000000000000000000000000000000000000000000000000000835260048301526024820152fd5b8880fd5b8780fd5b503461028657806003193601126102865760405180916004549081835260208093018092600483527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90835b8181106120d2575050508461208b9103856137e8565b60405193838594850191818652518092526040850193925b8281106120b257505050500390f35b83516001600160a01b0316855286955093810193928101926001016120a3565b82546001600160a01b031684529286019260019283019201612075565b50346102865780600319360112610286576001600160a01b036020915416604051908152f35b50346102865760806003193601126102865761212f6134f3565b602435906044359161ffff83168093036105195760643567ffffffffffffffff81116122555761216390369060040161351f565b9190338652602092600c84526001600160a01b0360408820951694856000528452604060002083885284526040872086600052845260406000205461222b577f3d52ff888d033fd3dd1d8057da59e850c91d91a72c41dfa445b247dfedeb6dc195610e7d936121d3368486613af7565b868151910120338a52600c875260408a208860005287526040600020828b52875260408a208360005287526040600020556040519687963388528701526040860152606085015260a0608085015260a0840191613842565b60046040517f895fdbee000000000000000000000000000000000000000000000000000000008152fd5b8480fd5b503461028657806003193601126102865760206001600d541415604051908152f35b503461028657806003193601126102865760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346102865780600319360112610286576122d8614047565b60006001600160a01b03815473ffffffffffffffffffffffffffffffffffffffff1981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610286576020600319360112610286576001600160a01b03604060209263ffffffff6123526135a6565b168152600a8452205416604051908152f35b50346102865760206003193601126102865760409063ffffffff6123866135a6565b168152600b60209081529190208054600190910154604080516001600160a01b03909316835292820152f35b90503461115057600319360161014081126124c557606013611150576123d66134dd565b9067ffffffffffffffff60e435818111612255576123f890369060040161351f565b610104358381116124c15761241190369060040161351f565b61012495919535948511612025576124a06124bb926124557f7edfa10fe10193301ad8a8bea7e968c7bcabcc64981f368e3aeada40ce26ae2c97369060040161351f565b93909861249360405198899861012061246d8b61380b565b60843560608c015260a43560808c015260c43560a08c01528060c08c01528a0191613842565b9287840390880152613842565b908382036101008501526001600160a01b0333981696613842565b0390a380f35b8680fd5b8280fd5b90503461115057610120600319360112611150576124e56134f3565b6124ed613509565b916124f6613612565b9067ffffffffffffffff9060c4358281116124c15761251990369060040161351f565b93909160e4358481116120215761253490369060040161351f565b919093610104359586116125e3576125c861ffff956125dd946125ba61257f7f8a0b1dce321c5c5fb42349bce46d18087c04140de520917661fb923e44a904b99a369060040161351f565b95909b6001600160a01b03976040519b8c9b6044358d521660208c015260843560408c015260a43560608c01528060808c01528a0191613842565b9187830360a0890152613842565b9184830360c086015280339a16981696613842565b0390a480f35b8980fd5b82346102865760206003193601126102865760209063ffffffff6126096135a6565b168152600982526001600160a01b038060408320541615159182612634575b50506040519015158152f35b6040919250600a845220541615158280612628565b82346102865761265836613693565b916001600160a01b0382168085526020906005825260ff604087205416156110435780151580612825575b612791575b6126928333613956565b90506113a0578461271f57507f661366f82fca66289bddc34462b3ab39d252b761599537d722a632d1bb066b8e93610e7d9133875260088152604087209063ffffffff851660005252600060016040822082815501555b60405193849333859060609295949363ffffffff60808401976001600160a01b0380941685521660208401521660408201520152565b9343811115610ee9578060017f661366f82fca66289bddc34462b3ab39d252b761599537d722a632d1bb066b8e96610e7d94338a526008815260408a209063ffffffff88166000525260406000209073ffffffffffffffffffffffffffffffffffffffff1982541617815501556126e9565b6040517f6750cd4c00000000000000000000000000000000000000000000000000000000815263ffffffff841660048201528281602481855afa908115610a8d578791612808575b506126885760046040517f9153304b000000000000000000000000000000000000000000000000000000008152fd5b61281f9150833d85116107635761075581836137e8565b876127d9565b6040517f1881d94d0000000000000000000000000000000000000000000000000000000081528381600481865afa908115611038578891612899575b5061286b81613623565b6126835760046040517f78653622000000000000000000000000000000000000000000000000000000008152fd5b6128b09150843d8611610a8657610a7881836137e8565b88612861565b82346102865767ffffffffffffffff60406020926001600160a01b036128db3661365c565b9290911683526001865263ffffffff84842091166000528552826000209082528452205416604051908152f35b8234610286576003193601608081126111505760601361028657602061293461292f6134dd565b6139d6565b6040519061294181613623565b8152f35b8234610286578060031936011261028657602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b82346102865760406003193601126102865760406129b36129a56134f3565b6129ad613593565b90613956565b6001600160a01b0383519216825215156020820152f35b82346102865760806003193601126102865761ffff60406129e96134f3565b926129f2613509565b6129fa613612565b946001600160a01b038091168352600c60205283832091166000526020528160002060443582526020522091166000526020526020604060002054604051908152f35b823461028657608060031936011261028657612a576134f3565b90612a60613509565b916044359063ffffffff80831680930361051957606435908116809103610519576001600160a01b0380951692838552600560205260ff6040862054161561104357849360649260405197889586947f9c33abf7000000000000000000000000000000000000000000000000000000008652600486015216602484015260448301525afa908115612b4e578091612b08575b60405160208082528190610404908201856135ed565b90503d8082843e612b1981846137e8565b8201916020818403126111505780519167ffffffffffffffff8311610286575091612b48916104049301613911565b82612af2565b604051903d90823e3d90fd5b82612b643661354d565b91612b6d6138b2565b50612b7782613729565b6001600d54036130825760a01b77ffffffff0000000000000000000000000000000000000000163317600d55612baf608083016138e8565b8061306f575b610cf357612bc16138b2565b50612bcb82613729565b81612ca4612ccc602086013533845260036020526040842063ffffffff809616600052602052604060002081855260205267ffffffffffffffff876040862092835497889484600181881601167fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000087161790557f000000000000000000000000000000000000000000000000000000000000000081612c6985613729565b91866001612c97612c8c88612c7d8b613729565b8d8787878133941601166140b9565b986040810190613d60565b99909a6040519d8e613794565b1601168a52166020890152336040890152166060870152608086015260a08501523691613af7565b60c0820152612ce3612cdd86613729565b33613ce7565b90612cf16060870187613d60565b612d00608089989398016138e8565b96612d3960405198899384937f4389e58f0000000000000000000000000000000000000000000000000000000085528760048601613dd9565b0381836001600160a01b0387165af1801561076a5783958491612fe4575b5060a0612dff927f1ab700d4ced0c005b164c0f789fd09fcbb0156d4c2041b8a3bfbcd961cd1567f612daa608094612db8612d968d6060810190613d60565b6040519485946060865260608601906135ed565b918483036020860152613842565b6001600160a01b03891660408301520390a101519660405197612dda896137b0565b885267ffffffffffffffff60018160208b0198160116865260408801968752016138e8565b8290612f23575b5083519586513481118015612f16575b612ecf5760808760208867ffffffffffffffff8989898985515180612ec0575b348110612eae575b506001600160a01b03600e5416918787510151908180612e9d575b85915010612e89575b505050506001600d5560405194518552511682840152518051604084015201516060820152f35b612e94930391614224565b86808080612e62565b612ea79185614224565b8a81612e59565b612eba90340382614188565b89612e3e565b612eca8184614188565b612e36565b6084908460208a0151604051927fe273c847000000000000000000000000000000000000000000000000000000008452600484015234602484015260448301526064820152fd5b5083602089015111612e16565b9150602460206001600160a01b03600e5416604051928380927f70a082310000000000000000000000000000000000000000000000000000000082523060048301525afa928315612b4e578093612fad575b50508115612f835786612e06565b60046040517fe8016043000000000000000000000000000000000000000000000000000000008152fd5b909192506020823d602011612fdc575b81612fca602093836137e8565b81010312610286575051908680612f75565b3d9150612fbd565b9550503d948584823e612ff786826137e8565b606081878101031261306b5761300f86820182613db1565b9560408201519067ffffffffffffffff8211611fe657927f1ab700d4ced0c005b164c0f789fd09fcbb0156d4c2041b8a3bfbcd961cd1567f612daa6130608560a095612dff98608098019101613911565b945050509250612d57565b8380fd5b506001600160a01b03600e541615612bb5565b60046040517f9633fed3000000000000000000000000000000000000000000000000000000008152fd5b8234610286576040600319360112610286576130c66134f3565b9067ffffffffffffffff60243511610286573660236024350112156102865767ffffffffffffffff6024356004013511610286576024356004013560051b91366024848135010111611150576001600160a01b0381168252600560205260ff60408320541615611043576001600160a01b0381163b1561115057604051907f20efd72200000000000000000000000000000000000000000000000000000000825260448201336004840152604060248401526024356004013590526064808301948301016024803501845b6024356004013581106131d157858086818180880381836001600160a01b038c165af18015610ce8576131c15750f35b6131ca90613751565b6102865780f35b90917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c85820301875282357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7d6024353603018112156124c1576024350160609063ffffffff80613243602484016135b9565b168452613252604483016135b9565b16602084015260648101357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbd8236030181121561202157019167ffffffffffffffff60248401351161202557602483013536036044840113612025576132cf60019383836020956040879601520190604460248201359101613842565b940197019101959095613191565b8234610286578060031936011261028657600d54906001821461333257506001600160a01b0381169060a01c63ffffffff165b6040805163ffffffff9290921682526001600160a01b03929092166020820152f35b809150613310565b90915082600319918236018481126124c5576060136111505761335b6134dd565b9367ffffffffffffffff9060843560a435838111611fe65761338190369060040161351f565b94909660c4359485116124c15761339f6133e795369060040161351f565b9590926133aa613716565b6133b261373a565b90866020840152898c60408501376133dd6040848d8d820190838201520360208101865201846137e8565b602435908d613e6d565b506001600160a01b03891694853b15612025576134639261344e6040519a8b998a9889987f13137d65000000000000000000000000000000000000000000000000000000008a5261343a60048b0161380b565b60648a0152608489015260e4880191613842565b923360a48701528584030160c4860152613842565b039134905af1801561076a576134a6575b50610e7d7f3cd5e48f9730b129dc7550f0fcea9c767b7be37837cd10e55eb35f734f4bca049160405191829182613863565b7f3cd5e48f9730b129dc7550f0fcea9c767b7be37837cd10e55eb35f734f4bca0491926134d5610e7d92613751565b929150613474565b606435906001600160a01b038216820361051957565b600435906001600160a01b038216820361051957565b602435906001600160a01b038216820361051957565b9181601f840112156105195782359167ffffffffffffffff8311610519576020838186019501011161051957565b60031990604082820112610519576004359167ffffffffffffffff8311610519578260a09203011261051957600401906024356001600160a01b03811681036105195790565b6024359063ffffffff8216820361051957565b6004359063ffffffff8216820361051957565b359063ffffffff8216820361051957565b60005b8381106135dd5750506000910152565b81810151838201526020016135cd565b90601f19601f60209361360b815180928187528780880191016135ca565b0116010190565b6064359061ffff8216820361051957565b6003111561362d57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003196060910112610519576004356001600160a01b0381168103610519579060243563ffffffff81168103610519579060443590565b60031960609101126105195760043563ffffffff8116810361051957906024356001600160a01b0381168103610519579060443590565b6003196080910112610519576004356001600160a01b0381168103610519579060243563ffffffff8116810361051957906044359060643567ffffffffffffffff811681036105195790565b60043563ffffffff811681036105195790565b3563ffffffff811681036105195790565b60443567ffffffffffffffff811681036105195790565b67ffffffffffffffff811161376557604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60e0810190811067ffffffffffffffff82111761376557604052565b6060810190811067ffffffffffffffff82111761376557604052565b6040810190811067ffffffffffffffff82111761376557604052565b90601f601f19910116810190811067ffffffffffffffff82111761376557604052565b60043563ffffffff811680910361051957815260243560208201526044359067ffffffffffffffff82168092036105195760400152565b601f8260209493601f19938186528686013760008582860101520116010190565b919091608081019260043563ffffffff8116809103610519578252602435602083015260443567ffffffffffffffff8116809103610519576060916001600160a01b0391604085015216910152565b604051906138bf826137b0565b81600081526000602082015260408051916138d9836137cc565b60008352600060208401520152565b3580151581036105195790565b67ffffffffffffffff811161376557601f01601f191660200190565b81601f82011215610519578051613927816138f5565b9261393560405194856137e8565b818452602082840101116105195761395391602080850191016135ca565b90565b916000916001600160a01b03809416600052600760205263ffffffff6040600020911660005260205282604060002054169283156139915750565b600a602052604060002054169250905081156139ac57600190565b60046040517ffbc6a95a000000000000000000000000000000000000000000000000000000008152fd5b60043563ffffffff81169182821415918261051957602435906044359367ffffffffffffffff9485811696878214159182610519576001600160a01b038716600090815260026020908152604080832063ffffffff891684528252808320898452825280832067ffffffffffffffff9490941683529290522054159081613a8b575b50613a7f576105195761051957613a6e92613bd6565b161015613a7a57600090565b600190565b50505050505050600290565b9250505060006001600160a01b038516815260016020526040812081928252602052604081208482526020528560408220541687111538613a58565b90816020910312610519575160038110156105195790565b90816020910312610519575180151581036105195790565b929192613b03826138f5565b91613b1160405193846137e8565b829481845281830111610519578281602093846000960137010152565b91613b398284613956565b6001600160a01b03928316939183168414613bcc5782602095600092600014613bac5750505063ffffffff16600052600b83526040600020905b600160405191613b82836137cc565b8354169283835201549384910152149081613ba2575b50613a7a57600090565b9050431038613b98565b16815260088552604080822063ffffffff90931682529185522090613b73565b5050505050600190565b90604092916000926001600160a01b03821684526001948594600160205281812063ffffffff8616825260205281812083825260205267ffffffffffffffff918291205416955b613c2a575b505050505090565b6001600160a01b038316600090815260026020908152604080832063ffffffff8816845282528083208584528252808320888a01851667ffffffffffffffff81168552925290912054909795969015613c8857508596959496613c1d565b9550849650613c22565b91908201809211613c9f57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b90600167ffffffffffffffff80931601918211613c9f57565b91906001600160a01b03809316600052600660205263ffffffff604060002091166000526020528160406000205416918215613d205750565b60096020526040600020541691508115613d3657565b60046040517fb6f3253d000000000000000000000000000000000000000000000000000000008152fd5b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610519570180359067ffffffffffffffff82116105195760200191813603831361051957565b919082604091031261051957604051613dc9816137cc565b6020808294805184520151910152565b9291604092613e5760c0613e65949897986060885267ffffffffffffffff8151166060890152602081015163ffffffff80911660808a01526001600160a01b03888301511660a08a015260608201511682890152608081015160e089015260a0810151610100890152015160e06101208801526101408701906135ed565b918583036020870152613842565b931515910152565b90949391946001600160a01b03821695600094878652600194602093600185526040968789209363ffffffff831694858b528752888a20868b52875267ffffffffffffffff9283808b8d205416921698828a11613f54575b5050505050838151910120978087526002845285872082885284528587208388528452858720858852845285872054898103613f1e57508652600283528486209086528252838520908552815282842091845252812055565b6044908a8851917fe4bb0ca100000000000000000000000000000000000000000000000000000000835260048301526024820152fd5b90916001018416835b613fb3575b50505050508887526001845285872082885284528587208388528452858720857fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000008254161790553880808080613ec5565b8481168a8111614041576001600160a01b038316600090815260026020908152604080832063ffffffff8816845282528083208c8452825280832067ffffffffffffffff861684529091529020541561401157508301841683613f5d565b6024908c51907f5c33785a0000000000000000000000000000000000000000000000000000000082526004820152fd5b50613f62565b6001600160a01b0360005416330361405b57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b9391926001600160a01b03604051947fffffffffffffffff000000000000000000000000000000000000000000000000602087019760c01b1687527fffffffff00000000000000000000000000000000000000000000000000000000809460e01b16602887015216602c85015260e01b16604c8301526050820152605081526080810181811067ffffffffffffffff8211176137655760405251902090565b3d15614183573d90614169826138f5565b9161417760405193846137e8565b82523d6000602084013e565b606090565b6001600160a01b038116156141fa57600080808085855af16141a8614158565b50156141b2575050565b6040517f2c024f920000000000000000000000000000000000000000000000000000000081526001600160a01b039190911660048201526024810191909152604490fd5b0390fd5b60046040517f32fa6a1d000000000000000000000000000000000000000000000000000000008152fd5b906001600160a01b03808216156141fa576142e892166000806040519361429f856142916020998a8301947fa9059cbb00000000000000000000000000000000000000000000000000000000865260248401602090939291936001600160a01b0360408201951681520152565b03601f1981018752866137e8565b604051946142ac866137cc565b8786527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656488870152519082855af16142e2614158565b9161439d565b805190828215928315614385575b505050156143015750565b608490604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b6143959350820181019101613adf565b3882816142f6565b9192901561441857508151156143b1575090565b3b156143ba5790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b82519091501561442b5750805190602001fd5b6141f6906040519182917f08c379a00000000000000000000000000000000000000000000000000000000083526020600484015260248301906135ed56fea26469706673582212208eb93be1833042f7327a1409b18b33d185385be07e9fd39f5bb27e7d1a12a2a664736f6c6343000816003360808060405234610016576101d0908161001c8239f35b600080fdfe60806040908082526004361015610045575b503461004057600490517fd6234725000000000000000000000000000000000000000000000000000000008152fd5b600080fd5b600090813560e01c90816301ffc9a7146100f6575080631881d94d146100da57806354fd4d50146100a957636750cd4c036100115790346100a55760206003193601126100a55760043563ffffffff8116036100a5576020905160018152f35b5080fd5b5090346100a557816003193601126100a557806002606092519167ffffffffffffffff835260ff6020840152820152f35b5090346100a557816003193601126100a5576020905160028152f35b9050346100a55760206003193601126100a5576004357fffffffff00000000000000000000000000000000000000000000000000000000811680910361019657602092507f97f0258400000000000000000000000000000000000000000000000000000000811490811561016c575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501483610165565b8280fdfea26469706673582212208ab35b37910f030dd558ed99e904687530ed8a07713d95eb657134cf419cb3da64736f6c63430008160033";
var isSuperArgs26 = (xs) => xs.length > 1;
var EndpointV2__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs26(args)) {
      super(...args);
    } else {
      super(_abi90, _bytecode26, args[0]);
    }
  }
  getDeployTransaction(_eid, overrides) {
    return super.getDeployTransaction(_eid, overrides || {});
  }
  deploy(_eid, overrides) {
    return super.deploy(_eid, overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi90);
  }
  static connect(address, runner) {
    return new Contract(address, _abi90, runner);
  }
};
EndpointV2__factory.bytecode = _bytecode26;
EndpointV2__factory.abi = _abi90;

// src/typechain/factories/artifacts/contracts/protocol/contracts/MessageLibManager__factory.ts
var _abi91 = [
  {
    inputs: [],
    name: "AlreadyRegistered",
    type: "error"
  },
  {
    inputs: [],
    name: "DefaultReceiveLibUnavailable",
    type: "error"
  },
  {
    inputs: [],
    name: "DefaultSendLibUnavailable",
    type: "error"
  },
  {
    inputs: [],
    name: "InvalidExpiry",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyNonDefaultLib",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyReceiveLib",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyRegisteredLib",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlyRegisteredOrDefaultLib",
    type: "error"
  },
  {
    inputs: [],
    name: "OnlySendLib",
    type: "error"
  },
  {
    inputs: [],
    name: "SameValue",
    type: "error"
  },
  {
    inputs: [],
    name: "UnsupportedEid",
    type: "error"
  },
  {
    inputs: [],
    name: "UnsupportedInterface",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldLib",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newLib",
        type: "address"
      }
    ],
    name: "DefaultReceiveLibrarySet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldLib",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiry",
        type: "uint256"
      }
    ],
    name: "DefaultReceiveLibraryTimeoutSet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newLib",
        type: "address"
      }
    ],
    name: "DefaultSendLibrarySet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newLib",
        type: "address"
      }
    ],
    name: "LibraryRegistered",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldLib",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newLib",
        type: "address"
      }
    ],
    name: "ReceiveLibrarySet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldLib",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timeout",
        type: "uint256"
      }
    ],
    name: "ReceiveLibraryTimoutSet",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newLib",
        type: "address"
      }
    ],
    name: "SendLibrarySet",
    type: "event"
  },
  {
    inputs: [],
    name: "blockedLibrary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "srcEid",
        type: "uint32"
      }
    ],
    name: "defaultReceiveLibrary",
    outputs: [
      {
        internalType: "address",
        name: "lib",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "srcEid",
        type: "uint32"
      }
    ],
    name: "defaultReceiveLibraryTimeout",
    outputs: [
      {
        internalType: "address",
        name: "lib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "dstEid",
        type: "uint32"
      }
    ],
    name: "defaultSendLibrary",
    outputs: [
      {
        internalType: "address",
        name: "lib",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oapp",
        type: "address"
      },
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "uint32",
        name: "_configType",
        type: "uint32"
      }
    ],
    name: "getConfig",
    outputs: [
      {
        internalType: "bytes",
        name: "config",
        type: "bytes"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_srcEid",
        type: "uint32"
      }
    ],
    name: "getReceiveLibrary",
    outputs: [
      {
        internalType: "address",
        name: "lib",
        type: "address"
      },
      {
        internalType: "bool",
        name: "isDefault",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "getRegisteredLibraries",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      }
    ],
    name: "getSendLibrary",
    outputs: [
      {
        internalType: "address",
        name: "lib",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      }
    ],
    name: "isDefaultSendLibrary",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lib",
        type: "address"
      }
    ],
    name: "isRegisteredLibrary",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      }
    ],
    name: "isSupportedEid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_srcEid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_actualReceiveLib",
        type: "address"
      }
    ],
    name: "isValidReceiveLibrary",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "srcEid",
        type: "uint32"
      }
    ],
    name: "receiveLibraryTimeout",
    outputs: [
      {
        internalType: "address",
        name: "lib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      }
    ],
    name: "registerLibrary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "eid",
            type: "uint32"
          },
          {
            internalType: "uint32",
            name: "configType",
            type: "uint32"
          },
          {
            internalType: "bytes",
            name: "config",
            type: "bytes"
          }
        ],
        internalType: "struct SetConfigParam[]",
        name: "_params",
        type: "tuple[]"
      }
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_newLib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_gracePeriod",
        type: "uint256"
      }
    ],
    name: "setDefaultReceiveLibrary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_expiry",
        type: "uint256"
      }
    ],
    name: "setDefaultReceiveLibraryTimeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_newLib",
        type: "address"
      }
    ],
    name: "setDefaultSendLibrary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_newLib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_gracePeriod",
        type: "uint256"
      }
    ],
    name: "setReceiveLibrary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_lib",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_expiry",
        type: "uint256"
      }
    ],
    name: "setReceiveLibraryTimeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "_newLib",
        type: "address"
      }
    ],
    name: "setSendLibrary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var MessageLibManager__factory = class {
  static createInterface() {
    return new Interface(_abi91);
  }
  static connect(address, runner) {
    return new Contract(address, _abi91, runner);
  }
};
MessageLibManager__factory.abi = _abi91;

// src/typechain/factories/artifacts/contracts/protocol/contracts/MessagingChannel__factory.ts
var _abi92 = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64"
      }
    ],
    name: "InvalidNonce",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "srcEid",
        type: "uint32"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sender",
        type: "bytes32"
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "nonce",
        type: "uint64"
      }
    ],
    name: "InboundNonceSkipped",
    type: "event"
  },
  {
    inputs: [],
    name: "eid",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_srcEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32"
      },
      {
        internalType: "uint64",
        name: "_nonce",
        type: "uint64"
      }
    ],
    name: "hasPayloadHash",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_srcEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32"
      }
    ],
    name: "inboundNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "srcEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "sender",
        type: "bytes32"
      },
      {
        internalType: "uint64",
        name: "inboundNonce",
        type: "uint64"
      }
    ],
    name: "inboundPayloadHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "payloadHash",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "srcEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "sender",
        type: "bytes32"
      }
    ],
    name: "lazyInboundNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "_dstEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_receiver",
        type: "bytes32"
      }
    ],
    name: "nextGuid",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address"
      },
      {
        internalType: "uint32",
        name: "dstEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "receiver",
        type: "bytes32"
      }
    ],
    name: "outboundNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_srcEid",
        type: "uint32"
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32"
      },
      {
        internalType: "uint64",
        name: "_nonce",
        type: "uint64"
      }
    ],
    name: "skip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var MessagingChannel__factory = class {
  static createInterface() {
    return new Interface(_abi92);
  }
  static connect(address, runner) {
    return new Contract(address, _abi92, runner);
  }
};
MessagingChannel__factory.abi = _abi92;

// src/typechain/factories/artifacts/contracts/protocol/contracts/MessagingComposer__factory.ts
var _abi93 = [
  {
    inputs: [],
    name: "ComposeExists",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "expected",
        type: "bytes32"
      },
      {
        internalType: "bytes32",
        name: "actual",
        type: "bytes32"
      }
    ],
    name: "ComposeNotFound",
    type: "error"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "guid",
        type: "bytes32"
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16"
      }
    ],
    name: "ComposeDelivered",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "guid",
        type: "bytes32"
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes"
      }
    ],
    name: "ComposeSent",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "executor",
        type: "address"
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "guid",
        type: "bytes32"
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gas",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "extraData",
        type: "bytes"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "reason",
        type: "bytes"
      }
    ],
    name: "LzComposeAlert",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "bytes32",
        name: "guid",
        type: "bytes32"
      },
      {
        internalType: "uint16",
        name: "index",
        type: "uint16"
      }
    ],
    name: "composeQueue",
    outputs: [
      {
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "uint16",
        name: "_index",
        type: "uint16"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      },
      {
        internalType: "bytes",
        name: "_extraData",
        type: "bytes"
      }
    ],
    name: "lzCompose",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "uint16",
        name: "_index",
        type: "uint16"
      },
      {
        internalType: "uint256",
        name: "_gas",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      },
      {
        internalType: "bytes",
        name: "_extraData",
        type: "bytes"
      },
      {
        internalType: "bytes",
        name: "_reason",
        type: "bytes"
      }
    ],
    name: "lzComposeAlert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address"
      },
      {
        internalType: "bytes32",
        name: "_guid",
        type: "bytes32"
      },
      {
        internalType: "uint16",
        name: "_index",
        type: "uint16"
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes"
      }
    ],
    name: "sendCompose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var MessagingComposer__factory = class {
  static createInterface() {
    return new Interface(_abi93);
  }
  static connect(address, runner) {
    return new Contract(address, _abi93, runner);
  }
};
MessagingComposer__factory.abi = _abi93;

// src/typechain/factories/artifacts/contracts/protocol/contracts/MessagingContext__factory.ts
var _abi94 = [
  {
    inputs: [],
    name: "getSendContext",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32"
      },
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "isSendingMessage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var MessagingContext__factory = class {
  static createInterface() {
    return new Interface(_abi94);
  }
  static connect(address, runner) {
    return new Contract(address, _abi94, runner);
  }
};
MessagingContext__factory.abi = _abi94;

// src/typechain/factories/node_modules/index.ts
var node_modules_exports = {};
__export(node_modules_exports, {
  hardhatDeploy: () => hardhat_deploy_exports
});

// src/typechain/factories/node_modules/hardhat-deploy/index.ts
var hardhat_deploy_exports = {};
__export(hardhat_deploy_exports, {
  extendedArtifacts: () => extendedArtifacts_exports
});

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/index.ts
var extendedArtifacts_exports = {};
__export(extendedArtifacts_exports, {
  BeaconProxy__factory: () => BeaconProxy__factory,
  DiamondCutFacet__factory: () => DiamondCutFacet__factory,
  DiamondERC165Init__factory: () => DiamondERC165Init__factory,
  DiamondLoupeFacetWithoutSupportsInterface__factory: () => DiamondLoupeFacetWithoutSupportsInterface__factory,
  DiamondLoupeFacet__factory: () => DiamondLoupeFacet__factory,
  Diamond__factory: () => Diamond__factory,
  EIP173ProxyWithReceive__factory: () => EIP173ProxyWithReceive__factory,
  EIP173Proxy__factory: () => EIP173Proxy__factory,
  ERC165Storage__factory: () => ERC165Storage__factory,
  ERC165__factory: () => ERC165__factory2,
  ERC1967Proxy__factory: () => ERC1967Proxy__factory2,
  ERC1967Upgrade__factory: () => ERC1967Upgrade__factory2,
  IBeacon__factory: () => IBeacon__factory2,
  IDiamondCut__factory: () => IDiamondCut__factory,
  IDiamondLoupe__factory: () => IDiamondLoupe__factory,
  IERC165__factory: () => IERC165__factory2,
  IERC173__factory: () => IERC173__factory,
  IERC1822Proxiable__factory: () => IERC1822Proxiable__factory2,
  LibDiamond__factory: () => LibDiamond__factory,
  OptimizedTransparentUpgradeableProxy__factory: () => OptimizedTransparentUpgradeableProxy__factory,
  Ownable__factory: () => Ownable__factory2,
  OwnershipFacet__factory: () => OwnershipFacet__factory,
  ProxyAdmin__factory: () => ProxyAdmin__factory2,
  Proxy__factory: () => Proxy__factory2,
  TransparentUpgradeableProxy__factory: () => TransparentUpgradeableProxy__factory2,
  UUPSUpgradeable__factory: () => UUPSUpgradeable__factory,
  UpgradeableBeacon__factory: () => UpgradeableBeacon__factory
});

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/BeaconProxy__factory.ts
var _abi95 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "beacon",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      }
    ],
    stateMutability: "payable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address"
      }
    ],
    name: "AdminChanged",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address"
      }
    ],
    name: "BeaconUpgraded",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address"
      }
    ],
    name: "Upgraded",
    type: "event"
  },
  {
    stateMutability: "payable",
    type: "fallback"
  },
  {
    stateMutability: "payable",
    type: "receive"
  }
];
var _bytecode27 = "0x608060405260405162000a9338038062000a938339810160408190526200002691620004c6565b6200005360017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5162000594565b60008051602062000a4c83398151915214620000735762000073620005ba565b620000818282600062000089565b505062000641565b62000094836200015e565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a2600082511180620000d65750805b15620001595762000157836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200011f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001459190620005d0565b83620002ff60201b620000291760201c565b505b505050565b62000174816200032e60201b620000551760201c565b620001d45760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b6200024e816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000217573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200023d9190620005d0565b6200032e60201b620000551760201c565b620002b55760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608401620001cb565b80620002de60008051602062000a4c83398151915260001b6200033d60201b620000711760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b606062000327838360405180606001604052806027815260200162000a6c6027913962000340565b9392505050565b6001600160a01b03163b151590565b90565b60606001600160a01b0384163b620003aa5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401620001cb565b600080856001600160a01b031685604051620003c79190620005ee565b600060405180830381855af49150503d806000811462000404576040519150601f19603f3d011682016040523d82523d6000602084013e62000409565b606091505b5090925090506200041c82828662000426565b9695505050505050565b606083156200043757508162000327565b825115620004485782518084602001fd5b8160405162461bcd60e51b8152600401620001cb91906200060c565b80516001600160a01b03811681146200047c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004b45781810151838201526020016200049a565b83811115620001575750506000910152565b60008060408385031215620004da57600080fd5b620004e58362000464565b60208401519092506001600160401b03808211156200050357600080fd5b818501915085601f8301126200051857600080fd5b8151818111156200052d576200052d62000481565b604051601f8201601f19908116603f0116810190838211818310171562000558576200055862000481565b816040528281528860208487010111156200057257600080fd5b6200058583602083016020880162000497565b80955050505050509250929050565b600082821015620005b557634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b600060208284031215620005e357600080fd5b620003278262000464565b600082516200060281846020870162000497565b9190910192915050565b60208152600082518060208401526200062d81604085016020870162000497565b601f01601f19169190910160400192915050565b6103fb80620006516000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610074565b610127565b565b606061004e838360405180606001604052806027815260200161039f6027913961014b565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b90565b60006100b47fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012291906102cb565b905090565b3660008037600080366000845af43d6000803e808015610146573d6000f35b3d6000fd5b606073ffffffffffffffffffffffffffffffffffffffff84163b6101f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e7472616374000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168560405161021e9190610331565b600060405180830381855af49150503d8060008114610259576040519150601f19603f3d011682016040523d82523d6000602084013e61025e565b606091505b509150915061026e828286610278565b9695505050505050565b6060831561028757508161004e565b8251156102975782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ed919061034d565b6000602082840312156102dd57600080fd5b815173ffffffffffffffffffffffffffffffffffffffff8116811461004e57600080fd5b60005b8381101561031c578181015183820152602001610304565b8381111561032b576000848401525b50505050565b60008251610343818460208701610301565b9190910192915050565b602081526000825180602084015261036c816040850160208701610301565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220744bcc0768461f75b2be5663808bceb137cf5b1106770132a21a570e5decafc064736f6c634300080a0033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564";
var isSuperArgs27 = (xs) => xs.length > 1;
var BeaconProxy__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs27(args)) {
      super(...args);
    } else {
      super(_abi95, _bytecode27, args[0]);
    }
  }
  getDeployTransaction(beacon, data, overrides) {
    return super.getDeployTransaction(beacon, data, overrides || {});
  }
  deploy(beacon, data, overrides) {
    return super.deploy(beacon, data, overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi95);
  }
  static connect(address, runner) {
    return new Contract(address, _abi95, runner);
  }
};
BeaconProxy__factory.bytecode = _bytecode27;
BeaconProxy__factory.abi = _abi95;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/Diamond__factory.ts
var _abi96 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractOwner",
        type: "address"
      },
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address"
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8"
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]"
          }
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]"
      },
      {
        components: [
          {
            internalType: "address",
            name: "initContract",
            type: "address"
          },
          {
            internalType: "bytes",
            name: "initData",
            type: "bytes"
          }
        ],
        internalType: "struct Diamond.Initialization[]",
        name: "_initializations",
        type: "tuple[]"
      }
    ],
    stateMutability: "payable",
    type: "constructor"
  },
  {
    stateMutability: "payable",
    type: "fallback"
  },
  {
    stateMutability: "payable",
    type: "receive"
  }
];
var _bytecode28 = "0x60806040526040516200321e3803806200321e833981016040819052620000269162001340565b6001600160a01b038316156200004c576200004c83620000f760201b620001071760201c565b62000074826000604051806020016040528060008152506200017b60201b620001c11760201c565b60005b8151811015620000ed57620000d88282815181106200009a576200009a62001514565b602002602001015160000151838381518110620000bb57620000bb62001514565b602002602001015160200151620003d960201b620004051760201c565b80620000e48162001540565b91505062000077565b505050506200173d565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132080546001600160a01b031981166001600160a01b0384811691821790935560405160008051602062003172833981519152939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b60005b83518110156200038a5760008482815181106200019f576200019f62001514565b602002602001015160200151905060006002811115620001c357620001c36200155e565b816002811115620001d857620001d86200155e565b1415620002375762000231858381518110620001f857620001f862001514565b60200260200101516000015186848151811062000219576200021962001514565b602002602001015160400151620005fe60201b60201c565b62000374565b60018160028111156200024e576200024e6200155e565b1415620002a757620002318583815181106200026e576200026e62001514565b6020026020010151600001518684815181106200028f576200028f62001514565b6020026020010151604001516200088860201b60201c565b6002816002811115620002be57620002be6200155e565b1415620003175762000231858381518110620002de57620002de62001514565b602002602001015160000151868481518110620002ff57620002ff62001514565b60200260200101516040015162000b1e60201b60201c565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b60648201526084015b60405180910390fd5b5080620003818162001540565b9150506200017e565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673838383604051620003c093929190620015a2565b60405180910390a1620003d48282620003d9565b505050565b6001600160a01b03821662000463578051156200045f5760405162461bcd60e51b815260206004820152603c60248201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860448201527f3029206275745f63616c6c64617461206973206e6f7420656d7074790000000060648201526084016200036b565b5050565b6000815111620004dc5760405162461bcd60e51b815260206004820152603d60248201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460448201527f7920627574205f696e6974206973206e6f74206164647265737328302900000060648201526084016200036b565b6001600160a01b038216301462000512576200051282604051806060016040528060288152602001620031926028913962000c7e565b600080836001600160a01b0316836040516200052f9190620016a9565b600060405180830381855af49150503d80600081146200056c576040519150601f19603f3d011682016040523d82523d6000602084013e62000571565b606091505b509150915081620005f857805115620005a0578060405162461bcd60e51b81526004016200036b9190620016c7565b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656044820152651d995c9d195960d21b60648201526084016200036b565b50505050565b6000815111620006545760405162461bcd60e51b815260206004820152602b6024820152600080516020620031fe83398151915260448201526a1858d95d081d1bc818dd5d60aa1b60648201526084016200036b565b600080516020620031728339815191526001600160a01b038316620006c05760405162461bcd60e51b815260206004820152602c6024820152600080516020620031ba83398151915260448201526b65206164647265737328302960a01b60648201526084016200036b565b6001600160a01b03831660009081526001820160205260409020546001600160601b038116620006f657620006f6828562000ca2565b60005b8351811015620008815760008482815181106200071a576200071a62001514565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03168015620007c25760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60448201527f6e207468617420616c726561647920657869737473000000000000000000000060648201526084016200036b565b6001600160e01b0319821660008181526020878152604080832080546001600160a01b03908116600160a01b6001600160601b038c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281546001600160a01b031916179055836200086681620016e3565b94505050508080620008789062001540565b915050620006f9565b5050505050565b6000815111620008de5760405162461bcd60e51b815260206004820152602b6024820152600080516020620031fe83398151915260448201526a1858d95d081d1bc818dd5d60aa1b60648201526084016200036b565b600080516020620031728339815191526001600160a01b0383166200094a5760405162461bcd60e51b815260206004820152602c6024820152600080516020620031ba83398151915260448201526b65206164647265737328302960a01b60648201526084016200036b565b6001600160a01b03831660009081526001820160205260409020546001600160601b038116620009805762000980828562000ca2565b60005b835181101562000881576000848281518110620009a457620009a462001514565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0390811690871681141562000a525760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e20776974682073616d652066756e6374696f6e000000000000000060648201526084016200036b565b62000a5f85828462000d0f565b6001600160e01b0319821660008181526020878152604080832080546001600160a01b03908116600160a01b6001600160601b038c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281546001600160a01b0319161790558362000b0381620016e3565b9450505050808062000b159062001540565b91505062000983565b600081511162000b745760405162461bcd60e51b815260206004820152602b6024820152600080516020620031fe83398151915260448201526a1858d95d081d1bc818dd5d60aa1b60648201526084016200036b565b600080516020620031728339815191526001600160a01b0383161562000c035760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260448201527f657373206d75737420626520616464726573732830290000000000000000000060648201526084016200036b565b60005b8251811015620005f857600083828151811062000c275762000c2762001514565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b031662000c6684828462000d0f565b5050808062000c759062001540565b91505062000c06565b813b8181620005f85760405162461bcd60e51b81526004016200036b9190620016c7565b62000cc781604051806060016040528060248152602001620031da6024913962000c7e565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160a01b03821662000d8d5760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e277420657869737400000000000000000060648201526084016200036b565b6001600160a01b03821630141562000dff5760405162461bcd60e51b815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526d3a30b1363290333ab731ba34b7b760911b60648201526084016200036b565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b0316929162000e50916200170d565b905080821462000f49576001600160a01b0384166000908152600186016020526040812080548390811062000e895762000e8962001514565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b92508291908590811062000edd5762000edd62001514565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b0384166000908152600186016020526040902080548062000f755762000f7562001727565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b0319851682528690526040812055806200088157600285015460009062000fd7906001906200170d565b6001600160a01b03861660009081526001808901602052604090912001549091508082146200108d5760008760020183815481106200101a576200101a62001514565b6000918252602090912001546002890180546001600160a01b0390921692508291849081106200104e576200104e62001514565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480620010a357620010a362001727565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b80516001600160a01b03811681146200110457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b038111828210171562001144576200114462001109565b60405290565b604051606081016001600160401b038111828210171562001144576200114462001109565b604051601f8201601f191681016001600160401b03811182821017156200119a576200119a62001109565b604052919050565b60006001600160401b03821115620011be57620011be62001109565b5060051b60200190565b60005b83811015620011e5578181015183820152602001620011cb565b83811115620005f85750506000910152565b6000601f83818401126200120a57600080fd5b82516020620012236200121d83620011a2565b6200116f565b82815260059290921b850181019181810190878411156200124357600080fd5b8287015b84811015620013345780516001600160401b0380821115620012695760008081fd5b908901906040601f19838d038101821315620012855760008081fd5b6200128f6200111f565b6200129c898601620010ec565b81528285015184811115620012b15760008081fd5b8086019550508d603f860112620012c85760008081fd5b8885015184811115620012df57620012df62001109565b620012f08a848e840116016200116f565b94508085528e848288010111156200130a57600092508283fd5b6200131b818b8701868901620011c8565b5080890193909352505084525091830191830162001247565b50979650505050505050565b6000806000606084860312156200135657600080fd5b6200136184620010ec565b60208501519093506001600160401b03808211156200137f57600080fd5b818601915086601f8301126200139457600080fd5b8151620013a56200121d82620011a2565b8082825260208201915060208360051b860101925089831115620013c857600080fd5b602085015b83811015620014e057805185811115620013e657600080fd5b86016060818d03601f19011215620013fd57600080fd5b620014076200114a565b6200141560208301620010ec565b81526040820151600381106200142a57600080fd5b60208201526060820151878111156200144257600080fd5b8083019250508c603f8301126200145857600080fd5b60208201516200146c6200121d82620011a2565b81815260059190911b83016040019060208101908f8311156200148e57600080fd5b6040850194505b82851015620014c95784516001600160e01b031981168114620014b757600080fd5b82526020948501949091019062001495565b6040840152505084525060209283019201620013cd565b5060408901519096509350505080821115620014fb57600080fd5b506200150a86828701620011f7565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156200155757620015576200152a565b5060010190565b634e487b7160e01b600052602160045260246000fd5b600081518084526200158e816020860160208601620011c8565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b848110156200167757898403607f19018652815180516001600160a01b031685528381015189860190600381106200161357634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b80831015620016615783516001600160e01b031916825292860192600192909201919086019062001635565b50978501979550505090820190600101620015cb565b50506001600160a01b038a169088015286810360408801526200169b818962001574565b9a9950505050505050505050565b60008251620016bd818460208701620011c8565b9190910192915050565b602081526000620016dc602083018462001574565b9392505050565b60006001600160601b03828116808214156200170357620017036200152a565b6001019392505050565b6000828210156200172257620017226200152a565b500390565b634e487b7160e01b600052603160045260246000fd5b611a25806200174d6000396000f3fe60806040523661000b57005b600080357fffffffff000000000000000000000000000000000000000000000000000000001681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6020819052604090912054819073ffffffffffffffffffffffffffffffffffffffff16806100e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f7420657869737460448201526064015b60405180910390fd5b3660008037600080366000845af43d6000803e808015610102573d6000f35b3d6000fd5b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132080547fffffffffffffffffffffffff0000000000000000000000000000000000000000811673ffffffffffffffffffffffffffffffffffffffff8481169182179093556040517fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b60005b83518110156103ba5760008482815181106101e1576101e1611657565b60200260200101516020015190506000600281111561020257610202611686565b81600281111561021457610214611686565b14156102635761025e85838151811061022f5761022f611657565b60200260200101516000015186848151811061024d5761024d611657565b6020026020010151604001516106be565b6103a7565b600181600281111561027757610277611686565b14156102c15761025e85838151811061029257610292611657565b6020026020010151600001518684815181106102b0576102b0611657565b602002602001015160400151610a71565b60028160028111156102d5576102d5611686565b141561031f5761025e8583815181106102f0576102f0611657565b60200260200101516000015186848151811061030e5761030e611657565b602002602001015160400151610e2e565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560448201527f74416374696f6e0000000000000000000000000000000000000000000000000060648201526084016100da565b50806103b2816116e4565b9150506101c4565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516103ee93929190611793565b60405180910390a16104008282610405565b505050565b73ffffffffffffffffffffffffffffffffffffffff82166104b3578051156104af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603c60248201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860448201527f3029206275745f63616c6c64617461206973206e6f7420656d7074790000000060648201526084016100da565b5050565b6000815111610544576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460448201527f7920627574205f696e6974206973206e6f74206164647265737328302900000060648201526084016100da565b73ffffffffffffffffffffffffffffffffffffffff8216301461058357610583826040518060600160405280602881526020016119a46028913961101b565b6000808373ffffffffffffffffffffffffffffffffffffffff16836040516105ab91906118fb565b600060405180830381855af49150503d80600081146105e6576040519150601f19603f3d011682016040523d82523d6000602084013e6105eb565b606091505b5091509150816106b85780511561063057806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100da9190611917565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560448201527f766572746564000000000000000000000000000000000000000000000000000060648201526084016100da565b50505050565b600081511161074f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660448201527f6163657420746f2063757400000000000000000000000000000000000000000060648201526084016100da565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c73ffffffffffffffffffffffffffffffffffffffff8316610813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260448201527f652061646472657373283029000000000000000000000000000000000000000060648201526084016100da565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001820160205260409020546bffffffffffffffffffffffff8116610858576108588285611056565b60005b8351811015610a6a57600084828151811061087857610878611657565b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff16801561095d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60448201527f6e207468617420616c726561647920657869737473000000000000000000000060648201526084016100da565b7fffffffff000000000000000000000000000000000000000000000000000000008216600081815260208781526040808320805473ffffffffffffffffffffffffffffffffffffffff908116740100000000000000000000000000000000000000006bffffffffffffffffffffffff8c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281547fffffffffffffffffffffffff00000000000000000000000000000000000000001617905583610a5281611931565b94505050508080610a62906116e4565b91505061085b565b5050505050565b6000815111610b02576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660448201527f6163657420746f2063757400000000000000000000000000000000000000000060648201526084016100da565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c73ffffffffffffffffffffffffffffffffffffffff8316610bc6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260448201527f652061646472657373283029000000000000000000000000000000000000000060648201526084016100da565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001820160205260409020546bffffffffffffffffffffffff8116610c0b57610c0b8285611056565b60005b8351811015610a6a576000848281518110610c2b57610c2b611657565b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff908116908716811415610d16576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e20776974682073616d652066756e6374696f6e000000000000000060648201526084016100da565b610d218582846110e5565b7fffffffff000000000000000000000000000000000000000000000000000000008216600081815260208781526040808320805473ffffffffffffffffffffffffffffffffffffffff908116740100000000000000000000000000000000000000006bffffffffffffffffffffffff8c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281547fffffffffffffffffffffffff00000000000000000000000000000000000000001617905583610e1681611931565b94505050508080610e26906116e4565b915050610c0e565b6000815111610ebf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660448201527f6163657420746f2063757400000000000000000000000000000000000000000060648201526084016100da565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c73ffffffffffffffffffffffffffffffffffffffff831615610f84576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260448201527f657373206d75737420626520616464726573732830290000000000000000000060648201526084016100da565b60005b82518110156106b8576000838281518110610fa457610fa4611657565b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529185905260409091205490915073ffffffffffffffffffffffffffffffffffffffff166110068482846110e5565b50508080611013906116e4565b915050610f87565b813b81816106b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100da9190611917565b611078816040518060600160405280602481526020016119cc6024913961101b565b60028201805473ffffffffffffffffffffffffffffffffffffffff90921660008181526001948501602090815260408220860185905594840183559182529290200180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055565b73ffffffffffffffffffffffffffffffffffffffff8216611188576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e277420657869737400000000000000000060648201526084016100da565b73ffffffffffffffffffffffffffffffffffffffff821630141561122e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201527f7461626c652066756e6374696f6e00000000000000000000000000000000000060648201526084016100da565b7fffffffff0000000000000000000000000000000000000000000000000000000081166000908152602084815260408083205473ffffffffffffffffffffffffffffffffffffffff86168452600180880190935290832054740100000000000000000000000000000000000000009091046bffffffffffffffffffffffff1692916112b89161195d565b90508082146113ff5773ffffffffffffffffffffffffffffffffffffffff8416600090815260018601602052604081208054839081106112fa576112fa611657565b6000918252602080832060088304015473ffffffffffffffffffffffffffffffffffffffff8916845260018a019091526040909220805460079092166004026101000a90920460e01b92508291908590811061135857611358611657565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790557fffffffff0000000000000000000000000000000000000000000000000000000092909216825286905260409020805473ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000006bffffffffffffffffffffffff8516021790555b73ffffffffffffffffffffffffffffffffffffffff84166000908152600186016020526040902080548061143557611435611974565b6000828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff0000000000000000000000000000000000000000000000000000000085168252869052604081205580610a6a5760028501546000906114ca9060019061195d565b73ffffffffffffffffffffffffffffffffffffffff861660009081526001808901602052604090912001549091508082146115b857600087600201838154811061151657611516611657565b60009182526020909120015460028901805473ffffffffffffffffffffffffffffffffffffffff909216925082918490811061155457611554611657565b600091825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff948516179055929091168152600189810190925260409020018190555b866002018054806115cb576115cb611974565b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff88168252600189810190915260408220015550505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611716576117166116b5565b5060010190565b60005b83811015611738578181015183820152602001611720565b838111156106b85750506000910152565b6000815180845261176181602086016020860161171d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b848110156118be577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a8503018652815188850173ffffffffffffffffffffffffffffffffffffffff82511686528482015160038110611845577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b808310156118a95783517fffffffff00000000000000000000000000000000000000000000000000000000168252928601926001929092019190860190611867565b509785019795505050908201906001016117bc565b505073ffffffffffffffffffffffffffffffffffffffff8a169088015286810360408801526118ed8189611749565b9a9950505050505050505050565b6000825161190d81846020870161171d565b9190910192915050565b60208152600061192a6020830184611749565b9392505050565b60006bffffffffffffffffffffffff80831681811415611953576119536116b5565b6001019392505050565b60008282101561196f5761196f6116b5565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a26469706673582212202b18a533b03703e1326000cf2f36b1c6ec631cff163a752d939e5ee79ad2cde364736f6c634300080a0033c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204164642066616365742063616e277420624c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f64654c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e2066";
var isSuperArgs28 = (xs) => xs.length > 1;
var Diamond__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs28(args)) {
      super(...args);
    } else {
      super(_abi96, _bytecode28, args[0]);
    }
  }
  getDeployTransaction(_contractOwner, _diamondCut, _initializations, overrides) {
    return super.getDeployTransaction(
      _contractOwner,
      _diamondCut,
      _initializations,
      overrides || {}
    );
  }
  deploy(_contractOwner, _diamondCut, _initializations, overrides) {
    return super.deploy(
      _contractOwner,
      _diamondCut,
      _initializations,
      overrides || {}
    );
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi96);
  }
  static connect(address, runner) {
    return new Contract(address, _abi96, runner);
  }
};
Diamond__factory.bytecode = _bytecode28;
Diamond__factory.abi = _abi96;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/DiamondCutFacet__factory.ts
var _abi97 = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address"
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8"
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]"
          }
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]"
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes"
      }
    ],
    name: "DiamondCut",
    type: "event"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address"
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8"
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]"
          }
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]"
      },
      {
        internalType: "address",
        name: "_init",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes"
      }
    ],
    name: "diamondCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var _bytecode29 = "0x608060405234801561001057600080fd5b50611d16806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f931c1c14610030575b600080fd5b61004361003e36600461166f565b610045565b005b61004d61009e565b61009761005a85876117ec565b8484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061016e92505050565b5050505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff16331461016c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201527f657200000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b565b60005b835181101561036757600084828151811061018e5761018e611948565b6020026020010151602001519050600060028111156101af576101af611977565b8160028111156101c1576101c1611977565b14156102105761020b8583815181106101dc576101dc611948565b6020026020010151600001518684815181106101fa576101fa611948565b6020026020010151604001516103b2565b610354565b600181600281111561022457610224611977565b141561026e5761020b85838151811061023f5761023f611948565b60200260200101516000015186848151811061025d5761025d611948565b60200260200101516040015161075e565b600281600281111561028257610282611977565b14156102cc5761020b85838151811061029d5761029d611948565b6020026020010151600001518684815181106102bb576102bb611948565b602002602001015160400151610b1b565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560448201527f74416374696f6e000000000000000000000000000000000000000000000000006064820152608401610163565b508061035f816119d5565b915050610171565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161039b93929190611a84565b60405180910390a16103ad8282610d0e565b505050565b6000815111610443576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660448201527f6163657420746f206375740000000000000000000000000000000000000000006064820152608401610163565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c73ffffffffffffffffffffffffffffffffffffffff8316610507576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260448201527f65206164647265737328302900000000000000000000000000000000000000006064820152608401610163565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001820160205260409020546bffffffffffffffffffffffff811661054c5761054c8285610fc1565b60005b835181101561009757600084828151811061056c5761056c611948565b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff168015610651576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60448201527f6e207468617420616c72656164792065786973747300000000000000000000006064820152608401610163565b7fffffffff000000000000000000000000000000000000000000000000000000008216600081815260208781526040808320805473ffffffffffffffffffffffffffffffffffffffff908116740100000000000000000000000000000000000000006bffffffffffffffffffffffff8c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281547fffffffffffffffffffffffff0000000000000000000000000000000000000000161790558361074681611bec565b94505050508080610756906119d5565b91505061054f565b60008151116107ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660448201527f6163657420746f206375740000000000000000000000000000000000000000006064820152608401610163565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c73ffffffffffffffffffffffffffffffffffffffff83166108b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260448201527f65206164647265737328302900000000000000000000000000000000000000006064820152608401610163565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001820160205260409020546bffffffffffffffffffffffff81166108f8576108f88285610fc1565b60005b835181101561009757600084828151811061091857610918611948565b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff908116908716811415610a03576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e20776974682073616d652066756e6374696f6e00000000000000006064820152608401610163565b610a0e858284611050565b7fffffffff000000000000000000000000000000000000000000000000000000008216600081815260208781526040808320805473ffffffffffffffffffffffffffffffffffffffff908116740100000000000000000000000000000000000000006bffffffffffffffffffffffff8c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281547fffffffffffffffffffffffff00000000000000000000000000000000000000001617905583610b0381611bec565b94505050508080610b13906119d5565b9150506108fb565b6000815111610bac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660448201527f6163657420746f206375740000000000000000000000000000000000000000006064820152608401610163565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c73ffffffffffffffffffffffffffffffffffffffff831615610c71576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260448201527f657373206d7573742062652061646472657373283029000000000000000000006064820152608401610163565b60005b8251811015610d08576000838281518110610c9157610c91611948565b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529185905260409091205490915073ffffffffffffffffffffffffffffffffffffffff16610cf3848284611050565b50508080610d00906119d5565b915050610c74565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610dbc57805115610db8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603c60248201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860448201527f3029206275745f63616c6c64617461206973206e6f7420656d707479000000006064820152608401610163565b5050565b6000815111610e4d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460448201527f7920627574205f696e6974206973206e6f7420616464726573732830290000006064820152608401610163565b73ffffffffffffffffffffffffffffffffffffffff82163014610e8c57610e8c82604051806060016040528060288152602001611c95602891396115c2565b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051610eb49190611c18565b600060405180830381855af49150503d8060008114610eef576040519150601f19603f3d011682016040523d82523d6000602084013e610ef4565b606091505b509150915081610d0857805115610f3957806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101639190611c34565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560448201527f76657274656400000000000000000000000000000000000000000000000000006064820152608401610163565b610fe381604051806060016040528060248152602001611cbd602491396115c2565b60028201805473ffffffffffffffffffffffffffffffffffffffff90921660008181526001948501602090815260408220860185905594840183559182529290200180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055565b73ffffffffffffffffffffffffffffffffffffffff82166110f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e27742065786973740000000000000000006064820152608401610163565b73ffffffffffffffffffffffffffffffffffffffff8216301415611199576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201527f7461626c652066756e6374696f6e0000000000000000000000000000000000006064820152608401610163565b7fffffffff0000000000000000000000000000000000000000000000000000000081166000908152602084815260408083205473ffffffffffffffffffffffffffffffffffffffff86168452600180880190935290832054740100000000000000000000000000000000000000009091046bffffffffffffffffffffffff16929161122391611c4e565b905080821461136a5773ffffffffffffffffffffffffffffffffffffffff84166000908152600186016020526040812080548390811061126557611265611948565b6000918252602080832060088304015473ffffffffffffffffffffffffffffffffffffffff8916845260018a019091526040909220805460079092166004026101000a90920460e01b9250829190859081106112c3576112c3611948565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790557fffffffff0000000000000000000000000000000000000000000000000000000092909216825286905260409020805473ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000006bffffffffffffffffffffffff8516021790555b73ffffffffffffffffffffffffffffffffffffffff8416600090815260018601602052604090208054806113a0576113a0611c65565b6000828152602080822060087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff000000000000000000000000000000000000000000000000000000008516825286905260408120558061009757600285015460009061143590600190611c4e565b73ffffffffffffffffffffffffffffffffffffffff8616600090815260018089016020526040909120015490915080821461152357600087600201838154811061148157611481611948565b60009182526020909120015460028901805473ffffffffffffffffffffffffffffffffffffffff90921692508291849081106114bf576114bf611948565b600091825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff948516179055929091168152600189810190925260409020018190555b8660020180548061153657611536611c65565b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff88168252600189810190915260408220015550505050505050565b813b8181610d08576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101639190611c34565b803573ffffffffffffffffffffffffffffffffffffffff8116811461162157600080fd5b919050565b60008083601f84011261163857600080fd5b50813567ffffffffffffffff81111561165057600080fd5b60208301915083602082850101111561166857600080fd5b9250929050565b60008060008060006060868803121561168757600080fd5b853567ffffffffffffffff8082111561169f57600080fd5b818801915088601f8301126116b357600080fd5b8135818111156116c257600080fd5b8960208260051b85010111156116d757600080fd5b602083019750809650506116ed602089016115fd565b9450604088013591508082111561170357600080fd5b5061171088828901611626565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561177357611773611721565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156117c0576117c0611721565b604052919050565b600067ffffffffffffffff8211156117e2576117e2611721565b5060051b60200190565b60006117ff6117fa846117c8565b611779565b83815260208082019190600586811b86013681111561181d57600080fd5b865b8181101561193b57803567ffffffffffffffff808211156118405760008081fd5b818a019150606082360312156118565760008081fd5b61185e611750565b611867836115fd565b8152868301356003811061187b5760008081fd5b81880152604083810135838111156118935760008081fd5b939093019236601f8501126118aa57600092508283fd5b833592506118ba6117fa846117c8565b83815292871b840188019288810190368511156118d75760008081fd5b948901945b848610156119245785357fffffffff00000000000000000000000000000000000000000000000000000000811681146119155760008081fd5b825294890194908901906118dc565b91830191909152508852505094830194830161181f565b5092979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611a0757611a076119a6565b5060010190565b60005b83811015611a29578181015183820152602001611a11565b83811115610d085750506000910152565b60008151808452611a52816020860160208601611a0e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b84811015611baf577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a8503018652815188850173ffffffffffffffffffffffffffffffffffffffff82511686528482015160038110611b36577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b80831015611b9a5783517fffffffff00000000000000000000000000000000000000000000000000000000168252928601926001929092019190860190611b58565b50978501979550505090820190600101611aad565b505073ffffffffffffffffffffffffffffffffffffffff8a16908801528681036040880152611bde8189611a3a565b9a9950505050505050505050565b60006bffffffffffffffffffffffff80831681811415611c0e57611c0e6119a6565b6001019392505050565b60008251611c2a818460208701611a0e565b9190910192915050565b602081526000611c476020830184611a3a565b9392505050565b600082821015611c6057611c606119a6565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a26469706673582212205ebb55271a7b4137fff1fdb3061128fbde1889b068f341304476640c9c0371cf64736f6c634300080a0033";
var isSuperArgs29 = (xs) => xs.length > 1;
var DiamondCutFacet__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs29(args)) {
      super(...args);
    } else {
      super(_abi97, _bytecode29, args[0]);
    }
  }
  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }
  deploy(overrides) {
    return super.deploy(overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi97);
  }
  static connect(address, runner) {
    return new Contract(address, _abi97, runner);
  }
};
DiamondCutFacet__factory.bytecode = _bytecode29;
DiamondCutFacet__factory.abi = _abi97;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/DiamondERC165Init__factory.ts
var _abi98 = [
  {
    inputs: [
      {
        internalType: "bytes4[]",
        name: "interfaceIds",
        type: "bytes4[]"
      },
      {
        internalType: "bytes4[]",
        name: "interfaceIdsToRemove",
        type: "bytes4[]"
      }
    ],
    name: "setERC165",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var _bytecode30 = "0x608060405234801561001057600080fd5b5061041e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80632a84809114610030575b600080fd5b61004361003e3660046102a4565b610045565b005b7f01ffc9a70000000000000000000000000000000000000000000000000000000060009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131f6020527f699d9daa71b280d05a152715774afa0a81a312594b2d731d6b0b2552b7d6f69f80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c905b848110156101a457600182600301600088888581811061011e5761011e610310565b9050602002016020810190610133919061033f565b7fffffffff00000000000000000000000000000000000000000000000000000000168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790558061019c81610388565b9150506100fc565b5060005b828110156102505760008260030160008686858181106101ca576101ca610310565b90506020020160208101906101df919061033f565b7fffffffff00000000000000000000000000000000000000000000000000000000168152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790558061024881610388565b9150506101a8565b505050505050565b60008083601f84011261026a57600080fd5b50813567ffffffffffffffff81111561028257600080fd5b6020830191508360208260051b850101111561029d57600080fd5b9250929050565b600080600080604085870312156102ba57600080fd5b843567ffffffffffffffff808211156102d257600080fd5b6102de88838901610258565b909650945060208701359150808211156102f757600080fd5b5061030487828801610258565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561035157600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461038157600080fd5b9392505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156103e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea264697066735822122089ec289e8a22b626b334a083bad15a54a94f6bb0677c64dd693ce4bbd20ff34664736f6c634300080a0033";
var isSuperArgs30 = (xs) => xs.length > 1;
var DiamondERC165Init__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs30(args)) {
      super(...args);
    } else {
      super(_abi98, _bytecode30, args[0]);
    }
  }
  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }
  deploy(overrides) {
    return super.deploy(overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi98);
  }
  static connect(address, runner) {
    return new Contract(address, _abi98, runner);
  }
};
DiamondERC165Init__factory.bytecode = _bytecode30;
DiamondERC165Init__factory.abi = _abi98;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/DiamondLoupeFacet__factory.ts
var _abi99 = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_functionSelector",
        type: "bytes4"
      }
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "facetAddress_",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "facetAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "facetAddresses_",
        type: "address[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address"
      }
    ],
    name: "facetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "facetFunctionSelectors_",
        type: "bytes4[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "facets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address"
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]"
          }
        ],
        internalType: "struct IDiamondLoupe.Facet[]",
        name: "facets_",
        type: "tuple[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var _bytecode31 = "0x608060405234801561001057600080fd5b5061084e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80637a0ed627116100505780637a0ed627146100fa578063adfca15e1461010f578063cdffacc61461012f57600080fd5b806301ffc9a71461006c57806352ef6b2c146100e5575b600080fd5b6100d061007a366004610569565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131f602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100ed6101cb565b6040516100dc91906105b2565b61010261025d565b6040516100dc9190610669565b61012261011d366004610711565b610469565b6040516100dc9190610747565b6101a661013d366004610569565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100dc565b606060007fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6002810180546040805160208084028201810190925282815293945083018282801561025257602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610227575b505050505091505090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e546060907fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c908067ffffffffffffffff8111156102bd576102bd61075a565b60405190808252806020026020018201604052801561030357816020015b6040805180820190915260008152606060208201528152602001906001900390816102db5790505b50925060005b8181101561046357600083600201828154811061032857610328610789565b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508085838151811061036857610368610789565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff928316905290821660009081526001860182526040908190208054825181850281018501909352808352919290919083018282801561042957602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116103d65790505b505050505085838151811061044057610440610789565b60200260200101516020018190525050808061045b906107b8565b915050610309565b50505090565b73ffffffffffffffffffffffffffffffffffffffff811660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d602090815260409182902080548351818402810184019094528084526060937fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c939092919083018282801561055c57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116105095790505b5050505050915050919050565b60006020828403121561057b57600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146105ab57600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b8181101561060057835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016105ce565b50909695505050505050565b600081518084526020808501945080840160005b8381101561065e5781517fffffffff000000000000000000000000000000000000000000000000000000001687529582019590820190600101610620565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610703578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00185528151805173ffffffffffffffffffffffffffffffffffffffff1684528701518784018790526106f08785018261060c565b9588019593505090860190600101610690565b509098975050505050505050565b60006020828403121561072357600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146105ab57600080fd5b6020815260006105ab602083018461060c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610811577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220d2f6c23b0c64effd7424eb9da8e13cc0a62fab9990643ce1a7bc54f830cc768464736f6c634300080a0033";
var isSuperArgs31 = (xs) => xs.length > 1;
var DiamondLoupeFacet__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs31(args)) {
      super(...args);
    } else {
      super(_abi99, _bytecode31, args[0]);
    }
  }
  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }
  deploy(overrides) {
    return super.deploy(overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi99);
  }
  static connect(address, runner) {
    return new Contract(address, _abi99, runner);
  }
};
DiamondLoupeFacet__factory.bytecode = _bytecode31;
DiamondLoupeFacet__factory.abi = _abi99;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/DiamondLoupeFacetWithoutSupportsInterface__factory.ts
var _abi100 = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_functionSelector",
        type: "bytes4"
      }
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "facetAddress_",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "facetAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "facetAddresses_",
        type: "address[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address"
      }
    ],
    name: "facetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "facetFunctionSelectors_",
        type: "bytes4[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "facets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address"
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]"
          }
        ],
        internalType: "struct IDiamondLoupe.Facet[]",
        name: "facets_",
        type: "tuple[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var _bytecode32 = "0x608060405234801561001057600080fd5b506107c3806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806352ef6b2c146100515780637a0ed6271461006f578063adfca15e14610084578063cdffacc6146100a4575b600080fd5b610059610140565b60405161006691906104de565b60405180910390f35b6100776101d2565b6040516100669190610595565b61009761009236600461063d565b6103de565b604051610066919061067a565b61011b6100b236600461068d565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610066565b606060007fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600281018054604080516020808402820181019092528281529394508301828280156101c757602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161019c575b505050505091505090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e546060907fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c908067ffffffffffffffff811115610232576102326106cf565b60405190808252806020026020018201604052801561027857816020015b6040805180820190915260008152606060208201528152602001906001900390816102505790505b50925060005b818110156103d857600083600201828154811061029d5761029d6106fe565b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050808583815181106102dd576102dd6106fe565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff928316905290821660009081526001860182526040908190208054825181850281018501909352808352919290919083018282801561039e57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841161034b5790505b50505050508583815181106103b5576103b56106fe565b6020026020010151602001819052505080806103d09061072d565b91505061027e565b50505090565b73ffffffffffffffffffffffffffffffffffffffff811660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d602090815260409182902080548351818402810184019094528084526060937fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c93909291908301828280156104d157602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841161047e5790505b5050505050915050919050565b6020808252825182820181905260009190848201906040850190845b8181101561052c57835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016104fa565b50909695505050505050565b600081518084526020808501945080840160005b8381101561058a5781517fffffffff00000000000000000000000000000000000000000000000000000000168752958201959082019060010161054c565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561062f578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00185528151805173ffffffffffffffffffffffffffffffffffffffff16845287015187840187905261061c87850182610538565b95880195935050908601906001016105bc565b509098975050505050505050565b60006020828403121561064f57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461067357600080fd5b9392505050565b6020815260006106736020830184610538565b60006020828403121561069f57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461067357600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610786577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220cb986091e36c99b33615a659f908bbdf81cdc170b39858195b82d45b2e733a5e64736f6c634300080a0033";
var isSuperArgs32 = (xs) => xs.length > 1;
var DiamondLoupeFacetWithoutSupportsInterface__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs32(args)) {
      super(...args);
    } else {
      super(_abi100, _bytecode32, args[0]);
    }
  }
  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }
  deploy(overrides) {
    return super.deploy(overrides || {});
  }
  connect(runner) {
    return super.connect(
      runner
    );
  }
  static createInterface() {
    return new Interface(
      _abi100
    );
  }
  static connect(address, runner) {
    return new Contract(
      address,
      _abi100,
      runner
    );
  }
};
DiamondLoupeFacetWithoutSupportsInterface__factory.bytecode = _bytecode32;
DiamondLoupeFacetWithoutSupportsInterface__factory.abi = _abi100;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/EIP173Proxy__factory.ts
var _abi101 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "implementationAddress",
        type: "address"
      },
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      }
    ],
    stateMutability: "payable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousImplementation",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newImplementation",
        type: "address"
      }
    ],
    name: "ProxyImplementationUpdated",
    type: "event"
  },
  {
    stateMutability: "payable",
    type: "fallback"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "id",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address"
      }
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      }
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    stateMutability: "payable",
    type: "receive"
  }
];
var _bytecode33 = "0x608060405260405162000ccc38038062000ccc8339810160408190526200002691620001fc565b620000318262000046565b6200003d8382620000b8565b505050620002fa565b60006200006060008051602062000cac8339815191525490565b90508160008051602062000cac83398151915255816001600160a01b0316816001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8054908390556040516001600160a01b0380851691908316907f5570d70a002632a7b0b3c9304cc89efb62d8da9eca0dbd7752c83b737906829690600090a381511562000195576000836001600160a01b0316836040516200013c9190620002dc565b600060405180830381855af49150503d806000811462000179576040519150601f19603f3d011682016040523d82523d6000602084013e6200017e565b606091505b505090508062000193573d806000803e806000fd5b505b505050565b80516001600160a01b0381168114620001b257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620001ea578181015183820152602001620001d0565b83811115620001935750506000910152565b6000806000606084860312156200021257600080fd5b6200021d846200019a565b92506200022d602085016200019a565b60408501519092506001600160401b03808211156200024b57600080fd5b818601915086601f8301126200026057600080fd5b815181811115620002755762000275620001b7565b604051601f8201601f19908116603f01168101908382118183101715620002a057620002a0620001b7565b81604052828152896020848701011115620002ba57600080fd5b620002cd836020830160208801620001cd565b80955050505050509250925092565b60008251620002f0818460208701620001cd565b9190910192915050565b6109a2806200030a6000396000f3fe60806040526004361061005e5760003560e01c80634f1ef286116100435780634f1ef286146101295780638da5cb5b1461013c578063f2fde38b14610176576100ca565b806301ffc9a7146100d45780633659cfe614610109576100ca565b366100ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f45544845525f52454a454354454400000000000000000000000000000000000060448201526064015b60405180910390fd5b6100d2610196565b005b3480156100e057600080fd5b506100f46100ef366004610806565b6101e1565b60405190151581526020015b60405180910390f35b34801561011557600080fd5b506100d2610124366004610871565b6103af565b6100d261013736600461088c565b610481565b34801561014857600080fd5b5061015161057c565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610100565b34801561018257600080fd5b506100d2610191366004610871565b6105ab565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5460003681823780813683855af491503d8082833e8280156101d7578183f35b8183fd5b50505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061027457507f7f5828d0000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b1561028157506001919050565b7fffffffff0000000000000000000000000000000000000000000000000000000080831614156102b357506000919050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527fffffffff000000000000000000000000000000000000000000000000000000008416600482015273ffffffffffffffffffffffffffffffffffffffff8216906301ffc9a790602401602060405180830381865afa92505050801561039b575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526103989181019061090f565b60015b6103a85750600092915050565b9392505050565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610465576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a454400000000000000000000000000000000000060448201526064016100c1565b61047e816040518060200160405280600081525061066a565b50565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610537576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a454400000000000000000000000000000000000060448201526064016100c1565b6105778383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061066a92505050565b505050565b60006105a67fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b905090565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610661576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a454400000000000000000000000000000000000060448201526064016100c1565b61047e81610759565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80549083905560405173ffffffffffffffffffffffffffffffffffffffff80851691908316907f5570d70a002632a7b0b3c9304cc89efb62d8da9eca0dbd7752c83b737906829690600090a38151156105775760008373ffffffffffffffffffffffffffffffffffffffff16836040516107059190610931565b600060405180830381855af49150503d8060008114610740576040519150601f19603f3d011682016040523d82523d6000602084013e610745565b606091505b50509050806101db573d806000803e806000fd5b60006107837fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b9050817fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103558173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006020828403121561081857600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146103a857600080fd5b803573ffffffffffffffffffffffffffffffffffffffff8116811461086c57600080fd5b919050565b60006020828403121561088357600080fd5b6103a882610848565b6000806000604084860312156108a157600080fd5b6108aa84610848565b9250602084013567ffffffffffffffff808211156108c757600080fd5b818601915086601f8301126108db57600080fd5b8135818111156108ea57600080fd5b8760208285010111156108fc57600080fd5b6020830194508093505050509250925092565b60006020828403121561092157600080fd5b815180151581146103a857600080fd5b6000825160005b818110156109525760208186018101518583015201610938565b81811115610961576000828501525b50919091019291505056fea2646970667358221220e649c37c69d6249070369be01f33af3368fcdcea9814421a048306c2829c125964736f6c634300080a0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103";
var isSuperArgs33 = (xs) => xs.length > 1;
var EIP173Proxy__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs33(args)) {
      super(...args);
    } else {
      super(_abi101, _bytecode33, args[0]);
    }
  }
  getDeployTransaction(implementationAddress, ownerAddress, data, overrides) {
    return super.getDeployTransaction(
      implementationAddress,
      ownerAddress,
      data,
      overrides || {}
    );
  }
  deploy(implementationAddress, ownerAddress, data, overrides) {
    return super.deploy(
      implementationAddress,
      ownerAddress,
      data,
      overrides || {}
    );
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi101);
  }
  static connect(address, runner) {
    return new Contract(address, _abi101, runner);
  }
};
EIP173Proxy__factory.bytecode = _bytecode33;
EIP173Proxy__factory.abi = _abi101;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/EIP173ProxyWithReceive__factory.ts
var _abi102 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "implementationAddress",
        type: "address"
      },
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      }
    ],
    stateMutability: "payable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousImplementation",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newImplementation",
        type: "address"
      }
    ],
    name: "ProxyImplementationUpdated",
    type: "event"
  },
  {
    stateMutability: "payable",
    type: "fallback"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "id",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address"
      }
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      }
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    stateMutability: "payable",
    type: "receive"
  }
];
var _bytecode34 = "0x608060405260405162000c7238038062000c72833981016040819052620000269162000202565b82828262000034826200004c565b620000408382620000be565b50505050505062000300565b60006200006660008051602062000c528339815191525490565b90508160008051602062000c5283398151915255816001600160a01b0316816001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8054908390556040516001600160a01b0380851691908316907f5570d70a002632a7b0b3c9304cc89efb62d8da9eca0dbd7752c83b737906829690600090a38151156200019b576000836001600160a01b031683604051620001429190620002e2565b600060405180830381855af49150503d80600081146200017f576040519150601f19603f3d011682016040523d82523d6000602084013e62000184565b606091505b505090508062000199573d806000803e806000fd5b505b505050565b80516001600160a01b0381168114620001b857600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620001f0578181015183820152602001620001d6565b83811115620001995750506000910152565b6000806000606084860312156200021857600080fd5b6200022384620001a0565b92506200023360208501620001a0565b60408501519092506001600160401b03808211156200025157600080fd5b818601915086601f8301126200026657600080fd5b8151818111156200027b576200027b620001bd565b604051601f8201601f19908116603f01168101908382118183101715620002a657620002a6620001bd565b81604052828152896020848701011115620002c057600080fd5b620002d3836020830160208801620001d3565b80955050505050509250925092565b60008251620002f6818460208701620001d3565b9190910192915050565b61094280620003106000396000f3fe60806040526004361061005e5760003560e01c80634f1ef286116100435780634f1ef286146100c45780638da5cb5b146100d7578063f2fde38b1461011157610065565b806301ffc9a71461006f5780633659cfe6146100a457610065565b3661006557005b61006d610131565b005b34801561007b57600080fd5b5061008f61008a3660046107a6565b61017c565b60405190151581526020015b60405180910390f35b3480156100b057600080fd5b5061006d6100bf366004610811565b61034a565b61006d6100d236600461082c565b610421565b3480156100e357600080fd5b506100ec61051c565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161009b565b34801561011d57600080fd5b5061006d61012c366004610811565b61054b565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5460003681823780813683855af491503d8082833e828015610172578183f35b8183fd5b50505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061020f57507f7f5828d0000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b1561021c57506001919050565b7fffffffff00000000000000000000000000000000000000000000000000000000808316141561024e57506000919050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527fffffffff000000000000000000000000000000000000000000000000000000008416600482015273ffffffffffffffffffffffffffffffffffffffff8216906301ffc9a790602401602060405180830381865afa925050508015610336575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610333918101906108af565b60015b6103435750600092915050565b9392505050565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610405576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a454400000000000000000000000000000000000060448201526064015b60405180910390fd5b61041e816040518060200160405280600081525061060a565b50565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a454400000000000000000000000000000000000060448201526064016103fc565b6105178383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061060a92505050565b505050565b60006105467fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b905090565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610601576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a454400000000000000000000000000000000000060448201526064016103fc565b61041e816106f9565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80549083905560405173ffffffffffffffffffffffffffffffffffffffff80851691908316907f5570d70a002632a7b0b3c9304cc89efb62d8da9eca0dbd7752c83b737906829690600090a38151156105175760008373ffffffffffffffffffffffffffffffffffffffff16836040516106a591906108d1565b600060405180830381855af49150503d80600081146106e0576040519150601f19603f3d011682016040523d82523d6000602084013e6106e5565b606091505b5050905080610176573d806000803e806000fd5b60006107237fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b9050817fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103558173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000602082840312156107b857600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461034357600080fd5b803573ffffffffffffffffffffffffffffffffffffffff8116811461080c57600080fd5b919050565b60006020828403121561082357600080fd5b610343826107e8565b60008060006040848603121561084157600080fd5b61084a846107e8565b9250602084013567ffffffffffffffff8082111561086757600080fd5b818601915086601f83011261087b57600080fd5b81358181111561088a57600080fd5b87602082850101111561089c57600080fd5b6020830194508093505050509250925092565b6000602082840312156108c157600080fd5b8151801515811461034357600080fd5b6000825160005b818110156108f257602081860181015185830152016108d8565b81811115610901576000828501525b50919091019291505056fea264697066735822122025d617949212f6e25493444995ffdc8648140fd8579de6638be329eb1483050f64736f6c634300080a0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103";
var isSuperArgs34 = (xs) => xs.length > 1;
var EIP173ProxyWithReceive__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs34(args)) {
      super(...args);
    } else {
      super(_abi102, _bytecode34, args[0]);
    }
  }
  getDeployTransaction(implementationAddress, ownerAddress, data, overrides) {
    return super.getDeployTransaction(
      implementationAddress,
      ownerAddress,
      data,
      overrides || {}
    );
  }
  deploy(implementationAddress, ownerAddress, data, overrides) {
    return super.deploy(
      implementationAddress,
      ownerAddress,
      data,
      overrides || {}
    );
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi102);
  }
  static connect(address, runner) {
    return new Contract(
      address,
      _abi102,
      runner
    );
  }
};
EIP173ProxyWithReceive__factory.bytecode = _bytecode34;
EIP173ProxyWithReceive__factory.abi = _abi102;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/ERC165__factory.ts
var _abi103 = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "id",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var ERC165__factory2 = class {
  static createInterface() {
    return new Interface(_abi103);
  }
  static connect(address, runner) {
    return new Contract(address, _abi103, runner);
  }
};
ERC165__factory2.abi = _abi103;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/ERC165Storage__factory.ts
var _abi104 = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var ERC165Storage__factory = class {
  static createInterface() {
    return new Interface(_abi104);
  }
  static connect(address, runner) {
    return new Contract(address, _abi104, runner);
  }
};
ERC165Storage__factory.abi = _abi104;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/ERC1967Proxy__factory.ts
var _abi105 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes"
      }
    ],
    stateMutability: "payable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address"
      }
    ],
    name: "AdminChanged",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address"
      }
    ],
    name: "BeaconUpgraded",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address"
      }
    ],
    name: "Upgraded",
    type: "event"
  },
  {
    stateMutability: "payable",
    type: "fallback"
  },
  {
    stateMutability: "payable",
    type: "receive"
  }
];
var _bytecode35 = "0x608060405260405161084e38038061084e83398101604081905261002291610349565b61004d60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd610417565b600080516020610807833981519152146100695761006961043c565b6100758282600061007c565b50506104a1565b610085836100b2565b6000825111806100925750805b156100ad576100ab83836100f260201b6100291760201c565b505b505050565b6100bb8161011e565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606101178383604051806060016040528060278152602001610827602791396101de565b9392505050565b610131816102bc60201b6100551760201c565b6101985760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101bd60008051602061080783398151915260001b6102cb60201b6100711760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606001600160a01b0384163b6102465760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161018f565b600080856001600160a01b0316856040516102619190610452565b600060405180830381855af49150503d806000811461029c576040519150601f19603f3d011682016040523d82523d6000602084013e6102a1565b606091505b5090925090506102b28282866102ce565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102dd575081610117565b8251156102ed5782518084602001fd5b8160405162461bcd60e51b815260040161018f919061046e565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610338578181015183820152602001610320565b838111156100ab5750506000910152565b6000806040838503121561035c57600080fd5b82516001600160a01b038116811461037357600080fd5b60208401519092506001600160401b038082111561039057600080fd5b818501915085601f8301126103a457600080fd5b8151818111156103b6576103b6610307565b604051601f8201601f19908116603f011681019083821181831017156103de576103de610307565b816040528281528860208487010111156103f757600080fd5b61040883602083016020880161031d565b80955050505050509250929050565b60008282101561043757634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825161046481846020870161031d565b9190910192915050565b602081526000825180602084015261048d81604085016020870161031d565b601f01601f19169190910160400192915050565b610357806104b06000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610074565b6100b9565b565b606061004e83836040518060600160405280602781526020016102fb602791396100dd565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b90565b60006100b47f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b3660008037600080366000845af43d6000803e8080156100d8573d6000f35b3d6000fd5b606073ffffffffffffffffffffffffffffffffffffffff84163b610188576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e7472616374000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516101b0919061028d565b600060405180830381855af49150503d80600081146101eb576040519150601f19603f3d011682016040523d82523d6000602084013e6101f0565b606091505b509150915061020082828661020a565b9695505050505050565b6060831561021957508161004e565b8251156102295782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017f91906102a9565b60005b83811015610278578181015183820152602001610260565b83811115610287576000848401525b50505050565b6000825161029f81846020870161025d565b9190910192915050565b60208152600082518060208401526102c881604085016020870161025d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201e3c9348ed6dd2f363e89451207bd8df182bc878dc80d47166301a510c8801e964736f6c634300080a0033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564";
var isSuperArgs35 = (xs) => xs.length > 1;
var ERC1967Proxy__factory2 = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs35(args)) {
      super(...args);
    } else {
      super(_abi105, _bytecode35, args[0]);
    }
  }
  getDeployTransaction(_logic, _data3, overrides) {
    return super.getDeployTransaction(_logic, _data3, overrides || {});
  }
  deploy(_logic, _data3, overrides) {
    return super.deploy(_logic, _data3, overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi105);
  }
  static connect(address, runner) {
    return new Contract(address, _abi105, runner);
  }
};
ERC1967Proxy__factory2.bytecode = _bytecode35;
ERC1967Proxy__factory2.abi = _abi105;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/ERC1967Upgrade__factory.ts
var _abi106 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address"
      }
    ],
    name: "AdminChanged",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address"
      }
    ],
    name: "BeaconUpgraded",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address"
      }
    ],
    name: "Upgraded",
    type: "event"
  }
];
var ERC1967Upgrade__factory2 = class {
  static createInterface() {
    return new Interface(_abi106);
  }
  static connect(address, runner) {
    return new Contract(address, _abi106, runner);
  }
};
ERC1967Upgrade__factory2.abi = _abi106;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/IBeacon__factory.ts
var _abi107 = [
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var IBeacon__factory2 = class {
  static createInterface() {
    return new Interface(_abi107);
  }
  static connect(address, runner) {
    return new Contract(address, _abi107, runner);
  }
};
IBeacon__factory2.abi = _abi107;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/IDiamondCut__factory.ts
var _abi108 = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address"
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8"
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]"
          }
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]"
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes"
      }
    ],
    name: "DiamondCut",
    type: "event"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address"
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8"
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]"
          }
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]"
      },
      {
        internalType: "address",
        name: "_init",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes"
      }
    ],
    name: "diamondCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var IDiamondCut__factory = class {
  static createInterface() {
    return new Interface(_abi108);
  }
  static connect(address, runner) {
    return new Contract(address, _abi108, runner);
  }
};
IDiamondCut__factory.abi = _abi108;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/IDiamondLoupe__factory.ts
var _abi109 = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_functionSelector",
        type: "bytes4"
      }
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "facetAddress_",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "facetAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "facetAddresses_",
        type: "address[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address"
      }
    ],
    name: "facetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "facetFunctionSelectors_",
        type: "bytes4[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "facets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address"
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]"
          }
        ],
        internalType: "struct IDiamondLoupe.Facet[]",
        name: "facets_",
        type: "tuple[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var IDiamondLoupe__factory = class {
  static createInterface() {
    return new Interface(_abi109);
  }
  static connect(address, runner) {
    return new Contract(address, _abi109, runner);
  }
};
IDiamondLoupe__factory.abi = _abi109;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/IERC165__factory.ts
var _abi110 = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var IERC165__factory2 = class {
  static createInterface() {
    return new Interface(_abi110);
  }
  static connect(address, runner) {
    return new Contract(address, _abi110, runner);
  }
};
IERC165__factory2.abi = _abi110;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/IERC173__factory.ts
var _abi111 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var IERC173__factory = class {
  static createInterface() {
    return new Interface(_abi111);
  }
  static connect(address, runner) {
    return new Contract(address, _abi111, runner);
  }
};
IERC173__factory.abi = _abi111;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/IERC1822Proxiable__factory.ts
var _abi112 = [
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
var IERC1822Proxiable__factory2 = class {
  static createInterface() {
    return new Interface(_abi112);
  }
  static connect(address, runner) {
    return new Contract(address, _abi112, runner);
  }
};
IERC1822Proxiable__factory2.abi = _abi112;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/LibDiamond__factory.ts
var _abi113 = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address"
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8"
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]"
          }
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]"
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address"
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes"
      }
    ],
    name: "DiamondCut",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  }
];
var _bytecode36 = "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122011bbb63d5c2b4a5096da6b88339531d47645ba85e19ad62b334df9e78e45b3f764736f6c634300080a0033";
var isSuperArgs36 = (xs) => xs.length > 1;
var LibDiamond__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs36(args)) {
      super(...args);
    } else {
      super(_abi113, _bytecode36, args[0]);
    }
  }
  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }
  deploy(overrides) {
    return super.deploy(overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi113);
  }
  static connect(address, runner) {
    return new Contract(address, _abi113, runner);
  }
};
LibDiamond__factory.bytecode = _bytecode36;
LibDiamond__factory.abi = _abi113;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/OptimizedTransparentUpgradeableProxy__factory.ts
var _abi114 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address"
      },
      {
        internalType: "address",
        name: "admin_",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes"
      }
    ],
    stateMutability: "payable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address"
      }
    ],
    name: "AdminChanged",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address"
      }
    ],
    name: "BeaconUpgraded",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address"
      }
    ],
    name: "Upgraded",
    type: "event"
  },
  {
    stateMutability: "payable",
    type: "fallback"
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "admin_",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "implementation_",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address"
      }
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      }
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    stateMutability: "payable",
    type: "receive"
  }
];
var _bytecode37 = "0x60a060405260405162000f5f38038062000f5f83398101604081905262000026916200044a565b82816200005560017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd6200052a565b60008051602062000f188339815191521462000075576200007562000550565b62000083828260006200013c565b50620000b3905060017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61046200052a565b60008051602062000ef883398151915214620000d357620000d362000550565b6001600160a01b038216608081905260008051602062000ef88339815191528381556040805160008152602081019390935290917f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f910160405180910390a150505050620005b9565b620001478362000179565b600082511180620001555750805b156200017457620001728383620001bb60201b620002a91760201c565b505b505050565b6200018481620001ea565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060620001e3838360405180606001604052806027815260200162000f3860279139620002b2565b9392505050565b62000200816200039860201b620002d51760201c565b620002685760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806200029160008051602062000f1883398151915260001b620003a760201b620002411760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606001600160a01b0384163b6200031c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016200025f565b600080856001600160a01b03168560405162000339919062000566565b600060405180830381855af49150503d806000811462000376576040519150601f19603f3d011682016040523d82523d6000602084013e6200037b565b606091505b5090925090506200038e828286620003aa565b9695505050505050565b6001600160a01b03163b151590565b90565b60608315620003bb575081620001e3565b825115620003cc5782518084602001fd5b8160405162461bcd60e51b81526004016200025f919062000584565b80516001600160a01b03811681146200040057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004385781810151838201526020016200041e565b83811115620001725750506000910152565b6000806000606084860312156200046057600080fd5b6200046b84620003e8565b92506200047b60208501620003e8565b60408501519092506001600160401b03808211156200049957600080fd5b818601915086601f830112620004ae57600080fd5b815181811115620004c357620004c362000405565b604051601f8201601f19908116603f01168101908382118183101715620004ee57620004ee62000405565b816040528281528960208487010111156200050857600080fd5b6200051b8360208301602088016200041b565b80955050505050509250925092565b6000828210156200054b57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b600082516200057a8184602087016200041b565b9190910192915050565b6020815260008251806020840152620005a58160408501602087016200041b565b601f01601f19169190910160400192915050565b608051610900620005f86000396000818161011201528181610176015281816102060152818161025e01528181610287015261030901526109006000f3fe6080604052600436106100435760003560e01c80633659cfe61461005a5780634f1ef2861461007a5780635c60da1b1461008d578063f851a440146100cb57610052565b36610052576100506100e0565b005b6100506100e0565b34801561006657600080fd5b5061005061007536600461076c565b6100fa565b610050610088366004610787565b61015e565b34801561009957600080fd5b506100a26101ec565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100d757600080fd5b506100a2610244565b6100e86102f1565b6100f86100f36103e2565b610422565b565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614156101565761015381604051806020016040528060008152506000610446565b50565b6101536100e0565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614156101e4576101df8383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525060019250610446915050565b505050565b6101df6100e0565b60003373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161415610239576102346103e2565b905090565b6102416100e0565b90565b60003373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016141561023957507f000000000000000000000000000000000000000000000000000000000000000090565b60606102ce83836040518060600160405280602781526020016108a460279139610471565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614156100f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b60006102347f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b3660008037600080366000845af43d6000803e808015610441573d6000f35b3d6000fd5b61044f83610599565b60008251118061045c5750805b156101df5761046b83836102a9565b50505050565b606073ffffffffffffffffffffffffffffffffffffffff84163b610517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e7472616374000000000000000000000000000000000000000000000000000060648201526084016103d9565b6000808573ffffffffffffffffffffffffffffffffffffffff168560405161053f9190610836565b600060405180830381855af49150503d806000811461057a576040519150601f19603f3d011682016040523d82523d6000602084013e61057f565b606091505b509150915061058f8282866105e6565b9695505050505050565b6105a281610639565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606083156105f55750816102ce565b8251156106055782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d99190610852565b73ffffffffffffffffffffffffffffffffffffffff81163b6106dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e74726163740000000000000000000000000000000000000060648201526084016103d9565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b803573ffffffffffffffffffffffffffffffffffffffff8116811461076757600080fd5b919050565b60006020828403121561077e57600080fd5b6102ce82610743565b60008060006040848603121561079c57600080fd5b6107a584610743565b9250602084013567ffffffffffffffff808211156107c257600080fd5b818601915086601f8301126107d657600080fd5b8135818111156107e557600080fd5b8760208285010111156107f757600080fd5b6020830194508093505050509250925092565b60005b8381101561082557818101518382015260200161080d565b8381111561046b5750506000910152565b6000825161084881846020870161080a565b9190910192915050565b602081526000825180602084015261087181604085016020870161080a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212206f70214c51cdd41c05ba0ffeb72b309ca3c8be178fd6e73c12162330799984f364736f6c634300080a0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564";
var isSuperArgs37 = (xs) => xs.length > 1;
var OptimizedTransparentUpgradeableProxy__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs37(args)) {
      super(...args);
    } else {
      super(_abi114, _bytecode37, args[0]);
    }
  }
  getDeployTransaction(_logic, admin_, _data3, overrides) {
    return super.getDeployTransaction(_logic, admin_, _data3, overrides || {});
  }
  deploy(_logic, admin_, _data3, overrides) {
    return super.deploy(_logic, admin_, _data3, overrides || {});
  }
  connect(runner) {
    return super.connect(
      runner
    );
  }
  static createInterface() {
    return new Interface(_abi114);
  }
  static connect(address, runner) {
    return new Contract(
      address,
      _abi114,
      runner
    );
  }
};
OptimizedTransparentUpgradeableProxy__factory.bytecode = _bytecode37;
OptimizedTransparentUpgradeableProxy__factory.abi = _abi114;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/Ownable__factory.ts
var _abi115 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var Ownable__factory2 = class {
  static createInterface() {
    return new Interface(_abi115);
  }
  static connect(address, runner) {
    return new Contract(address, _abi115, runner);
  }
};
Ownable__factory2.abi = _abi115;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/OwnershipFacet__factory.ts
var _abi116 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var _bytecode38 = "0x608060405234801561001057600080fd5b506102d6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063f2fde38b1461006c575b600080fd5b610043610081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61007f61007a366004610263565b6100c6565b005b60006100c17fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b6100ce6100da565b6100d7816101a9565b50565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6004015473ffffffffffffffffffffffffffffffffffffffff1633146101a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201527f6572000000000000000000000000000000000000000000000000000000000000606482015260840160405180910390fd5b565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132080547fffffffffffffffffffffffff0000000000000000000000000000000000000000811673ffffffffffffffffffffffffffffffffffffffff8481169182179093556040517fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b60006020828403121561027557600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461029957600080fd5b939250505056fea2646970667358221220a9616a828975b8bb9adebff6bc35d6f8701d77d91b887d4901827bd22fe268c664736f6c634300080a0033";
var isSuperArgs38 = (xs) => xs.length > 1;
var OwnershipFacet__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs38(args)) {
      super(...args);
    } else {
      super(_abi116, _bytecode38, args[0]);
    }
  }
  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }
  deploy(overrides) {
    return super.deploy(overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi116);
  }
  static connect(address, runner) {
    return new Contract(address, _abi116, runner);
  }
};
OwnershipFacet__factory.bytecode = _bytecode38;
OwnershipFacet__factory.abi = _abi116;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/Proxy__factory.ts
var _abi117 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousImplementation",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newImplementation",
        type: "address"
      }
    ],
    name: "ProxyImplementationUpdated",
    type: "event"
  },
  {
    stateMutability: "payable",
    type: "fallback"
  },
  {
    stateMutability: "payable",
    type: "receive"
  }
];
var Proxy__factory2 = class {
  static createInterface() {
    return new Interface(_abi117);
  }
  static connect(address, runner) {
    return new Contract(address, _abi117, runner);
  }
};
Proxy__factory2.abi = _abi117;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/ProxyAdmin__factory.ts
var _abi118 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address"
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address"
      }
    ],
    name: "changeProxyAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address"
      }
    ],
    name: "getProxyAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address"
      }
    ],
    name: "getProxyImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address"
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address"
      }
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "contract TransparentUpgradeableProxy",
        name: "proxy",
        type: "address"
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      }
    ],
    name: "upgradeAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  }
];
var _bytecode39 = "0x608060405234801561001057600080fd5b50604051610b17380380610b1783398101604081905261002f91610090565b8061003981610040565b50506100c0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100a257600080fd5b81516001600160a01b03811681146100b957600080fd5b9392505050565b610a48806100cf6000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461012b57806399a88ec41461013e578063f2fde38b1461015e578063f3b7dead1461017e57600080fd5b8063204e1c7a14610080578063715018a6146100c95780637eff275e146100e05780638da5cb5b14610100575b600080fd5b34801561008c57600080fd5b506100a061009b3660046107e4565b61019e565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100d557600080fd5b506100de610255565b005b3480156100ec57600080fd5b506100de6100fb366004610808565b6102e7565b34801561010c57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166100a0565b6100de610139366004610870565b6103ee565b34801561014a57600080fd5b506100de610159366004610808565b6104fc565b34801561016a57600080fd5b506100de6101793660046107e4565b6105d1565b34801561018a57600080fd5b506100a06101993660046107e4565b610701565b60008060008373ffffffffffffffffffffffffffffffffffffffff166040516101ea907f5c60da1b00000000000000000000000000000000000000000000000000000000815260040190565b600060405180830381855afa9150503d8060008114610225576040519150601f19603f3d011682016040523d82523d6000602084013e61022a565b606091505b50915091508161023957600080fd5b8080602001905181019061024d9190610964565b949350505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6102e5600061074d565b565b60005473ffffffffffffffffffffffffffffffffffffffff163314610368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d2565b6040517f8f28397000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8281166004830152831690638f283970906024015b600060405180830381600087803b1580156103d257600080fd5b505af11580156103e6573d6000803e3d6000fd5b505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461046f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d2565b6040517f4f1ef28600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841690634f1ef2869034906104c59086908690600401610981565b6000604051808303818588803b1580156104de57600080fd5b505af11580156104f2573d6000803e3d6000fd5b5050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d2565b6040517f3659cfe600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8281166004830152831690633659cfe6906024016103b8565b60005473ffffffffffffffffffffffffffffffffffffffff163314610652576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d2565b73ffffffffffffffffffffffffffffffffffffffff81166106f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102d2565b6106fe8161074d565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff166040516101ea907ff851a44000000000000000000000000000000000000000000000000000000000815260040190565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b73ffffffffffffffffffffffffffffffffffffffff811681146106fe57600080fd5b6000602082840312156107f657600080fd5b8135610801816107c2565b9392505050565b6000806040838503121561081b57600080fd5b8235610826816107c2565b91506020830135610836816107c2565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060006060848603121561088557600080fd5b8335610890816107c2565b925060208401356108a0816107c2565b9150604084013567ffffffffffffffff808211156108bd57600080fd5b818601915086601f8301126108d157600080fd5b8135818111156108e3576108e3610841565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561092957610929610841565b8160405282815289602084870101111561094257600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60006020828403121561097657600080fd5b8151610801816107c2565b73ffffffffffffffffffffffffffffffffffffffff8316815260006020604081840152835180604085015260005b818110156109cb578581018301518582016060015282016109af565b818111156109dd576000606083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160600194935050505056fea2646970667358221220bd6c09ab03bfaf9ec60a4bf8cd98903cecb891974e17e2d76a3b2002c97eeb8964736f6c634300080a0033";
var isSuperArgs39 = (xs) => xs.length > 1;
var ProxyAdmin__factory2 = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs39(args)) {
      super(...args);
    } else {
      super(_abi118, _bytecode39, args[0]);
    }
  }
  getDeployTransaction(initialOwner, overrides) {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  deploy(initialOwner, overrides) {
    return super.deploy(initialOwner, overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi118);
  }
  static connect(address, runner) {
    return new Contract(address, _abi118, runner);
  }
};
ProxyAdmin__factory2.bytecode = _bytecode39;
ProxyAdmin__factory2.abi = _abi118;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/TransparentUpgradeableProxy__factory.ts
var _abi119 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address"
      },
      {
        internalType: "address",
        name: "admin_",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes"
      }
    ],
    stateMutability: "payable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address"
      }
    ],
    name: "AdminChanged",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address"
      }
    ],
    name: "BeaconUpgraded",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address"
      }
    ],
    name: "Upgraded",
    type: "event"
  },
  {
    stateMutability: "payable",
    type: "fallback"
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "admin_",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address"
      }
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "implementation_",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address"
      }
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      }
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  },
  {
    stateMutability: "payable",
    type: "receive"
  }
];
var _bytecode40 = "0x6080604052604051620011b2380380620011b2833981016040819052620000269162000519565b82816200005560017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd620005f9565b6000805160206200116b833981519152146200007557620000756200061f565b6200008382826000620000e7565b50620000b3905060017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104620005f9565b6000805160206200114b83398151915214620000d357620000d36200061f565b620000de8262000124565b50505062000688565b620000f2836200017f565b600082511180620001005750805b156200011f576200011d8383620001c160201b620002ff1760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200014f620001f0565b604080516001600160a01b03928316815291841660208301520160405180910390a16200017c8162000229565b50565b6200018a81620002de565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060620001e983836040518060600160405280602781526020016200118b6027913962000381565b9392505050565b60006200021a6000805160206200114b83398151915260001b6200046760201b620002731760201c565b546001600160a01b0316919050565b6001600160a01b038116620002945760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b80620002bd6000805160206200114b83398151915260001b6200046760201b620002731760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b620002f4816200046a60201b6200032b1760201c565b620003585760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016200028b565b80620002bd6000805160206200116b83398151915260001b6200046760201b620002731760201c565b60606001600160a01b0384163b620003eb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016200028b565b600080856001600160a01b03168560405162000408919062000635565b600060405180830381855af49150503d806000811462000445576040519150601f19603f3d011682016040523d82523d6000602084013e6200044a565b606091505b5090925090506200045d82828662000479565b9695505050505050565b90565b6001600160a01b03163b151590565b606083156200048a575081620001e9565b8251156200049b5782518084602001fd5b8160405162461bcd60e51b81526004016200028b919062000653565b80516001600160a01b0381168114620004cf57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000507578181015183820152602001620004ed565b838111156200011d5750506000910152565b6000806000606084860312156200052f57600080fd5b6200053a84620004b7565b92506200054a60208501620004b7565b60408501519092506001600160401b03808211156200056857600080fd5b818601915086601f8301126200057d57600080fd5b815181811115620005925762000592620004d4565b604051601f8201601f19908116603f01168101908382118183101715620005bd57620005bd620004d4565b81604052828152896020848701011115620005d757600080fd5b620005ea836020830160208801620004ea565b80955050505050509250925092565b6000828210156200061a57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825162000649818460208701620004ea565b9190910192915050565b602081526000825180602084015262000674816040850160208701620004ea565b601f01601f19169190910160400192915050565b610ab380620006986000396000f3fe60806040526004361061005e5760003560e01c80635c60da1b116100435780635c60da1b146100a85780638f283970146100e6578063f851a440146101065761006d565b80633659cfe6146100755780634f1ef286146100955761006d565b3661006d5761006b61011b565b005b61006b61011b565b34801561008157600080fd5b5061006b61009036600461091f565b610135565b61006b6100a336600461093a565b610196565b3480156100b457600080fd5b506100bd610221565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100f257600080fd5b5061006b61010136600461091f565b610276565b34801561011257600080fd5b506100bd6102ba565b610123610347565b61013361012e610435565b61043f565b565b61013d610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816040518060200160405280600081525060006104a3565b50565b61018b61011b565b61019e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610219576102148383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600192506104a3915050565b505050565b61021461011b565b600061022b610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610435565b905090565b61027361011b565b90565b61027e610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e5761018b816104ce565b60006102c4610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561026b57610266610463565b60606103248383604051806060016040528060278152602001610a576027913961052f565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b61034f610463565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b6000610266610657565b3660008037600080366000845af43d6000803e80801561045e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b5473ffffffffffffffffffffffffffffffffffffffff16919050565b6104ac8361067f565b6000825111806104b95750805b15610214576104c883836102ff565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f7610463565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301520160405180910390a161018b816106cc565b606073ffffffffffffffffffffffffffffffffffffffff84163b6105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e74726163740000000000000000000000000000000000000000000000000000606482015260840161042c565b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105fd91906109e9565b600060405180830381855af49150503d8060008114610638576040519150601f19603f3d011682016040523d82523d6000602084013e61063d565b606091505b509150915061064d8282866107d8565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610487565b6106888161082b565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b73ffffffffffffffffffffffffffffffffffffffff811661076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161042c565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b606083156107e7575081610324565b8251156107f75782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c9190610a05565b73ffffffffffffffffffffffffffffffffffffffff81163b6108cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e747261637400000000000000000000000000000000000000606482015260840161042c565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610792565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091a57600080fd5b919050565b60006020828403121561093157600080fd5b610324826108f6565b60008060006040848603121561094f57600080fd5b610958846108f6565b9250602084013567ffffffffffffffff8082111561097557600080fd5b818601915086601f83011261098957600080fd5b81358181111561099857600080fd5b8760208285010111156109aa57600080fd5b6020830194508093505050509250925092565b60005b838110156109d85781810151838201526020016109c0565b838111156104c85750506000910152565b600082516109fb8184602087016109bd565b9190910192915050565b6020815260008251806020840152610a248160408501602087016109bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b29caa54336b3ee836679675e9732ec5e526fb3f803cca2fe336cc3555aba62264736f6c634300080a0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564";
var isSuperArgs40 = (xs) => xs.length > 1;
var TransparentUpgradeableProxy__factory2 = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs40(args)) {
      super(...args);
    } else {
      super(_abi119, _bytecode40, args[0]);
    }
  }
  getDeployTransaction(_logic, admin_, _data3, overrides) {
    return super.getDeployTransaction(_logic, admin_, _data3, overrides || {});
  }
  deploy(_logic, admin_, _data3, overrides) {
    return super.deploy(_logic, admin_, _data3, overrides || {});
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi119);
  }
  static connect(address, runner) {
    return new Contract(
      address,
      _abi119,
      runner
    );
  }
};
TransparentUpgradeableProxy__factory2.bytecode = _bytecode40;
TransparentUpgradeableProxy__factory2.abi = _abi119;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/UUPSUpgradeable__factory.ts
var _abi120 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address"
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address"
      }
    ],
    name: "AdminChanged",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address"
      }
    ],
    name: "BeaconUpgraded",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address"
      }
    ],
    name: "Upgraded",
    type: "event"
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address"
      }
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      }
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function"
  }
];
var UUPSUpgradeable__factory = class {
  static createInterface() {
    return new Interface(_abi120);
  }
  static connect(address, runner) {
    return new Contract(address, _abi120, runner);
  }
};
UUPSUpgradeable__factory.abi = _abi120;

// src/typechain/factories/node_modules/hardhat-deploy/extendedArtifacts/UpgradeableBeacon__factory.ts
var _abi121 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation_",
        type: "address"
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address"
      }
    ],
    name: "Upgraded",
    type: "event"
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address"
      }
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
var _bytecode41 = "0x608060405234801561001057600080fd5b5060405161072e38038061072e83398101604081905261002f91610170565b806100398161004a565b506100438261009a565b50506101a3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100ad8161014560201b61038d1760201c565b6101235760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03163b151590565b80516001600160a01b038116811461016b57600080fd5b919050565b6000806040838503121561018357600080fd5b61018c83610154565b915061019a60208401610154565b90509250929050565b61057c806101b26000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063715018a611610050578063715018a6146100c45780638da5cb5b146100cc578063f2fde38b146100ea57600080fd5b80633659cfe61461006c5780635c60da1b14610081575b600080fd5b61007f61007a366004610509565b6100fd565b005b60015473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61007f6101d0565b60005473ffffffffffffffffffffffffffffffffffffffff1661009b565b61007f6100f8366004610509565b61025d565b60005473ffffffffffffffffffffffffffffffffffffffff163314610183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61018c816103a9565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60005473ffffffffffffffffffffffffffffffffffffffff163314610251576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161017a565b61025b6000610494565b565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161017a565b73ffffffffffffffffffffffffffffffffffffffff8116610381576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161017a565b61038a81610494565b50565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b73ffffffffffffffffffffffffffffffffffffffff81163b61044d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840161017a565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561051b57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461053f57600080fd5b939250505056fea2646970667358221220b869e7d8d8cb8b2b781046fe11187e41a3435b96fb1bee6210683d06a0d93b1464736f6c634300080a0033";
var isSuperArgs41 = (xs) => xs.length > 1;
var UpgradeableBeacon__factory = class extends ContractFactory {
  constructor(...args) {
    if (isSuperArgs41(args)) {
      super(...args);
    } else {
      super(_abi121, _bytecode41, args[0]);
    }
  }
  getDeployTransaction(implementation_, initialOwner, overrides) {
    return super.getDeployTransaction(
      implementation_,
      initialOwner,
      overrides || {}
    );
  }
  deploy(implementation_, initialOwner, overrides) {
    return super.deploy(
      implementation_,
      initialOwner,
      overrides || {}
    );
  }
  connect(runner) {
    return super.connect(runner);
  }
  static createInterface() {
    return new Interface(_abi121);
  }
  static connect(address, runner) {
    return new Contract(address, _abi121, runner);
  }
};
UpgradeableBeacon__factory.bytecode = _bytecode41;
UpgradeableBeacon__factory.abi = _abi121;
/*! Bundled license information:

@noble/hashes/esm/utils.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
*/

exports.AccessControlUpgradeable__factory = AccessControlUpgradeable__factory;
exports.AccessControl__factory = AccessControl__factory;
exports.BeaconProxy__factory = BeaconProxy__factory;
exports.BlockedMessageLib__factory = BlockedMessageLib__factory;
exports.ContextUpgradeable__factory = ContextUpgradeable__factory;
exports.DVNFeeLib__factory = DVNFeeLib__factory;
exports.DVNOptions__factory = DVNOptions__factory;
exports.DVN__factory = DVN__factory;
exports.DiamondCutFacet__factory = DiamondCutFacet__factory;
exports.DiamondERC165Init__factory = DiamondERC165Init__factory;
exports.DiamondLoupeFacetWithoutSupportsInterface__factory = DiamondLoupeFacetWithoutSupportsInterface__factory;
exports.DiamondLoupeFacet__factory = DiamondLoupeFacet__factory;
exports.Diamond__factory = Diamond__factory;
exports.EIP173ProxyWithReceive__factory = EIP173ProxyWithReceive__factory;
exports.EIP173Proxy__factory = EIP173Proxy__factory;
exports.ERC165Storage__factory = ERC165Storage__factory;
exports.ERC165Upgradeable__factory = ERC165Upgradeable__factory;
exports.ERC165__factory = ERC165__factory;
exports.ERC1967Proxy__factory = ERC1967Proxy__factory;
exports.ERC1967Upgrade__factory = ERC1967Upgrade__factory;
exports.ERC20__factory = ERC20__factory;
exports.EndpointV2__factory = EndpointV2__factory;
exports.EnforcedOptions__factory = EnforcedOptions__factory;
exports.Errors__factory = Errors__factory;
exports.ExecutorFeeLib__factory = ExecutorFeeLib__factory;
exports.ExecutorOptions__factory = ExecutorOptions__factory;
exports.Executor__factory = Executor__factory;
exports.Fee__factory = Fee__factory;
exports.IAccessControlUpgradeable__factory = IAccessControlUpgradeable__factory;
exports.IAccessControl__factory = IAccessControl__factory;
exports.IBeacon__factory = IBeacon__factory;
exports.IDVNFeeLib__factory = IDVNFeeLib__factory;
exports.IDVN__factory = IDVN__factory;
exports.IDiamondCut__factory = IDiamondCut__factory;
exports.IDiamondLoupe__factory = IDiamondLoupe__factory;
exports.IERC165Upgradeable__factory = IERC165Upgradeable__factory;
exports.IERC165__factory = IERC165__factory;
exports.IERC173__factory = IERC173__factory;
exports.IERC1822Proxiable__factory = IERC1822Proxiable__factory;
exports.IERC1967__factory = IERC1967__factory;
exports.IERC20Metadata__factory = IERC20Metadata__factory;
exports.IERC20Permit__factory = IERC20Permit__factory;
exports.IERC20__factory = IERC20__factory;
exports.IExecutorFeeLib__factory = IExecutorFeeLib__factory;
exports.IExecutor__factory = IExecutor__factory;
exports.IInspector__factory = IInspector__factory;
exports.ILayerZeroComposer__factory = ILayerZeroComposer__factory;
exports.ILayerZeroDVN__factory = ILayerZeroDVN__factory;
exports.ILayerZeroEndpointV2__factory = ILayerZeroEndpointV2__factory;
exports.ILayerZeroExecutor__factory = ILayerZeroExecutor__factory;
exports.ILayerZeroPriceFeed__factory = ILayerZeroPriceFeed__factory;
exports.ILayerZeroReceiver__factory = ILayerZeroReceiver__factory;
exports.ILayerZeroTreasury__factory = ILayerZeroTreasury__factory;
exports.ILayerZeroUltraLightNodeV2__factory = ILayerZeroUltraLightNodeV2__factory;
exports.IMessageLibManager__factory = IMessageLibManager__factory;
exports.IMessageLib__factory = IMessageLib__factory;
exports.IMessagingChannel__factory = IMessagingChannel__factory;
exports.IMessagingComposer__factory = IMessagingComposer__factory;
exports.IMessagingContext__factory = IMessagingContext__factory;
exports.IOApp__factory = IOApp__factory;
exports.IOFT__factory = IOFT__factory;
exports.IPreCrimeV2Simulator__factory = IPreCrimeV2Simulator__factory;
exports.IPreCrimeV2__factory = IPreCrimeV2__factory;
exports.ISendLib__factory = ISendLib__factory;
exports.IUltraLightNode__factory = IUltraLightNode__factory;
exports.IWorker__factory = IWorker__factory;
exports.Initializable__factory = Initializable__factory;
exports.LibDiamond__factory = LibDiamond__factory;
exports.MessageLibBase__factory = MessageLibBase__factory;
exports.MessageLibManager__factory = MessageLibManager__factory;
exports.MessagingChannel__factory = MessagingChannel__factory;
exports.MessagingComposer__factory = MessagingComposer__factory;
exports.MessagingContext__factory = MessagingContext__factory;
exports.MultiSig__factory = MultiSig__factory;
exports.OApp__factory = OApp__factory;
exports.OFTAdapter__factory = OFTAdapter__factory;
exports.OFTCore__factory = OFTCore__factory;
exports.OFT__factory = OFT__factory;
exports.OmniCounterPreCrime__factory = OmniCounterPreCrime__factory;
exports.OmniCounter__factory = OmniCounter__factory;
exports.OptimizedTransparentUpgradeableProxy__factory = OptimizedTransparentUpgradeableProxy__factory;
exports.OptionsBuilder__factory = OptionsBuilder__factory;
exports.OwnableUpgradeable__factory = OwnableUpgradeable__factory;
exports.Ownable__factory = Ownable__factory;
exports.OwnershipFacet__factory = OwnershipFacet__factory;
exports.PausableUpgradeable__factory = PausableUpgradeable__factory;
exports.Pausable__factory = Pausable__factory;
exports.PreCrimeV2Simulator__factory = PreCrimeV2Simulator__factory;
exports.PreCrimeV2__factory = PreCrimeV2__factory;
exports.PriceFeed__factory = PriceFeed__factory;
exports.ProxyAdmin__factory = ProxyAdmin__factory;
exports.Proxy__factory = Proxy__factory;
exports.ReceiveLibBaseE2__factory = ReceiveLibBaseE2__factory;
exports.ReceiveUln302__factory = ReceiveUln302__factory;
exports.ReceiveUlnBase__factory = ReceiveUlnBase__factory;
exports.ReentrancyGuardUpgradeable__factory = ReentrancyGuardUpgradeable__factory;
exports.SendLibBaseE2__factory = SendLibBaseE2__factory;
exports.SendLibBase__factory = SendLibBase__factory;
exports.SendUln302__factory = SendUln302__factory;
exports.SendUlnBase__factory = SendUlnBase__factory;
exports.SimpleMessageLib__factory = SimpleMessageLib__factory;
exports.TestOFT__factory = TestOFT__factory;
exports.Transfer__factory = Transfer__factory;
exports.TransparentUpgradeableProxy__factory = TransparentUpgradeableProxy__factory;
exports.Treasury__factory = Treasury__factory;
exports.UUPSUpgradeable__factory = UUPSUpgradeable__factory;
exports.UlnBase__factory = UlnBase__factory;
exports.UlnOptions__factory = UlnOptions__factory;
exports.UpgradeableBeacon__factory = UpgradeableBeacon__factory;
exports.WorkerUpgradeable__factory = WorkerUpgradeable__factory;
exports.Worker__factory = Worker__factory;
exports.factories = factories_exports;
//# sourceMappingURL=out.js.map
//# sourceMappingURL=index.cjs.map